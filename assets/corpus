endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x10
mov  QWORD PTR [rbp-0x8], rdi
mov  rcx, QWORD PTR [rip+0x26cd0]
mov  rax, QWORD PTR [rbp-0x8]
mov  edx, 0x106
mov  rsi, rcx
mov  rdi, rax
call 0x35d9d
nop
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x1d0
mov  QWORD PTR [rbp-0x1b8], rdi
mov  DWORD PTR [rbp-0x1bc], esi
mov  DWORD PTR [rbp-0x1c0], edx
mov  QWORD PTR [rbp-0x1c8], rcx
mov  QWORD PTR [rbp-0x90], r8
mov  QWORD PTR [rbp-0x88], r9
test al, al
je   0x360a6
movaps XMMWORD PTR [rbp-0x80], xmm0
movaps XMMWORD PTR [rbp-0x70], xmm1
movaps XMMWORD PTR [rbp-0x60], xmm2
movaps XMMWORD PTR [rbp-0x50], xmm3
movaps XMMWORD PTR [rbp-0x40], xmm4
movaps XMMWORD PTR [rbp-0x30], xmm5
movaps XMMWORD PTR [rbp-0x20], xmm6
movaps XMMWORD PTR [rbp-0x10], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0xb8], rax
xor  eax, eax
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x360d7
mov  rax, QWORD PTR [rbp-0x1b8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x362e4
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x360ee
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax+0x48]
jmp  0x360f5
mov  rax, QWORD PTR [rip+0x289eb]
mov  QWORD PTR [rbp-0x1a0], rax
cmp  QWORD PTR [rbp-0x1a0], 0x0
je   0x362e4
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rdi, rax
call 0x5f80
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x36130
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x36137
mov  rax, QWORD PTR [rip+0x28989]
mov  rdx, QWORD PTR [rbp-0x1a0]
mov  rsi, rdx
mov  rdi, rax
call 0x5c40
cmp  QWORD PTR [rbp-0x1c8], 0x0
je   0x361c8
mov  DWORD PTR [rbp-0x198], 0x20
mov  DWORD PTR [rbp-0x194], 0x30
lea  rax, [rbp+0x10]
mov  QWORD PTR [rbp-0x190], rax
lea  rax, [rbp-0xb0]
mov  QWORD PTR [rbp-0x188], rax
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x3a
call 0x5b60
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x20
call 0x5b60
lea  rdx, [rbp-0x198]
mov  rcx, QWORD PTR [rbp-0x1c8]
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rcx
mov  rdi, rax
call 0x5ba0
cmp  DWORD PTR [rbp-0x1c0], 0x0
je   0x36290
mov  QWORD PTR [rbp-0x1a8], 0x0
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x3a
call 0x5b60
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x20
call 0x5b60
lea  rcx, [rbp-0x180]
mov  eax, DWORD PTR [rbp-0x1c0]
mov  edx, 0xc8
mov  rsi, rcx
mov  edi, eax
call 0x5ad0
mov  QWORD PTR [rbp-0x1a8], rax
cmp  QWORD PTR [rbp-0x1a8], 0x0
jne  0x36277
mov  eax, DWORD PTR [rbp-0x1c0]
mov  edi, eax
call 0x5cf0
mov  QWORD PTR [rbp-0x1a8], rax
cmp  QWORD PTR [rbp-0x1a8], 0x0
jne  0x36277
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax]
mov  rax, QWORD PTR [rax+0x30]
lea  rsi, [rip+0x1ce43]
mov  rdi, rax
call 0x5900
mov  QWORD PTR [rbp-0x1a8], rax
mov  rdx, QWORD PTR [rbp-0x1a0]
mov  rax, QWORD PTR [rbp-0x1a8]
mov  rsi, rdx
mov  rdi, rax
call 0x5c40
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0xa
call 0x5b60
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rdi, rax
call 0x5fa0
cmp  DWORD PTR [rbp-0x1bc], 0x0
je   0x362e4
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x362d7
mov  rax, QWORD PTR [rbp-0x1b8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x20
test eax, eax
jne  0x362e4
mov  eax, DWORD PTR [rbp-0x1bc]
mov  edi, eax
call 0x5a20
nop
mov  rax, QWORD PTR [rbp-0xb8]
sub  rax, QWORD PTR fs:0x28
je   0x362fc
call 0x5ed0
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x130
mov  QWORD PTR [rbp-0x108], rdi
mov  DWORD PTR [rbp-0x10c], esi
mov  QWORD PTR [rbp-0x118], rdx
mov  DWORD PTR [rbp-0x110], ecx
mov  QWORD PTR [rbp-0x120], r8
mov  QWORD PTR [rbp-0x128], r9
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x8], rax
xor  eax, eax
mov  DWORD PTR [rbp-0xf8], 0x0
mov  eax, DWORD PTR [rbp-0x110]
and  eax, 0x1
test eax, eax
jne  0x37ae3
mov  rax, QWORD PTR [rip+0x27020]
test rax, rax
jne  0x37abe
mov  rax, QWORD PTR [rbp-0x118]
mov  rax, QWORD PTR [rax]
mov  QWORD PTR [rip+0x2700a], rax
mov  rax, QWORD PTR [rip+0x26ffb]
test rax, rax
jne  0x37ae3
mov  rax, QWORD PTR [rbp-0x118]
mov  rax, QWORD PTR [rax]
mov  rdi, rax
call 0x37ede
mov  QWORD PTR [rip+0x26fdd], rax
mov  eax, DWORD PTR [rbp-0x110]
and  eax, 0x10
test eax, eax
jne  0x37cd6
mov  eax, 0x10
sub  rax, 0x1
add  rax, 0x88
mov  esi, 0x10
mov  edx, 0x0
div  rsi
imul rax, rax, 0x10
mov  rcx, rax
and  rcx, 0xfffffffffffff000
mov  rdx, rsp
sub  rdx, rcx
cmp  rsp, rdx
je   0x37b3b
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x37b24
mov  rdx, rax
and  edx, 0xfff
sub  rsp, rdx
mov  rdx, rax
and  edx, 0xfff
test rdx, rdx
je   0x37b65
and  eax, 0xfff
sub  rax, 0x8
add  rax, rsp
or   QWORD PTR [rax], 0x0
mov  rax, rsp
add  rax, 0xf
shr  rax, 0x4
shl  rax, 0x4
mov  QWORD PTR [rbp-0xf0], rax
mov  eax, 0x10
sub  rax, 0x1
add  rax, 0x40
mov  edi, 0x10
mov  edx, 0x0
div  rdi
imul rax, rax, 0x10
mov  rcx, rax
and  rcx, 0xfffffffffffff000
mov  rdx, rsp
sub  rdx, rcx
cmp  rsp, rdx
je   0x37bc0
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x37ba9
mov  rdx, rax
and  edx, 0xfff
sub  rsp, rdx
mov  rdx, rax
and  edx, 0xfff
test rdx, rdx
je   0x37bea
and  eax, 0xfff
sub  rax, 0x8
add  rax, rsp
or   QWORD PTR [rax], 0x0
mov  rax, rsp
add  rax, 0xf
shr  rax, 0x4
shl  rax, 0x4
mov  QWORD PTR [rbp-0xe8], rax
mov  rax, QWORD PTR [rbp-0xe8]
mov  edx, 0x38
mov  esi, 0x0
mov  rdi, rax
call 0x5920
mov  rax, QWORD PTR [rbp-0xe8]
mov  rdx, QWORD PTR [rbp-0xf0]
mov  QWORD PTR [rax+0x20], rdx
mov  rax, QWORD PTR [rbp-0xf0]
mov  edx, 0x80
mov  esi, 0x0
mov  rdi, rax
call 0x5920
cmp  QWORD PTR [rbp-0x108], 0x0
je   0x37c6a
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
mov  rdx, QWORD PTR [rbp-0x108]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
lea  rdx, [rip+0x25bfd]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rip+0x3388b]
test rax, rax
jne  0x37c9e
mov  rax, QWORD PTR [rip+0x263c7]
test rax, rax
je   0x37cba
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
lea  rdx, [rip+0x25c69]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbp-0xf0]
mov  QWORD PTR [rax], 0x0
mov  rax, QWORD PTR [rbp-0xe8]
mov  QWORD PTR [rbp-0x108], rax
mov  edi, DWORD PTR [rbp-0x110]
mov  r8, QWORD PTR [rbp-0x128]
mov  rcx, QWORD PTR [rbp-0x118]
mov  edx, DWORD PTR [rbp-0x10c]
mov  rsi, QWORD PTR [rbp-0x108]
lea  rax, [rbp-0xe0]
mov  r9, r8
mov  r8d, edi
mov  rdi, rax
call 0x36b94
mov  DWORD PTR [rbp-0xf4], eax
cmp  DWORD PTR [rbp-0xf4], 0x0
jne  0x37d6d
jmp  0x37d3c
lea  rdx, [rbp-0xf8]
lea  rax, [rbp-0xe0]
mov  rsi, rdx
mov  rdi, rax
call 0x37798
mov  DWORD PTR [rbp-0xf4], eax
cmp  DWORD PTR [rbp-0xf4], 0x0
je   0x37d1d
mov  edx, DWORD PTR [rbp-0xf8]
mov  rcx, QWORD PTR [rbp-0x120]
mov  esi, DWORD PTR [rbp-0xf4]
lea  rax, [rbp-0xe0]
mov  rdi, rax
call 0x37172
mov  DWORD PTR [rbp-0xf4], eax
mov  eax, DWORD PTR [rbp-0xf4]
mov  rdi, QWORD PTR [rbp-0x8]
sub  rdi, QWORD PTR fs:0x28
je   0x37d87
call 0x5ed0
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x20
mov  QWORD PTR [rbp-0x8], rdi
mov  QWORD PTR [rbp-0x10], rsi
mov  DWORD PTR [rbp-0x14], edx
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x35dcd
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x35e78
cmp  QWORD PTR [rbp-0x10], 0x0
je   0x35e78
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x35df4
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x40
test eax, eax
je   0x35df4
or   DWORD PTR [rbp-0x14], 0x80
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x35e05
mov  rax, QWORD PTR [rbp-0x8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x35e0c
mov  rax, QWORD PTR [rip+0x28cb4]
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x35e1c
mov  rdx, QWORD PTR [rbp-0x8]
mov  rdi, QWORD PTR [rdx]
jmp  0x35e21
mov  edi, 0x0
mov  ecx, DWORD PTR [rbp-0x14]
mov  rdx, QWORD PTR [rbp-0x10]
mov  rsi, QWORD PTR [rbp-0x8]
mov  r8, rax
call 0x35855
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x35e49
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x20
test eax, eax
jne  0x35e78
mov  eax, DWORD PTR [rbp-0x14]
and  eax, 0x100
test eax, eax
je   0x35e62
mov  eax, DWORD PTR [rip+0x28b8d]
mov  edi, eax
call 0x5a20
mov  eax, DWORD PTR [rbp-0x14]
and  eax, 0x200
test eax, eax
je   0x35e78
mov  edi, 0x0
call 0x5a20
nop
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0xf0
mov  QWORD PTR [rbp-0xe8], rdi
mov  QWORD PTR [rbp-0xf0], rsi
mov  QWORD PTR [rbp-0xa0], rdx
mov  QWORD PTR [rbp-0x98], rcx
mov  QWORD PTR [rbp-0x90], r8
mov  QWORD PTR [rbp-0x88], r9
test al, al
je   0x35ed8
movaps XMMWORD PTR [rbp-0x80], xmm0
movaps XMMWORD PTR [rbp-0x70], xmm1
movaps XMMWORD PTR [rbp-0x60], xmm2
movaps XMMWORD PTR [rbp-0x50], xmm3
movaps XMMWORD PTR [rbp-0x40], xmm4
movaps XMMWORD PTR [rbp-0x30], xmm5
movaps XMMWORD PTR [rbp-0x20], xmm6
movaps XMMWORD PTR [rbp-0x10], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0xb8], rax
xor  eax, eax
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x35f09
mov  rax, QWORD PTR [rbp-0xe8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x36031
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x35f20
mov  rax, QWORD PTR [rbp-0xe8]
mov  rax, QWORD PTR [rax+0x48]
jmp  0x35f27
mov  rax, QWORD PTR [rip+0x28bb9]
mov  QWORD PTR [rbp-0xd8], rax
cmp  QWORD PTR [rbp-0xd8], 0x0
je   0x36031
mov  rax, QWORD PTR [rbp-0xd8]
mov  rdi, rax
call 0x5f80
mov  DWORD PTR [rbp-0xd0], 0x10
mov  DWORD PTR [rbp-0xcc], 0x30
lea  rax, [rbp+0x10]
mov  QWORD PTR [rbp-0xc8], rax
lea  rax, [rbp-0xb0]
mov  QWORD PTR [rbp-0xc0], rax
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x35f8f
mov  rax, QWORD PTR [rbp-0xe8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x35f96
mov  rax, QWORD PTR [rip+0x28b2a]
mov  rdx, QWORD PTR [rbp-0xd8]
mov  rsi, rdx
mov  rdi, rax
call 0x5c40
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0x3a
call 0x5b60
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0x20
call 0x5b60
lea  rdx, [rbp-0xd0]
mov  rcx, QWORD PTR [rbp-0xf0]
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rcx
mov  rdi, rax
call 0x5ba0
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0xa
call 0x5b60
mov  rcx, QWORD PTR [rbp-0xd8]
mov  rax, QWORD PTR [rbp-0xe8]
mov  edx, 0x104
mov  rsi, rcx
mov  rdi, rax
call 0x35d9d
mov  rax, QWORD PTR [rbp-0xd8]
mov  rdi, rax
call 0x5fa0
nop
mov  rax, QWORD PTR [rbp-0xb8]
sub  rax, QWORD PTR fs:0x28
je   0x36049
call 0x5ed0
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x20
mov  QWORD PTR [rbp-0x8], rdi
mov  QWORD PTR [rbp-0x10], rsi
mov  DWORD PTR [rbp-0x14], edx
mov  QWORD PTR [rbp-0x20], rcx
mov  rsi, QWORD PTR [rbp-0x20]
mov  ecx, DWORD PTR [rbp-0x14]
mov  rdx, QWORD PTR [rbp-0x10]
mov  rax, QWORD PTR [rbp-0x8]
mov  r8, rsi
mov  esi, 0x0
mov  rdi, rax
call 0x35855
nop
leave
ret
endbr64
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x9165
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x17e26]
mov  rdi, QWORD PTR [rax]
call 0x6340
mov  rbx, QWORD PTR [rip+0x17e27]
mov  esi, 0x1
xor  eax, eax
mov  rcx, QWORD PTR [rip+0x18191]
lea  rdx, [rip+0xeffd]
mov  rdi, QWORD PTR [rbx]
call 0x60d0
mov  rdi, QWORD PTR [rbx]
mov  esi, 0x1
mov  rcx, rsp
lea  rax, [rsp+0xf0]
mov  rdx, r12
mov  DWORD PTR [rsp], 0x8
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x6960
mov  rsi, QWORD PTR [rbx]
mov  edi, 0xa
call 0x6840
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x9207
add  rsp, 0xd8
pop  rbx
pop  r12
ret
call 0x6140
endbr64
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x20
xor  edx, edx
mov  esi, 0x7fffffff
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1018], rax
xor  eax, eax
movsxd rbp, edi
mov  edi, ebp
call 0x57b0
test eax, eax
jne  0x18390
mov  rax, QWORD PTR [rsp+0x1018]
sub  rax, QWORD PTR fs:0x28
jne  0x1849d
add  rsp, 0x1020
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
call 0x54a0
lea  r12, [rsp+0x10]
mov  ecx, 0x1000
lea  r8, [rip+0xc684]
movsxd r9, eax
mov  rdi, r12
mov  edx, 0x1
mov  esi, 0x1000
xor  eax, eax
lea  r13, [rsp+0x8]
call 0x4ef0
mov  rdi, r12
call 0x54e0
mov  r12, rax
test rax, rax
je   0x18440
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, r12
call 0x5510
test rax, rax
je   0x18490
lea  rbx, [rax+0x13]
mov  edx, 0xa
mov  rsi, r13
mov  rdi, rbx
call 0x5450
mov  r14, rax
mov  rax, QWORD PTR [rsp+0x8]
cmp  rbx, rax
je   0x183d8
cmp  BYTE PTR [rax], 0x0
jne  0x183d8
cmp  r14, 0x7ffffffe
ja   0x183d8
movsxd rax, ebp
cmp  rax, r14
jg   0x183d8
mov  rdi, r12
call 0x4e90
cdqe
cmp  rax, r14
je   0x183d8
mov  edi, r14d
call 0x5780
jmp  0x183d8
nop  DWORD PTR [rax+0x0]
mov  edi, 0x4
call 0x4f80
mov  rbx, rax
test rax, rax
mov  eax, 0x100
cmovs  rbx, rax
cmp  rbp, rbx
jge  0x18364
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, ebp
call 0x5780
mov  rdi, rbp
mov  esi, 0x1
call 0x20050
mov  rbp, rax
cmp  rax, rbx
jl   0x18468
jmp  0x18364
nop  DWORD PTR [rax+0x0]
mov  rdi, r12
call 0x5590
jmp  0x18364
endbr64
xor  eax, eax
ret
endbr64
push r13
push r12
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rip+0x27120]
test rbx, rbx
jne  0x135f8
jmp  0x13628
nop
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x1360a
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdi, rbp
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x135f0
cmp  eax, 0xffffffff
je   0x13616
cmp  eax, 0x1
jne  0x13628
xor  eax, eax
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0x1811c]
mov  rdi, 0xffffffffffffffff
call 0x7290
test rax, rax
je   0x1364f
add  rsp, 0x8
mov  rdi, rbp
pop  rbx
pop  rbp
pop  r12
pop  r13
jmp  rax
cmp  BYTE PTR [rbp+0x0], 0x0
mov  r12, QWORD PTR [rip+0x25c46]
je   0x136d2
mov  esi, 0x3d
mov  rdi, rbp
call 0x73b0
test rax, rax
jne  0x136d2
mov  rdi, rbp
call 0x72d0
mov  r13, rax
jmp  0x1369d
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, r13
mov  rsi, rbx
mov  rdi, rbp
call 0x70a0
test eax, eax
jne  0x13699
cmp  BYTE PTR [rbx+r13*1], 0x3d
je   0x136ab
add  r12, 0x8
mov  rbx, QWORD PTR [r12]
test rbx, rbx
jne  0x13680
jmp  0x13614
mov  rax, QWORD PTR [r12+0x8]
mov  QWORD PTR [r12], rax
test rax, rax
je   0x13614
mov  rax, r12
mov  rdx, QWORD PTR [rax+0x10]
add  rax, 0x8
mov  QWORD PTR [rax], rdx
test rdx, rdx
jne  0x136c0
jmp  0x1369d
call 0x7070
mov  DWORD PTR [rax], 0x16
mov  eax, 0xffffffff
endbr64
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x10
mov  rbx, QWORD PTR [rip+0x27442]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
test rbx, rbx
je   0x13368
mov  rbp, rsp
jmp  0x13318
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x1332d
mov  rdx, QWORD PTR [rbx+0x10]
mov  rsi, rbp
mov  rdi, r12
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x13310
mov  r8, QWORD PTR [rsp]
cmp  eax, 0xffffffff
je   0x13360
cmp  eax, 0x1
jne  0x13368
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x13388
add  rsp, 0x10
mov  rax, r8
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
xor  r8d, r8d
jmp  0x1333b
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x13388
add  rsp, 0x10
mov  rdi, r12
pop  rbx
pop  rbp
pop  r12
jmp  0x13230
endbr64
push r14
push r13
mov  r13d, edx
push r12
mov  r12, rdi
push rbp
mov  rbp, rsi
push rbx
sub  rsp, 0x10
mov  rbx, QWORD PTR [rip+0x272d0]
test rbx, rbx
jne  0x13458
jmp  0x13490
nop  WORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x13470
mov  edx, r13d
mov  rcx, QWORD PTR [rbx+0x10]
mov  rsi, rbp
mov  rdi, r12
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x13450
cmp  eax, 0xffffffff
je   0x1347c
cmp  eax, 0x1
jne  0x13490
xor  eax, eax
add  rsp, 0x10
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0x182b6]
mov  rdi, 0xffffffffffffffff
call 0x7290
test rax, rax
je   0x134c0
add  rsp, 0x10
mov  edx, r13d
mov  rsi, rbp
mov  rdi, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  rax
nop
test r12, r12
je   0x135b4
movzx  ebx, BYTE PTR [r12]
test bl, bl
je   0x135b4
mov  rdi, rbp
call 0x72d0
cmp  bl, 0x3d
jne  0x134fb
lea  rdi, [rax+0x2]
call 0x77f0
mov  r14, rax
test rax, rax
jne  0x13546
mov  eax, 0xffffffff
jmp  0x1347c
mov  rdx, r12
movzx  ecx, BYTE PTR [rdx+0x1]
add  rdx, 0x1
test cl, cl
je   0x1350f
cmp  cl, 0x3d
jne  0x134fe
sub  rdx, r12
lea  rdi, [rax+rdx*1+0x2]
call 0x77f0
mov  r14, rax
test rax, rax
je   0x134f4
mov  rax, r14
mov  rdx, r12
nop  WORD PTR [rax+rax*1+0x0]
add  rdx, 0x1
mov  BYTE PTR [rax], bl
add  rax, 0x1
movzx  ebx, BYTE PTR [rdx]
test bl, bl
je   0x13546
cmp  bl, 0x3d
jne  0x13530
mov  BYTE PTR [rax], 0x3d
lea  rdx, [rax+0x1]
movzx  eax, BYTE PTR [rbp+0x0]
test al, al
je   0x1356a
nop  DWORD PTR [rax]
add  rbp, 0x1
mov  BYTE PTR [rdx], al
add  rdx, 0x1
movzx  eax, BYTE PTR [rbp+0x0]
test al, al
jne  0x13558
mov  BYTE PTR [rdx], 0x0
test r13d, r13d
jne  0x1358e
mov  rdi, r12
call 0x132d0
test rax, rax
je   0x1358e
mov  rdi, r14
call 0x6fe0
xor  eax, eax
jmp  0x1347c
mov  rdi, r14
call 0xb350
cmp  eax, 0xffffffff
jne  0x1347a
mov  rdi, r14
mov  DWORD PTR [rsp+0xc], eax
call 0x6fe0
mov  eax, DWORD PTR [rsp+0xc]
jmp  0x1347c
call 0x7070
mov  DWORD PTR [rax], 0x16
mov  eax, 0xffffffff
endbr64
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rip+0x27374]
test rbx, rbx
jne  0x133b8
jmp  0x133e0
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x133ca
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdi, rbp
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x133b0
cmp  eax, 0xffffffff
je   0x133d6
cmp  eax, 0x1
jne  0x133e0
xor  eax, eax
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax]
mov  rdi, 0xffffffffffffffff
lea  rsi, [rip+0x18356]
call 0x7290
mov  rdi, rbp
test rax, rax
je   0x13408
add  rsp, 0x8
pop  rbx
pop  rbp
jmp  rax
nop  DWORD PTR [rax+rax*1+0x0]
add  rsp, 0x8
pop  rbx
pop  rbp
jmp  0xb350
endbr64
endbr64
test rdi, rdi
je   0x20659
test rsi, rsi
je   0x20659
xor  eax, eax
jmp  0x20650
nop  WORD PTR [rax+rax*1+0x0]
add  rax, 0x1
test dl, dl
je   0x20660
movzx  edx, BYTE PTR [rdi+rax*1]
cmp  dl, BYTE PTR [rsi+rax*1]
je   0x20648
xor  eax, eax
ret
nop  DWORD PTR [rax+0x0]
mov  eax, 0x1
endbr64
push r12
xor  edx, edx
mov  r12d, esi
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
mov  rdi, rbp
48 b8 0c 00 00 00 12 00 00 00 movabs rax, 0x120000000c
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x60], 0x0
shl  eax, 0xd
or   al, 0xa6
or   eax, edx
cmp  r12d, 0x1
mov  WORD PTR [rbx+0x58], ax
mov  eax, 0x2
sbb  al, 0xff
mov  BYTE PTR [rbx+0x5b], al
lea  rax, [rip+0x13e1a]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
endbr64
push r13
mov  r13, rsi
mov  esi, 0x70
push r12
mov  r12d, edx
xor  edx, edx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  QWORD PTR [rbx], r13
48 b8 0c 00 00 00 12 00 00 00 movabs rax, 0x120000000c
mov  QWORD PTR [rbx+0x10], rax
lea  rax, [rip+0x13cf2]
mov  DWORD PTR [rbx+0x8], r12d
mov  DWORD PTR [rbx+0xc], 0x2
mov  BYTE PTR [rbx+0x58], 0xb6
mov  BYTE PTR [rbx+0x63], 0x0
mov  BYTE PTR [rbx+0x62], r12b
mov  QWORD PTR [rbp+0x50], rax
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
jne  0xf3f0
mov  rdi, rbp
call 0x17650
add  rsp, 0x8
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, QWORD PTR [rip+0x47d69]
mov  edx, 0x13
mov  esi, 0x1
lea  rdi, [rip+0x13caa]
call 0xbaf0
endbr64
mov  DWORD PTR [rip+0x37fee], edi
mov  rdi, QWORD PTR [rip+0x37fd7]
push r12
push rbp
lea  rbp, [rip+0x37fa5]
push rbx
mov  rbx, rsi
mov  QWORD PTR [rip+0x37fca], rsi
cmp  rdi, rbp
je   0x204d5
test rdi, rdi
je   0x204d5
call 0xb660
mov  r12, QWORD PTR [rbx]
mov  rdi, r12
call 0xb780
lea  edi, [rax+0x1]
mov  rbx, rax
cmp  edi, 0x20
jg   0x20510
mov  QWORD PTR [rip+0x37f96], rbp
lea  rdi, [rip+0x37f67]
lea  rdx, [rbx+0x1]
mov  rsi, r12
pop  rbx
pop  rbp
pop  r12
jmp  0xb960
nop  DWORD PTR [rax+0x0]
movsxd rdi, edi
call 0xb9c0
mov  QWORD PTR [rip+0x37f69], rax
mov  rdi, rax
test rax, rax
jne  0x204f9
pop  rbx
pop  rbp
pop  r12
endbr64
push r12
push rbp
sub  rsp, 0x8
mov  r12, QWORD PTR [rip+0x37a0e]
test r12, r12
je   0x20de0
mov  rbp, rdi
mov  rdi, r12
call 0xb7f0
test rbp, rbp
je   0x20de0
add  rsp, 0x8
mov  rsi, rbp
mov  rdi, r12
pop  rbp
pop  r12
jmp  0x20b70
nop  DWORD PTR [rax+0x0]
add  rsp, 0x8
xor  eax, eax
pop  rbp
pop  r12
endbr64
push rbx
mov  rbx, rdi
mov  rdi, rsi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x18141
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  r10, QWORD PTR [rbx+0xb8]
mov  r8, rdi
mov  r9, rsp
lea  rax, [rsp+0xe0]
mov  esi, 0x1000
mov  rcx, 0xffffffffffffffff
mov  edx, 0x1
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  rdi, r10
mov  QWORD PTR [rsp+0x10], rax
mov  rax, r10
sub  rax, QWORD PTR [rbx+0xa8]
sub  rsi, rax
mov  DWORD PTR [rsp], 0x10
mov  DWORD PTR [rsp+0x4], 0x30
call 0xba00
test eax, eax
js   0x181d8
movsxd rdx, eax
add  QWORD PTR [rbx+0xb8], rdx
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x181e4
add  rsp, 0xd0
pop  rbx
ret
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [rbx+0xb8]
mov  BYTE PTR [rdx], 0x0
jmp  0x181b8
endbr64
mov  rdi, QWORD PTR [rip+0x37a75]
test rdi, rdi
je   0x20d70
sub  rsp, 0x8
call 0xb750
mov  QWORD PTR [rip+0x37a5c], 0x0
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
xor  eax, eax
endbr64
push r13
push r12
mov  r12d, esi
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
add  DWORD PTR [rdi+0x28], 0x1
call 0xeb80
test eax, eax
js   0xecf8
sub  DWORD PTR [rbx+0x28], 0x1
mov  eax, 0x1
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax]
mov  rdi, rbx
call 0xeb80
mov  r8d, eax
mov  eax, DWORD PTR [rbx+0x28]
sub  eax, 0x1
test r8d, r8d
jns  0xedbb
xor  ebp, ebp
test r12d, r12d
jg   0xed37
jmp  0xed9e
xchg ax, ax
cmp  eax, 0x3
je   0xed78
mov  edi, 0x1
add  ebp, 0x1
call 0xbb80
cmp  r12d, ebp
je   0xed98
mov  rdi, rbx
call 0xeb80
test eax, eax
jns  0xece1
mov  rax, QWORD PTR [rbx+0x48]
test BYTE PTR [rax+0x2c], 0x8
jne  0xed25
mov  rdi, rbx
call 0x17be0
mov  rdi, rbx
mov  r13d, eax
call 0x17b60
cmp  eax, 0x2
jne  0xed20
cmp  r13d, 0x3a
je   0xed78
cmp  r13d, 0x30
jne  0xed25
nop  DWORD PTR [rax+0x0]
mov  eax, DWORD PTR [rbx+0x28]
cmp  eax, 0x1
jle  0xedae
sub  eax, 0x1
mov  DWORD PTR [rbx+0x28], eax
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rbx+0x28]
sub  eax, 0x1
mov  DWORD PTR [rbx+0x28], eax
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  rdi, rbx
call 0x175a0
mov  eax, DWORD PTR [rbx+0x28]
jmp  0xed80
mov  DWORD PTR [rbx+0x28], eax
mov  eax, 0x1
endbr64
xor  edx, edx
endbr64
push r12
xor  edx, edx
mov  r12, rsi
mov  esi, 0x70
push rbp
mov  rbp, rdi
bswap  r12d
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], 0x0
mov  rdi, rbp
48 b8 00 00 00 00 0a 00 00 00 movabs rax, 0xa00000000
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  DWORD PTR [rbx+0x5d], r12d
shl  eax, 0xd
or   eax, 0x53
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x130ee]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
endbr64
lea  rdi, [rip+0x2bd45]
endbr64
push r14
mov  r14, rsi
mov  esi, 0x70
push r13
mov  r13d, ecx
push r12
mov  r12d, edx
xor  edx, edx
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  DWORD PTR [rbx+0x8], r12d
mov  rdi, rbp
48 b8 02 00 00 00 0a 00 00 00 movabs rax, 0xa00000002
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 3c 00 00 00 movabs rax, 0x3c00000012
mov  QWORD PTR [rbx+0x14], rax
xor  eax, eax
test r13d, r13d
movzx  edx, WORD PTR [rbp+0x14]
setne  al
rol  r12w, 0x8
mov  QWORD PTR [rbx], r14
shl  eax, 0x8
shl  edx, 0xd
mov  WORD PTR [rbx+0x5f], r12w
or   eax, 0x54
or   eax, edx
movzx  edx, WORD PTR [rbx+0x58]
and  dx, 0x1e00
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x12f2e]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
pop  r13
pop  r14
endbr64
lea  rdi, [rip+0x2ca75]
endbr64
push r12
push rbx
sub  rsp, 0x8
mov  r12, QWORD PTR [rip+0x37616]
test r12, r12
je   0x211da
mov  rbx, rdi
jmp  0x211ca
nop  DWORD PTR [rax+0x0]
mov  r12, QWORD PTR [r12+0x18]
test r12, r12
je   0x211da
mov  rdi, QWORD PTR [r12]
mov  rsi, rbx
call 0xb8d0
test eax, eax
jne  0x211c0
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  r12
endbr64
push r12
mov  r12, rsi
push rbp
mov  rbp, rdx
push rbx
mov  rbx, rdi
sub  rsp, 0x110
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
add  DWORD PTR [rdi+0x28], 0x1
mov  rsi, rsp
call 0x12c00
sub  DWORD PTR [rbx+0x28], 0x1
test rax, rax
je   0x12de5
test r12, r12
je   0x12d94
movzx  edx, WORD PTR [rax+0xe]
rol  dx, 0x8
movzx  edx, dx
mov  DWORD PTR [r12], edx
cmp  BYTE PTR [rax+0x1], 0x1b
ja   0x12dd8
movzx  eax, WORD PTR [rax+0x14]
rol  ax, 0x8
movzx  eax, ax
xor  r8d, r8d
test rbp, rbp
je   0x12db0
mov  DWORD PTR [rbp+0x0], eax
mov  rax, QWORD PTR [rsp+0x108]
sub  rax, QWORD PTR fs:0x28
jne  0x12ded
add  rsp, 0x110
mov  eax, r8d
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
movzx  eax, WORD PTR [rax+0x1c]
rol  ax, 0x8
movzx  eax, ax
jmp  0x12da5
mov  r8d, 0xffffffff
jmp  0x12db0
endbr64
push r14
push r13
mov  r13d, ecx
push r12
push rbp
mov  rbp, rdi
push rbx
mov  rax, QWORD PTR [rdi+0x48]
mov  rbx, rdx
mov  r9d, DWORD PTR [rax+0x24]
test r9d, r9d
jne  0x17350
mov  r14d, DWORD PTR [rax+0x28]
test r14d, r14d
jne  0x17350
cmp  BYTE PTR [rax+0x2c], 0x0
jne  0x17350
cmp  BYTE PTR [rax+0x2f], 0x0
jne  0x17350
mov  r12, rdx
test rsi, rsi
je   0x17394
mov  DWORD PTR [rsi], 0x0
mov  r12, rbx
jmp  0x17394
nop  WORD PTR [rax+rax*1+0x0]
test rsi, rsi
je   0x1735b
mov  DWORD PTR [rsi], 0xffffffff
mov  r8d, DWORD PTR [rbp+0x28]
test r8d, r8d
jle  0x1736f
mov  edi, DWORD PTR [rbp+0x2c]
test edi, edi
je   0x17420
mov  edx, r13d
mov  rsi, rbx
mov  rdi, rbp
call 0x17090
test eax, eax
js   0x17405
movsxd r12, eax
sub  r13d, eax
mov  r14d, 0xffffffff
add  r12, rbx
mov  esi, DWORD PTR [rbp+0x28]
test esi, esi
jle  0x173a2
mov  ecx, DWORD PTR [rbp+0x2c]
test ecx, ecx
je   0x17410
mov  rax, QWORD PTR [rbp+0x48]
mov  r9d, DWORD PTR [rax+0x20]
test r9d, r9d
je   0x173e2
js   0x17430
xor  eax, eax
movsxd rsi, r13d
lea  r8, [rip+0xda99]
mov  rdi, r12
mov  rcx, 0xffffffffffffffff
mov  edx, 0x1
call 0xb650
test eax, eax
js   0x17405
movsxd rdx, eax
sub  r13d, eax
add  r12, rdx
mov  edx, DWORD PTR [rbp+0x2c]
test edx, edx
jle  0x17410
mov  edx, r13d
mov  rsi, r12
mov  rdi, rbp
call 0x16ec0
test eax, eax
js   0x17405
cdqe
add  r12, rax
mov  eax, r12d
sub  eax, ebx
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xchg ax, ax
cmp  r14d, 0xffffffff
jne  0x17400
jmp  0x17423
nop  DWORD PTR [rax+rax*1+0x0]
mov  r12, rbx
mov  eax, DWORD PTR [rbp+0x28]
test eax, eax
jg   0x17400
jmp  0x173e9
nop  DWORD PTR [rax+0x0]
xor  eax, eax
movsxd rsi, r13d
lea  rdx, [rip+0xda10]
mov  rdi, r12
call 0xb800
test eax, eax
js   0x17405
movsxd rdx, eax
sub  r13d, eax
mov  rax, QWORD PTR [rbp+0x48]
add  r12, rdx
mov  r9d, DWORD PTR [rax+0x20]
endbr64
push r12
mov  r12, rdi
push rbp
sub  rsp, 0x8
call 0x159c0
test rax, rax
je   0x16215
mov  rbp, rax
lea  rax, [rip+0x1d1fe]
lea  rdi, [rip+0xeb37]
mov  QWORD PTR [rbp+0x0], rax
call 0xb6e0
mov  rax, QWORD PTR [rbp+0x0]
mov  rsi, r12
mov  rdi, rbp
call QWORD PTR [rax+0x10]
call 0x19c70
mov  rdi, rbp
mov  rsi, r12
call QWORD PTR [rax+0x10]
mov  rdi, rbp
call 0x15910
add  rsp, 0x8
xor  eax, eax
pop  rbp
pop  r12
endbr64
push rbp
mov  ecx, edx
mov  rdx, rsi
xor  esi, esi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rbp, QWORD PTR [rdi+0x28]
mov  QWORD PTR [rdi+0x28], 0x0
call 0x17300
mov  QWORD PTR [rbx+0x28], rbp
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
push r13
push r12
mov  r12d, edx
push rbp
push rbx
mov  rbx, rsi
sub  rsp, 0x8
mov  rbp, QWORD PTR [rip+0x405b5]
mov  rsi, rbp
call 0xb840
test r12d, r12d
jle  0x16bee
lea  eax, [r12-0x1]
lea  r12, [rip+0xe197]
lea  r13, [rbx+rax*1+0x1]
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  rbx, r13
jne  0x16bd0
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x18
mov  edx, 0x1000
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1008], rax
xor  eax, eax
mov  rbp, rsp
mov  rbx, rdi
mov  rsi, rbp
call 0x16830
test eax, eax
jle  0x16a7d
mov  rdi, QWORD PTR [rbx+0xc0]
mov  edx, eax
mov  rsi, rbp
call 0x207b0
mov  rdi, QWORD PTR [rbx+0xc0]
call 0xb9d0
mov  rax, QWORD PTR [rsp+0x1008]
sub  rax, QWORD PTR fs:0x28
jne  0x16a9a
add  rsp, 0x1018
pop  rbx
pop  rbp
ret
endbr64
push rbx
mov  ecx, 0x1000
mov  rbx, rdi
sub  rsp, 0x10
mov  rdx, QWORD PTR [rdi+0xb8]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
lea  rsi, [rsp+0x4]
mov  rax, rdx
sub  rax, QWORD PTR [rdi+0xa8]
sub  ecx, eax
call 0x17300
cdqe
add  QWORD PTR [rbx+0xb8], rax
mov  eax, DWORD PTR [rsp+0x4]
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0x174c1
add  rsp, 0x10
pop  rbx
ret
endbr64
lea  rdi, [rip+0x1a135]
endbr64
mov  ecx, edx
mov  rdx, rsi
mov  rsi, rdi
mov  rdi, QWORD PTR [rip+0x4053d]
endbr64
lea  rdi, [rip+0x1af65]
endbr64
push r15
xor  eax, eax
mov  r15, rdx
lea  rdx, [rip+0xd066]
push r14
mov  r14, rcx
mov  rcx, rsi
mov  esi, 0x1
push r13
mov  r13, r8
push r12
mov  r12, r9
push rbp
mov  rbp, rdi
push rbx
lea  rbx, [rip+0x674b]
sub  rsp, 0x18
mov  r8d, DWORD PTR [rsp+0x58]
mov  r9d, DWORD PTR [rsp+0x50]
mov  DWORD PTR [rsp+0x8], r8d
mov  DWORD PTR [rsp+0xc], r9d
call 0xbb10
mov  rcx, r15
mov  rdi, rbp
mov  esi, 0x1
lea  rdx, [rip+0xd02a]
xor  eax, eax
call 0xbb10
mov  rcx, r14
mov  rdi, rbp
mov  esi, 0x1
lea  rdx, [rip+0xd027]
xor  eax, eax
call 0xbb10
mov  rcx, r13
mov  rdi, rbp
mov  esi, 0x1
lea  rdx, [rip+0xd026]
xor  eax, eax
call 0xbb10
mov  rcx, r12
mov  rdi, rbp
mov  esi, 0x1
lea  rdx, [rip+0xd023]
xor  eax, eax
lea  r12, [rip+0x5625]
call 0xbb10
mov  r9d, DWORD PTR [rsp+0xc]
mov  rcx, r12
mov  rdi, rbp
lea  rdx, [rip+0xd019]
mov  esi, 0x1
test r9d, r9d
cmovne rcx, rbx
xor  eax, eax
call 0xbb10
mov  r8d, DWORD PTR [rsp+0x8]
mov  rcx, r12
mov  rdi, rbp
lea  rdx, [rip+0xd014]
mov  esi, 0x1
test r8d, r8d
cmovne rcx, rbx
add  rsp, 0x18
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
mov  rcx, rdi
cmp  rdi, 0xffffffffffffff6a
jl   0x14f50
lea  r8, [rdi+0x96]
48 ba 37 63 5c 22 b5 14 41 3a movabs rdx, 0x3a4114b5225c6337
48 bf 07 3a 6d a0 d3 06 3a 6d movabs rdi, 0x6d3a06d3a06d3a07
mov  rax, r8
mul  rdx
shr  rdx, 0xa
imul r9d, edx, 0x1194
mov  r10, rdx
movsxd rax, r9d
sub  r8, rax
mov  rax, r8
sar  r8, 0x3f
imul rdi
mov  eax, r10d
mov  BYTE PTR [rsi], al
mov  rdi, rdx
sar  rdi, 0x5
sub  rdi, r8
lea  r8d, [rcx+0x96]
mov  edx, edi
imul edi, edi, 0x4b
sub  r8d, r9d
xor  r9d, r9d
mov  BYTE PTR [rsi+0x1], dl
sub  r8d, edi
cmp  rcx, 0x62d71
setle  r9b
mov  BYTE PTR [rsi+0x2], r8b
mov  eax, r9d
ret
nop  DWORD PTR [rax]
lea  rax, [rdi+0xb05e]
cmp  rax, 0xafc7
ja   0x14fd0
lea  r8, [rdi+0x6de66]
48 ba 37 63 5c 22 b5 14 41 3a movabs rdx, 0x3a4114b5225c6337
48 bf 07 3a 6d a0 d3 06 3a 6d movabs rdi, 0x6d3a06d3a06d3a07
mov  rax, r8
mul  rdx
shr  rdx, 0xa
imul r9d, edx, 0x1194
mov  r10, rdx
movsxd rax, r9d
sub  r8, rax
mov  rax, r8
sar  r8, 0x3f
imul rdi
mov  eax, r10d
mov  BYTE PTR [rsi], al
mov  rdi, rdx
sar  rdi, 0x5
sub  rdi, r8
lea  r8d, [rcx+0x6de66]
mov  edx, edi
imul edi, edi, 0x4b
sub  r8d, r9d
mov  r9d, 0x1
mov  BYTE PTR [rsi+0x1], dl
mov  eax, r9d
sub  r8d, edi
mov  BYTE PTR [rsi+0x2], r8b
ret
mov  eax, 0xffffffff
mov  edx, 0xffffffff
mov  r8d, 0xffffffff
xor  r9d, r9d
mov  BYTE PTR [rsi], al
mov  eax, r9d
mov  BYTE PTR [rsi+0x1], dl
mov  BYTE PTR [rsi+0x2], r8b
endbr64
test esi, esi
jle  0xcd50
push rbp
mov  ebp, esi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
jmp  0xccfd
nop  DWORD PTR [rax]
mov  rsi, QWORD PTR [rip+0x4a451]
add  rbx, 0x1
call 0xb8e0
sub  ebp, 0x1
je   0xcd33
movsx  edi, BYTE PTR [rbx]
test dil, dil
je   0xcd33
cmp  dil, 0x20
jne  0xcce8
movsxd rdx, ebp
mov  rax, rbx
lea  ecx, [rbp+rbx*1-0x1]
add  rdx, rbx
jmp  0xcd2a
nop  WORD PTR [rax+rax*1+0x0]
add  rax, 0x1
cmp  BYTE PTR [rax-0x1], 0x20
jne  0xcd40
mov  esi, ecx
sub  esi, eax
cmp  rax, rdx
jne  0xcd20
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
test esi, esi
jg   0xcce8
jmp  0xcd33
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
endbr64
push r12
xor  edx, edx
mov  r12d, esi
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
48 b8 02 00 00 00 0a 00 00 00 movabs rax, 0xa00000002
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 78 00 00 00 movabs rax, 0x7800000012
mov  QWORD PTR [rbx+0x14], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
shl  eax, 0xd
or   eax, 0x35
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r12d, r12d
je   0xf92f
or   BYTE PTR [rbx+0x59], 0x2
lea  rax, [rip+0x137cf]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
endbr64
push r12
mov  r12, rsi
push rbp
mov  rbp, rdi
push rbx
test BYTE PTR [rsi+0x9], 0x80
jne  0x12a2a
mov  rbx, QWORD PTR [rdi+0x48]
test BYTE PTR [rsi+0x7], 0x4
jne  0x12ac0
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], 0x3
shl  eax, 0xd
or   eax, 0x1b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x1067a]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
jns  0x12a3b
mov  esi, 0x3c
mov  rdi, rbp
call 0xecc0
test eax, eax
je   0x12a48
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x17b60
mov  rdi, rbp
mov  ebx, eax
call 0x17be0
mov  edx, eax
cmp  ebx, 0x2
jne  0x12b10
cmp  eax, 0x3a
je   0x12a74
mov  eax, 0xffffffff
cmp  edx, 0x30
jne  0x12a3d
test BYTE PTR [r12+0x9], 0x80
lea  rax, [rip+0x10d49]
lea  rdx, [rip+0x10d3c]
mov  edi, 0xffffffff
cmove  rdx, rax
lea  rsi, [rip+0x115c0]
xor  eax, eax
call 0x1ec90
lea  rsi, [rip+0x10d29]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
pop  rbx
mov  eax, 0xffffffff
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], 0x3
shl  eax, 0xd
or   eax, 0x1b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
or   BYTE PTR [rbx+0x59], 0x1
jmp  0x12a13
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, 0xffffffff
endbr64
push r13
lea  r13d, [rdx-0x1]
push r12
mov  r12, rsi
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rsi
sub  rsp, 0x8
jmp  0x206a6
nop  DWORD PTR [rax]
cmp  eax, 0xa
je   0x206e0
lea  edx, [r13+r12*1+0x0]
sub  edx, ebx
test edx, edx
jle  0x206cd
mov  BYTE PTR [rbx], al
add  rbx, 0x1
mov  rdi, rbp
call 0xbba0
test eax, eax
jns  0x20690
mov  BYTE PTR [rbx], 0x0
cmp  rbx, r12
jne  0x206e3
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax]
cmp  eax, 0xa
je   0x206e0
mov  rdi, rbp
call 0xbba0
test eax, eax
jns  0x206c8
jmp  0x206b2
nop  DWORD PTR [rax+rax*1+0x0]
mov  BYTE PTR [rbx], 0x0
add  rsp, 0x8
mov  eax, ebx
sub  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
call 0xeb80
test eax, eax
jns  0xec49
xor  eax, eax
cmp  DWORD PTR [rbx+0x24], 0x1
jle  0xec30
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x17b60
cmp  eax, 0x6
jne  0xec58
mov  rdi, rbp
call 0xeb80
test eax, eax
js   0xec58
add  rsp, 0x8
mov  eax, 0x1
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax]
mov  rdi, rbp
call 0x17b50
test al, 0x8
je   0xec7a
mov  edi, 0x7a120
call 0xbbf0
mov  rdi, rbp
call 0xeb80
test eax, eax
jns  0xec49
mov  rdi, rbp
call 0x17b60
cmp  eax, 0xffffffff
je   0xeca0
mov  rdi, rbp
call 0x17b60
cmp  eax, 0x2
setne  al
add  rsp, 0x8
movzx  eax, al
pop  rbx
pop  rbp
ret
nop
mov  rdi, rbp
call 0x17be0
cmp  eax, 0x4
setne  al
movzx  eax, al
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14d, r8d
push r13
mov  r13, rdx
xor  edx, edx
push r12
mov  r12, rdi
push rbp
push rbx
mov  rbx, rcx
sub  rsp, 0x8
mov  rbp, QWORD PTR [rdi+0x48]
mov  rdi, rbp
call 0x1edc0
mov  rdx, r13
rol  r13w, 0x8
mov  DWORD PTR [rbp+0x8], ebx
sar  rdx, 0x10
mov  QWORD PTR [rbp+0x0], r15
mov  rdi, r12
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbp+0x10], rax
and  edx, 0x1f
movzx  eax, WORD PTR [r12+0x14]
shl  edx, 0x8
mov  DWORD PTR [rbp+0xc], 0xa
shl  eax, 0xd
or   edx, 0xa
mov  WORD PTR [rbp+0x5a], r13w
or   edx, eax
lea  rax, [rip+0x13afb]
mov  BYTE PTR [rbp+0x5c], r14b
mov  WORD PTR [rbp+0x58], dx
mov  QWORD PTR [r12+0x50], rax
call 0x17650
test eax, eax
js   0xf618
mov  rdi, r12
call 0x164f0
mov  r8d, eax
mov  eax, ebx
sub  eax, r8d
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  eax, 0xffffffff
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14, rdx
xor  edx, edx
push r13
mov  r13, rdi
bswap  r14d
push r12
mov  r12d, r8d
push rbp
mov  rbp, rcx
rol  r12w, 0x8
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  QWORD PTR [rbx], r15
mov  rdi, r13
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  edx, WORD PTR [r13+0x14]
movzx  eax, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], ebp
shl  edx, 0xd
mov  DWORD PTR [rbx+0xc], 0xa
and  ax, 0x1f00
or   edx, 0x2a
mov  DWORD PTR [rbx+0x5a], r14d
or   edx, eax
lea  rax, [rip+0x13a49]
mov  WORD PTR [rbx+0x5f], r12w
mov  WORD PTR [rbx+0x58], dx
mov  QWORD PTR [r13+0x50], rax
call 0x17650
test eax, eax
js   0xf6d0
mov  rdi, r13
call 0x164f0
mov  r8d, eax
mov  eax, ebp
sub  eax, r8d
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop
mov  eax, 0xffffffff
endbr64
mov  r8d, ecx
mov  rcx, rdx
lea  rdx, [rip+0xd2fe]
endbr64
push r14
mov  r14, rsi
push r13
push r12
lea  r12, [rip+0x10bd7]
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x120
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x118], rax
xor  eax, eax
lea  rbp, [rsp+0x10]
lea  r13, [rsp+0xc]
jmp  0x12c66
nop
mov  rdi, rbx
call 0x17b60
cmp  eax, 0x2
jne  0x12d10
mov  esi, 0x3c
mov  rdi, rbx
call 0xecc0
test eax, eax
je   0x12d10
xor  edx, edx
mov  esi, 0x100
mov  rdi, rbp
call 0x1edc0
push r13
mov  rcx, rbp
mov  rdx, r12
push 0x0
xor  r9d, r9d
xor  r8d, r8d
mov  esi, 0x2a
mov  rdi, rbx
call 0x15430
pop  rdx
pop  rcx
test eax, eax
je   0x12c40
mov  eax, DWORD PTR [rsp+0xc]
test eax, eax
je   0x12d10
movzx  edx, BYTE PTR [rsp+0x13]
lea  rbp, [rbp+rdx*1+0x4]
mov  rcx, rdx
cmp  BYTE PTR [rbp+0x1], 0xf
jbe  0x12d10
movzx  edx, WORD PTR [rbp+0x8]
rol  dx, 0x8
sub  edx, 0x1
cmp  dx, 0xae
jbe  0x12d10
movzx  edx, WORD PTR [rbp+0xe]
rol  dx, 0x8
sub  edx, 0x1
cmp  dx, 0xae
jbe  0x12d10
lea  r12d, [rax-0x4]
sub  r12d, ecx
mov  DWORD PTR [rsp+0xc], r12d
test r14, r14
je   0x12cfb
mov  edx, r12d
mov  rsi, r14
mov  rdi, rbp
call 0x20010
mov  rax, r14
jmp  0x12d12
movsxd rdi, r12d
call 0xb9c0
mov  r14, rax
test rax, rax
jne  0x12ce8
nop  DWORD PTR [rax+rax*1+0x0]
xor  eax, eax
mov  rdx, QWORD PTR [rsp+0x118]
sub  rdx, QWORD PTR fs:0x28
jne  0x12d35
add  rsp, 0x120
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
endbr64
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
add  DWORD PTR [rdi+0x28], 0x1
mov  rbp, QWORD PTR [rdi+0x48]
call 0xeb80
sub  DWORD PTR [rbx+0x28], 0x1
mov  r8d, eax
xor  eax, eax
test r8d, r8d
jns  0x129a3
cmp  DWORD PTR [rbp+0x24], 0x1
jg   0x129a3
movzx  edx, BYTE PTR [rbp+0x2f]
and  edx, 0x7f
cmp  dl, 0x6f
jbe  0x129a3
xor  eax, eax
cmp  BYTE PTR [rbp+0x3b], 0xd0
sete al
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
push r13
mov  r13, rsi
mov  esi, 0x70
push r12
mov  r12, rdi
push rbp
mov  rbp, rdx
xor  edx, edx
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  QWORD PTR [rbx], r13
mov  rdi, r12
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  edx, WORD PTR [r12+0x14]
movzx  eax, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], ebp
shl  edx, 0xd
mov  DWORD PTR [rbx+0xc], 0x2
and  ax, 0x1f00
or   edx, 0x5d
or   edx, eax
mov  eax, ebp
rol  ax, 0x8
mov  WORD PTR [rbx+0x58], dx
mov  WORD PTR [rbx+0x5f], ax
lea  rax, [rip+0x12d20]
mov  QWORD PTR [r12+0x50], rax
call 0x17650
test eax, eax
js   0x104e1
mov  eax, ebp
sub  eax, DWORD PTR [rbx+0x20]
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  eax, 0xffffffff
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14, rdx
xor  edx, edx
push r13
mov  r13d, r8d
bswap  r14d
push r12
mov  r12, rcx
bswap  r13d
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  QWORD PTR [rbx], r15
mov  rdi, rbp
48 b8 0c 00 00 00 12 00 00 00 movabs rax, 0x120000000c
mov  QWORD PTR [rbx+0x10], rax
movzx  edx, WORD PTR [rbp+0x14]
movzx  eax, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r12d
shl  edx, 0xd
mov  DWORD PTR [rbx+0xc], 0xa
and  ax, 0x1f00
or   dl, 0xaa
mov  DWORD PTR [rbx+0x5a], r14d
or   edx, eax
lea  rax, [rip+0x13974]
mov  DWORD PTR [rbx+0x5e], r13d
mov  WORD PTR [rbx+0x58], dx
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0xf7b0
mov  rdi, rbp
call 0x164f0
mov  r8d, eax
mov  eax, r12d
sub  eax, r8d
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
mov  eax, 0xffffffff
endbr64
mov  rdi, QWORD PTR [rip+0x366d5]
endbr64
movzx  r8d, BYTE PTR [rdi+0x20]
movzx  eax, BYTE PTR [rdi]
mov  ecx, r8d
sub  eax, 0x21
sub  eax, r8d
movzx  r8d, r8b
and  ecx, 0x1
lea  rdi, [rdi+r8*1+0x21]
jne  0xd50a
add  rdi, 0x1
sub  eax, 0x1
cmp  eax, 0xd
jle  0xd515
cmp  BYTE PTR [rdi+0x6], 0x58
je   0xd520
mov  QWORD PTR [rsi], rdi
mov  DWORD PTR [rdx], eax
ret
nop  DWORD PTR [rax+rax*1+0x0]
cmp  BYTE PTR [rdi+0x7], 0x41
jne  0xd515
cmp  BYTE PTR [rdi+0x9], 0x0
jne  0xd515
sub  eax, 0xe
add  rdi, 0xe
endbr64
mov  rax, QWORD PTR [rdi+0x48]
mov  r8d, 0x1
mov  ecx, DWORD PTR [rax+0x24]
test ecx, ecx
jne  0x1654d
mov  edx, DWORD PTR [rax+0x28]
test edx, edx
jne  0x1654d
cmp  BYTE PTR [rax+0x2c], 0x0
jne  0x1654d
xor  r8d, r8d
cmp  BYTE PTR [rax+0x2f], 0x0
setne  r8b
mov  eax, r8d
endbr64
mov  eax, edi
and  edi, 0xf
sar  eax, 0x4
and  eax, 0xf
lea  eax, [rax+rax*4]
lea  eax, [rdi+rax*2]
endbr64
push r14
mov  r14d, ecx
push r13
mov  r13, rdi
push r12
mov  r12d, esi
mov  esi, 0x70
push rbp
mov  ebp, edx
xor  edx, edx
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  DWORD PTR [rbx+0xc], 0x2
48 b8 0c 00 00 00 12 00 00 00 movabs rax, 0x120000000c
mov  QWORD PTR [rbx+0x10], rax
movzx  edx, BYTE PTR [r13+0x14]
mov  BYTE PTR [rbx+0x58], 0xbb
and  edx, 0x7
test r12d, r12d
js   0xf4b8
mov  eax, r12d
movzx  ecx, ah
movzx  eax, BYTE PTR [rbx+0x59]
shl  edx, 0x5
mov  BYTE PTR [rbx+0x5a], cl
mov  BYTE PTR [rbx+0x5b], r12b
and  eax, 0x1f
or   eax, edx
mov  BYTE PTR [rbx+0x59], al
test ebp, ebp
js   0xf4c8
mov  eax, ebp
movzx  eax, ah
mov  BYTE PTR [rbx+0x5c], al
and  r14d, 0x3
lea  rax, [rip+0x13c33]
mov  rdi, r13
or   BYTE PTR [rbx+0x59], r14b
mov  BYTE PTR [rbx+0x5d], bpl
mov  QWORD PTR [r13+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  ecx, 0xffffffff
mov  r12d, 0xffffffff
jmp  0xf466
nop  DWORD PTR [rax]
mov  eax, 0xffffffff
mov  ebp, 0xffffffff
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
push r13
mov  r13, rsi
push r12
movsxd r12, edx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x18
call 0x20860
test al, 0x2
jne  0x20840
mov  rdi, r13
mov  rcx, rbp
mov  rdx, r12
mov  esi, 0x1
call 0xbaf0
mov  rdi, rbp
mov  rbx, rax
call 0xb6f0
test eax, eax
jne  0x20800
mov  eax, ebx
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop
mov  rdi, rbp
call 0x20860
mov  r8d, eax
mov  eax, 0xffffffff
and  r8d, 0x1
jne  0x207f4
xor  esi, esi
lea  rdi, [rip+0x12c39]
mov  DWORD PTR [rsp+0xc], eax
call 0x203e0
mov  eax, DWORD PTR [rsp+0xc]
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0xb980
mov  rdx, r12
mov  rsi, r13
mov  edi, eax
call 0xb720
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push r14
push r13
push r12
mov  r12d, edx
push rbp
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  edx, DWORD PTR [rbx+0x8]
mov  eax, DWORD PTR [rbx+0x20]
mov  r9d, edx
sub  r9d, eax
test eax, eax
cmovs  r9d, edx
xor  eax, eax
test edx, edx
jle  0x16e33
mov  eax, DWORD PTR [rbx+0xc]
and  eax, 0x1
jne  0x16e40
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
sub  rsp, 0x8
mov  rbp, rsi
lea  r8, [rip+0xe1ca]
xor  eax, eax
push rdx
movsxd rsi, r12d
mov  rcx, 0xffffffffffffffff
mov  rdi, rbp
push rdx
mov  edx, 0x1
mov  r13d, r9d
push r9
call 0xb650
add  rsp, 0x20
test eax, eax
js   0x16e33
movsxd r14, eax
mov  esi, r12d
mov  r8d, 0x64
mov  rcx, QWORD PTR [rbx]
add  r14, rbp
sub  esi, eax
lea  rdx, [rip+0xdedd]
cmp  r13d, r8d
cmovle r8d, r13d
mov  rdi, r14
call 0x16c30
pop  rbx
lea  edx, [rax+r14*1]
sub  edx, ebp
test eax, eax
pop  rbp
pop  r12
cmovns eax, edx
pop  r13
pop  r14
endbr64
test rdi, rdi
je   0x21096
cmp  QWORD PTR [rdi+0x18], 0x0
jne  0x21090
mov  rdx, QWORD PTR [rip+0x37771]
test rdx, rdx
je   0x2107e
cmp  rdi, rdx
je   0x21090
mov  rax, rdx
jmp  0x21075
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
cmp  rdi, rax
je   0x21090
mov  rax, QWORD PTR [rax+0x18]
test rax, rax
jne  0x21070
mov  QWORD PTR [rdi+0x18], rdx
xor  eax, eax
mov  QWORD PTR [rip+0x3773d], rdi
ret
nop  DWORD PTR [rax+0x0]
mov  eax, 0xfffffff0
ret
mov  eax, 0xffffffea
endbr64
lea  rdi, [rip+0x2b015]
endbr64
lea  rdi, [rip+0x2d7a5]
endbr64
lea  rdi, [rip+0x2e4d5]
endbr64
push r13
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
mov  rdi, rsi
push rbx
mov  rsi, rbp
mov  rbx, rdx
sub  rsp, 0x8
call 0xb840
test r12d, r12d
jle  0x16afe
lea  eax, [r12-0x1]
lea  r12, [rip+0xe288]
lea  r13, [rbx+rax*1+0x1]
nop  DWORD PTR [rax+rax*1+0x0]
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  rbx, r13
jne  0x16ae0
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push r15
push r14
mov  r14d, r8d
push r13
mov  r13, rdi
push r12
push rbp
mov  rbp, rsi
push rbx
mov  ebx, ecx
sub  rsp, 0x148
mov  DWORD PTR [rsp+0x4], edx
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x138], rax
xor  eax, eax
mov  DWORD PTR [rsp+0x20], 0x0
test rsi, rsi
je   0x15d80
mov  BYTE PTR [rsi], 0x0
call 0x159c0
mov  r12, rax
test rax, rax
je   0x15ff0
mov  DWORD PTR [r12+0x24], ebx
lea  r15, [rsp+0x30]
mov  DWORD PTR [r12+0x30], r14d
mov  BYTE PTR [rsp+0x30], 0x0
test r13, r13
je   0x15cbc
cmp  BYTE PTR [r13+0x0], 0x0
je   0x15c61
mov  edx, 0x4
lea  rsi, [rip+0xf039]
mov  rdi, r13
call 0xb6c0
test eax, eax
je   0x15d91
mov  edx, 0x4
lea  rsi, [rip+0xf022]
mov  rdi, r13
call 0xb6c0
test eax, eax
je   0x15d91
mov  edx, 0x6
lea  rsi, [rip+0xf00b]
mov  rdi, r13
call 0xb6c0
test eax, eax
je   0x15dc8
mov  esi, 0x3a
mov  rdi, r13
lea  r15, [rsp+0x30]
call 0xb7e0
mov  r9, r13
mov  r8, rax
test rax, rax
jne  0x15fa0
mov  rdi, r9
mov  esi, 0x2c
mov  QWORD PTR [rsp+0x8], r9
call 0xb7e0
mov  r9, QWORD PTR [rsp+0x8]
test rax, rax
je   0x15e00
cmp  BYTE PTR [r9], 0x0
mov  DWORD PTR [rsp+0x2c], 0x0
mov  DWORD PTR [rsp+0x28], 0x0
mov  DWORD PTR [rsp+0x24], 0x0
mov  DWORD PTR [rsp+0x20], 0x0
jne  0x15ef4
mov  rcx, QWORD PTR [rip+0x41526]
mov  edx, 0x3b
mov  esi, 0x1
lea  rdi, [rip+0xf095]
call 0xbaf0
xor  ecx, ecx
mov  edx, 0x6
xor  esi, esi
mov  rdi, r12
call 0x19c80
lea  r15, [rsp+0x30]
test r14d, r14d
je   0x15cbc
mov  rdi, QWORD PTR [rip+0x414ee]
xor  eax, eax
mov  rcx, r13
lea  rdx, [rip+0xef85]
mov  esi, 0x1
call 0xbb10
cmp  BYTE PTR [rsp+0x30], 0x0
jne  0x15da0
mov  ecx, DWORD PTR [r12+0xc]
mov  r9d, DWORD PTR [r12+0x14]
xor  eax, eax
lea  rdx, [rip+0xf01a]
mov  r8d, DWORD PTR [r12+0x10]
mov  rdi, QWORD PTR [rip+0x414ae]
mov  esi, 0x1
call 0xbb10
test ebx, ebx
jg   0x15d00
mov  rsi, r15
mov  rdi, r12
call 0x16270
test eax, eax
jle  0x15d42
mov  rax, QWORD PTR [rsp+0x138]
sub  rax, QWORD PTR fs:0x28
jne  0x16151
add  rsp, 0x148
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [r12+0x14]
sub  rsp, 0x8
mov  rcx, r15
mov  r9d, DWORD PTR [r12+0x10]
mov  r8d, DWORD PTR [r12+0xc]
mov  rdi, QWORD PTR [rip+0x41443]
mov  esi, 0x1
lea  rdx, [rip+0xeef8]
push rax
xor  eax, eax
call 0xbb10
pop  rax
mov  rsi, r15
pop  rdx
mov  rdi, r12
call 0x16270
test eax, eax
jg   0x15ccf
test rbp, rbp
je   0x15d6a
mov  rcx, QWORD PTR [r12+0xa8]
test rcx, rcx
je   0x15d6a
movsxd rsi, DWORD PTR [rsp+0x4]
lea  rdx, [rip+0xe14f]
mov  rdi, rbp
xor  eax, eax
call 0xb800
mov  rdi, r12
xor  r12d, r12d
call 0x15910
jmp  0x15ccf
nop  WORD PTR [rax+rax*1+0x0]
call 0x159c0
mov  r12, rax
test rax, rax
jne  0x15b4c
xor  r12d, r12d
jmp  0x15ccf
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rip+0x413b9]
mov  rcx, r15
mov  esi, 0x1
xor  eax, eax
lea  rdx, [rip+0xee5a]
call 0xbb10
jmp  0x15c93
nop  WORD PTR [rax+rax*1+0x0]
lea  r15, [rsp+0x30]
mov  edx, 0xff
mov  rsi, r13
mov  rdi, r15
call 0xb6b0
movzx  eax, BYTE PTR [r13+0x6]
mov  BYTE PTR [rsp+0x12f], 0x0
cmp  al, 0x28
je   0x15e40
cmp  al, 0x3a
je   0x15e40
mov  BYTE PTR [rsp+0x30], 0x0
jmp  0x15bc8
nop  DWORD PTR [rax+0x0]
cmp  BYTE PTR [rsp+0x30], 0x0
mov  ecx, 0xfffffffe
lea  r15, [rsp+0x30]
mov  DWORD PTR [rsp+0x20], 0xfffffffe
je   0x16081
nop  DWORD PTR [rax]
mov  edx, 0xfffffffe
mov  esi, 0xfffffffe
mov  rdi, r12
call 0x19c80
jmp  0x15c66
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, r13
call 0xb7e0
test rax, rax
je   0x15df2
lea  rdi, [rax+0x1]
mov  esi, 0x3a
call 0xb7e0
test rax, rax
je   0x15c66
lea  r9, [rax+0x1]
mov  esi, 0x3a
mov  rdi, r9
mov  QWORD PTR [rsp+0x8], r9
call 0xb7e0
mov  r9, QWORD PTR [rsp+0x8]
test rax, rax
mov  r8, rax
je   0x15be9
cmp  BYTE PTR [rsp+0x30], 0x0
je   0x15fa0
movzx  eax, BYTE PTR [r8+0x1]
cmp  al, 0x40
je   0x15f80
mov  QWORD PTR [rsp+0x8], r8
test al, al
je   0x15c66
mov  esi, 0x2c
mov  rdi, r9
call 0xb7e0
test rax, rax
je   0x1600b
mov  r8, QWORD PTR [rsp+0x8]
mov  DWORD PTR [rsp+0x2c], 0x0
mov  DWORD PTR [rsp+0x28], 0x0
mov  DWORD PTR [rsp+0x24], 0x0
lea  r9, [r8+0x1]
mov  DWORD PTR [rsp+0x20], 0x0
mov  rdi, r9
lea  rsi, [rsp+0x24]
mov  QWORD PTR [rsp+0x8], r9
call 0x1e6e0
mov  r9, QWORD PTR [rsp+0x8]
cmp  BYTE PTR [rax], 0x2c
jne  0x16156
cmp  BYTE PTR [rax+0x1], 0x0
lea  rdi, [rax+0x1]
je   0x161a2
lea  rsi, [rsp+0x28]
mov  QWORD PTR [rsp+0x8], r9
call 0x1e6e0
mov  r9, QWORD PTR [rsp+0x8]
movzx  edx, BYTE PTR [rax]
cmp  dl, 0x2c
je   0x16035
test dl, dl
jne  0x1617c
mov  eax, DWORD PTR [rsp+0x28]
mov  edx, DWORD PTR [rsp+0x24]
xor  esi, esi
mov  DWORD PTR [rsp+0x20], eax
mov  ecx, edx
or   eax, DWORD PTR [rsp+0x2c]
or   eax, ecx
js   0x1610f
mov  ecx, DWORD PTR [rsp+0x20]
mov  rdi, r12
lea  r15, [rsp+0x30]
call 0x19c80
jmp  0x15c66
nop  DWORD PTR [rax+0x0]
movzx  eax, BYTE PTR [r8+0x2]
test al, al
je   0x16023
cmp  al, 0x2c
je   0x160a6
mov  ecx, DWORD PTR [rsp+0x20]
jmp  0x15e20
xchg ax, ax
mov  rdx, r8
mov  eax, 0xff
mov  ecx, 0x100
mov  rsi, r13
sub  rdx, r13
mov  rdi, r15
mov  QWORD PTR [rsp+0x18], r9
cmp  edx, eax
mov  QWORD PTR [rsp+0x10], r8
cmovg  edx, eax
movsxd rdx, edx
mov  QWORD PTR [rsp+0x8], rdx
call 0xba10
mov  rdx, QWORD PTR [rsp+0x8]
mov  r9, QWORD PTR [rsp+0x18]
mov  r8, QWORD PTR [rsp+0x10]
mov  BYTE PTR [rsp+rdx*1+0x30], 0x0
jmp  0x15e9b
nop  DWORD PTR [rax+rax*1+0x0]
movsxd rsi, DWORD PTR [rsp+0x4]
lea  rdx, [rip+0xeba0]
mov  rdi, rbp
xor  eax, eax
call 0xb800
jmp  0x15ccf
mov  edx, 0xff
mov  rsi, r13
mov  rdi, r15
call 0xb6b0
mov  BYTE PTR [rsp+0x12f], 0x0
mov  DWORD PTR [rsp+0x20], 0xfffffffe
mov  ecx, 0xfffffffe
jmp  0x15e20
test dl, dl
je   0x15f4a
cmp  BYTE PTR [rax+0x1], 0x0
lea  rdi, [rax+0x1]
je   0x15f4a
lea  rsi, [rsp+0x2c]
mov  QWORD PTR [rsp+0x8], r9
call 0x1e6e0
mov  r9, QWORD PTR [rsp+0x8]
cmp  BYTE PTR [rax], 0x0
jne  0x1618f
mov  ecx, DWORD PTR [rsp+0x2c]
mov  esi, DWORD PTR [rsp+0x24]
mov  eax, DWORD PTR [rsp+0x28]
mov  DWORD PTR [rsp+0x20], ecx
mov  ecx, esi
mov  edx, eax
jmp  0x15f5a
mov  edx, 0xff
mov  rsi, r13
mov  rdi, r15
mov  DWORD PTR [rsp+0x8], ecx
call 0xb6b0
mov  BYTE PTR [rsp+0x12f], 0x0
mov  ecx, DWORD PTR [rsp+0x8]
jmp  0x15e20
lea  r9, [r8+0x3]
lea  rsi, [rsp+0x20]
mov  rdi, r9
mov  QWORD PTR [rsp+0x8], r9
call 0x1e6e0
mov  r9, QWORD PTR [rsp+0x8]
cmp  BYTE PTR [rax], 0x0
je   0x15f95
mov  QWORD PTR [rsp+0x8], r9
call 0xb6a0
mov  DWORD PTR [rax], 0x16
test rbp, rbp
je   0x15d91
movsxd rsi, DWORD PTR [rsp+0x4]
mov  r9, QWORD PTR [rsp+0x8]
or   rcx, 0xffffffffffffffff
xor  eax, eax
lea  r8, [rip+0xead0]
mov  edx, 0x1
mov  rdi, rbp
xor  r12d, r12d
call 0xb650
jmp  0x15ccf
test rbp, rbp
je   0x16141
mov  eax, DWORD PTR [rsp+0x20]
movsxd r15, DWORD PTR [rsp+0x4]
mov  r9d, esi
or   rcx, 0xffffffffffffffff
lea  r8, [rip+0xeb65]
mov  rdi, rbp
push rax
mov  rsi, r15
xor  eax, eax
push rdx
mov  edx, 0x1
call 0xb650
pop  rcx
pop  rsi
call 0xb6a0
mov  DWORD PTR [rax], 0x16
jmp  0x15d91
call 0xb790
test rbp, rbp
je   0x16141
movsxd rsi, DWORD PTR [rsp+0x4]
lea  r8, [rip+0xead9]
or   rcx, 0xffffffffffffffff
mov  edx, 0x1
mov  rdi, rbp
xor  eax, eax
call 0xb650
jmp  0x16141
test rbp, rbp
je   0x16141
movsxd rsi, DWORD PTR [rsp+0x4]
lea  r8, [rip+0xeadb]
jmp  0x16167
test rbp, rbp
je   0x16141
movsxd rsi, DWORD PTR [rsp+0x4]
lea  r8, [rip+0xea45]
jmp  0x16167
mov  edx, DWORD PTR [rsp+0x24]
mov  eax, DWORD PTR [rsp+0x28]
xor  esi, esi
mov  ecx, edx
endbr64
push rbp
pxor xmm0, xmm0
pxor xmm2, xmm2
mov  rbp, rsi
push rbx
lea  rdx, [rip+0x14de0]
mov  rbx, rdi
mov  esi, 0x1
sub  rsp, 0x10
mov  rax, QWORD PTR [rdi+0xe0]
mov  rdi, rbp
movsd  xmm1, QWORD PTR [rip+0x157e2]
cvtsi2sd xmm0, DWORD PTR [rax+0x4]
movsxd rcx, DWORD PTR [rax]
cvtsi2sd xmm2, ecx
addsd  xmm2, QWORD PTR [rip+0x157d6]
add  rcx, 0x1
mulsd  xmm0, xmm1
mulsd  xmm0, xmm2
mulsd  xmm1, xmm0
cvttsd2si r8, xmm0
movapd xmm2, xmm0
divsd  xmm2, QWORD PTR [rip+0x157bd]
mulsd  xmm2, QWORD PTR [rip+0x157bd]
cvttsd2si r9, xmm1
cvttsd2si rax, xmm2
push rax
xor  eax, eax
call 0xbb10
mov  rax, QWORD PTR [rbx+0xe0]
mov  rdi, rbp
lea  rdx, [rip+0x13e87]
mov  esi, 0x1
movsxd rcx, DWORD PTR [rax+0x4]
add  rsp, 0x18
xor  eax, eax
pop  rbx
pop  rbp
endbr64
lea  rdi, [rip+0x2f205]
endbr64
push r14
mov  r14, rsi
mov  esi, 0x70
push r13
mov  r13d, r8d
push r12
mov  r12, rdi
push rbp
mov  ebp, edx
xor  edx, edx
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], ebp
mov  rdi, r12
48 b8 02 00 00 00 0c 00 00 00 movabs rax, 0xc00000002
mov  QWORD PTR [rbx], r14
mov  QWORD PTR [rbx+0xc], rax
and  dx, 0x1f00
48 b8 12 00 00 00 f0 00 00 00 movabs rax, 0xf000000012
mov  QWORD PTR [rbx+0x14], rax
movzx  eax, WORD PTR [r12+0x14]
mov  BYTE PTR [rbx+0x5f], r13b
shl  eax, 0xd
or   al, 0xbf
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
mov  eax, ebp
rol  bp, 0x8
sar  eax, 0x18
mov  WORD PTR [rbx+0x60], bp
mov  BYTE PTR [rbx+0x5e], al
lea  rax, [rip+0x12fbf]
mov  QWORD PTR [r12+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
pop  r13
pop  r14
endbr64
lea  rdi, [rip+0x2ff35]
endbr64
push rbp
mov  rbp, rdi
call 0x16300
mov  rdi, rbp
call 0x15910
xor  eax, eax
pop  rbp
endbr64
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
mov  rdi, rsi
push rbx
mov  rsi, rbp
mov  rbx, rdx
call 0xb840
test r12d, r12d
jle  0x16b71
lea  eax, [r12-0x1]
lea  r12, [rbx+rax*1+0x1]
nop  DWORD PTR [rax+rax*1+0x0]
movzx  edi, BYTE PTR [rbx]
add  rbx, 0x1
mov  rsi, rbp
lea  eax, [rdi-0x20]
cmp  eax, 0x5e
jbe  0x16b67
mov  edi, 0x2e
call 0xb890
cmp  r12, rbx
jne  0x16b50
pop  rbx
mov  rsi, rbp
mov  edi, 0xa
pop  rbp
pop  r12
endbr64
lea  rdi, [rip+0x30b65]
endbr64
push r13
xor  eax, eax
push r12
push rbp
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  r9d, DWORD PTR [rbx+0x8]
test r9d, r9d
jle  0x16d73
test BYTE PTR [rbx+0xc], 0x1
je   0x16d80
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
xchg ax, ax
sub  rsp, 0x8
mov  rbp, rsi
mov  rcx, 0xffffffffffffffff
movsxd rsi, edx
push r9
mov  r12d, edx
lea  r8, [rip+0xe253]
mov  rdi, rbp
mov  edx, 0x1
call 0xb650
pop  rdx
pop  rcx
test eax, eax
js   0x16d73
mov  r8d, DWORD PTR [rbx+0x8]
mov  esi, r12d
movsxd r13, eax
mov  rcx, QWORD PTR [rbx]
sub  esi, eax
mov  eax, 0x64
add  r13, rbp
cmp  r8d, eax
lea  rdx, [rip+0xdf90]
mov  rdi, r13
cmovg  r8d, eax
call 0x16c30
lea  edx, [rax+r13*1]
sub  edx, ebp
test eax, eax
cmovns eax, edx
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push r12
mov  r12, rdi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1ec24
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  DWORD PTR [rsp], 0x8
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1fff0
mov  rdx, r12
xor  edi, edi
mov  rcx, rsp
mov  esi, eax
call 0x1e8e0
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x1ec88
add  rsp, 0xd0
pop  r12
ret
endbr64
push r12
push rbx
sub  rsp, 0x8
mov  r12, QWORD PTR [rip+0x376b6]
test r12, r12
je   0x2113a
mov  rbx, rdi
jmp  0x2112a
nop  DWORD PTR [rax+0x0]
mov  r12, QWORD PTR [r12+0x18]
test r12, r12
je   0x2113a
mov  rdi, QWORD PTR [r12]
mov  rsi, rbx
call 0xb8d0
test eax, eax
jne  0x21120
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  r12
endbr64
lea  rdi, [rip+0x31995]
endbr64
lea  rdi, [rip+0x326c5]
endbr64
lea  rdi, [rip+0x332f5]
endbr64
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1fe75
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  r8, rsp
mov  ecx, 0x1
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp], 0x18
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1f490
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x1fed0
add  rsp, 0xd8
ret
endbr64
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x18
mov  ecx, 0x1000
mov  r12, QWORD PTR [rdi+0x28]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1008], rax
xor  eax, eax
mov  QWORD PTR [rdi+0x28], 0x0
mov  rbp, rsp
mov  r13, rsi
mov  rdx, rbp
xor  esi, esi
mov  rbx, rdi
call 0x17300
mov  QWORD PTR [rbx+0x28], r12
test eax, eax
jle  0x1756e
mov  rdi, r13
mov  edx, eax
mov  rsi, rbp
call 0x207b0
mov  rdi, r13
call 0xb9d0
mov  rax, QWORD PTR [rsp+0x1008]
sub  rax, QWORD PTR fs:0x28
jne  0x1758f
add  rsp, 0x1018
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
endbr64
push r12
mov  r12d, edi
push rbp
push rbx
call 0x1fff0
xor  edi, edi
mov  ebp, eax
call 0x20610
mov  edi, r12d
call 0xbb70
mov  r12, rax
call 0x1fff0
mov  edi, ebp
mov  ebx, eax
call 0x20610
test r12, r12
je   0x1eda8
test ebx, ebx
jne  0x1eda8
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+rax*1+0x0]
xor  r12d, r12d
pop  rbx
pop  rbp
mov  rax, r12
pop  r12
endbr64
lea  rdi, [rip+0x16ba5]
endbr64
sub  rsp, 0x8
call 0x216e0
call 0x21710
call 0x21720
call 0x21730
call 0x21740
call 0x21750
call 0x21760
call 0x21770
call 0x21780
call 0x216f0
call 0x21700
call 0x21360
call 0x21370
call 0x21380
call 0x21390
call 0x213a0
call 0x213b0
call 0x213c0
call 0x213d0
call 0x213e0
call 0x213f0
call 0x21400
call 0x21410
call 0x21420
call 0x21430
call 0x21440
call 0x21450
call 0x21340
call 0x21350
call 0x21790
call 0x217a0
call 0x212e0
call 0x212f0
call 0x21300
call 0x21310
call 0x21320
call 0x21330
xor  eax, eax
add  rsp, 0x8
endbr64
push r14
mov  r14d, r8d
push r13
mov  r13, rsi
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdx
push rbx
cmp  BYTE PTR [rdx+0x3], 0x0
mov  rbx, rdi
mov  BYTE PTR [rdx], 0x0
mov  BYTE PTR [rdx+0x2], 0x0
je   0x157fa
xor  eax, eax
mov  BYTE PTR [rdx+0x7], 0x0
mov  WORD PTR [rdx+0x5], ax
test r9d, r9d
js   0x157fa
mov  eax, r9d
rol  r9w, 0x8
sar  eax, 0x10
mov  WORD PTR [rdx+0xa], r9w
mov  BYTE PTR [rdx+0x9], al
add  DWORD PTR [rbx+0x28], 0x1
mov  rdi, rbx
call 0xec00
mov  eax, DWORD PTR [rbx+0x28]
lea  edx, [rax-0x1]
mov  DWORD PTR [rbx+0x28], edx
test r14d, r14d
je   0x1585e
mov  rax, QWORD PTR [rbx+0xd8]
xor  r8d, r8d
mov  ecx, r14d
mov  edx, r12d
mov  rsi, rbp
mov  rdi, rbx
movzx  eax, BYTE PTR [rax+0x3]
and  eax, 0xf
cmp  al, 0x1
seta r8b
call 0x10c10
test eax, eax
js   0x15858
mov  r14d, 0x1
pop  rbx
mov  eax, r14d
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rbx+0x28]
add  eax, 0x1
mov  DWORD PTR [rbx+0x28], eax
mov  rdi, rbx
call 0xec00
sub  DWORD PTR [rbx+0x28], 0x1
xor  r8d, r8d
mov  edx, r12d
mov  rax, QWORD PTR [rbx+0xd8]
mov  rsi, rbp
mov  rdi, rbx
movzx  eax, BYTE PTR [rax+0x3]
and  eax, 0xf
cmp  al, 0x1
seta r8b
xor  ecx, ecx
call 0x10c10
test eax, eax
jns  0x15840
mov  r14d, DWORD PTR [rbx+0x28]
test r14d, r14d
je   0x158b0
xor  r14d, r14d
pop  rbx
pop  rbp
mov  eax, r14d
pop  r12
pop  r13
pop  r14
ret
mov  rdx, r13
lea  rsi, [rip+0xf23e]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
mov  edx, r12d
mov  rsi, rbp
lea  rdi, [rip+0xf2b8]
call 0x16b90
endbr64
push r15
mov  r15d, r8d
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, ecx
push r12
mov  r12d, r9d
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x18
mov  rbx, QWORD PTR [rdi+0x48]
mov  QWORD PTR [rsp+0x8], rsi
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r13d
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  r10, QWORD PTR [rsp+0x8]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0xc], 0x3
shl  eax, 0xd
or   eax, 0x43
mov  QWORD PTR [rbx], r10
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r15d, r15d
je   0xfbf5
movzx  eax, BYTE PTR [rbx+0x59]
and  eax, 0xffffffe1
or   eax, 0x2
mov  BYTE PTR [rbx+0x59], al
and  r12d, 0xf
rol  r13w, 0x8
mov  BYTE PTR [rbx+0x5e], r14b
mov  rdi, rbp
lea  rax, [rip+0x1352e]
mov  BYTE PTR [rbx+0x5a], r12b
mov  WORD PTR [rbx+0x5f], r13w
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x18
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push rbp
mov  rbp, rdi
call 0x17b60
cmp  eax, 0x5
je   0xeb28
mov  rdi, rbp
call 0x17b60
cmp  eax, 0x3
je   0xeb28
xor  eax, eax
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x17be0
cmp  eax, 0x21
je   0xeb58
mov  rdi, rbp
call 0x17be0
cmp  eax, 0xc
jne  0xeb1f
mov  rdi, rbp
call 0x17c20
pop  rbp
cmp  eax, 0x9
sete al
movzx  eax, al
ret
nop  DWORD PTR [rax]
mov  rdi, rbp
call 0x17c20
test eax, eax
jne  0xeb70
mov  eax, 0x1
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x17c20
cmp  eax, 0x2
jne  0xeb35
endbr64
push r13
mov  r13, rsi
mov  esi, 0x70
push r12
mov  r12, rdi
push rbp
mov  ebp, edx
xor  edx, edx
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  DWORD PTR [rbx+0x8], ebp
rol  bp, 0x8
mov  rdi, r12
48 b8 03 00 00 00 0a 00 00 00 movabs rax, 0xa00000003
mov  QWORD PTR [rbx], r13
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 f0 00 00 00 movabs rax, 0xf000000012
mov  QWORD PTR [rbx+0x14], rax
xor  eax, eax
mov  WORD PTR [rbx+0x5c], ax
lea  rax, [rip+0x1316f]
mov  WORD PTR [rbx+0x5f], bp
mov  DWORD PTR [rbx+0x58], 0x52
mov  QWORD PTR [r12+0x50], rax
call 0x17650
add  rsp, 0x8
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
mov  rbx, r8
xor  r8d, r8d
sub  rsp, 0x238
mov  rax, QWORD PTR [rsp+0x270]
mov  QWORD PTR [rsp+0x8], rax
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x228], rax
mov  rax, QWORD PTR [rdi+0xd8]
movzx  eax, BYTE PTR [rax]
and  eax, 0x1f
cmp  al, 0x5
je   0x12f30
mov  rax, QWORD PTR [rsp+0x228]
sub  rax, QWORD PTR fs:0x28
jne  0x1303c
add  rsp, 0x238
mov  eax, r8d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
lea  r11, [rsp+0x20]
mov  r15, rdi
mov  rbp, rsi
mov  r12, rdx
mov  rdi, r11
xor  edx, edx
mov  esi, 0x100
mov  QWORD PTR [rsp+0x10], r11
mov  r14, r9
mov  r13, rcx
call 0x1edc0
mov  r9d, DWORD PTR [rip+0x45481]
mov  r11, QWORD PTR [rsp+0x10]
cmp  r9d, 0x1
je   0x13030
add  DWORD PTR [r15+0x28], 0x1
mov  rdi, r15
mov  QWORD PTR [rsp+0x18], r11
mov  DWORD PTR [rsp+0x10], r9d
call 0xec00
mov  edx, 0x8
xor  r8d, r8d
mov  rdi, r15
lea  rsi, [rsp+0x120]
mov  ecx, 0x3f
call 0x10d20
mov  edx, DWORD PTR [r15+0x28]
mov  r11, QWORD PTR [rsp+0x18]
not  eax
mov  r9d, DWORD PTR [rsp+0x10]
shr  eax, 0x1f
mov  DWORD PTR [rip+0x45425], eax
mov  DWORD PTR [r15+0x28], edx
mov  rsi, r11
mov  rdi, r15
mov  DWORD PTR [rsp+0x10], r9d
call 0x12c00
sub  DWORD PTR [r15+0x28], 0x1
mov  r9d, DWORD PTR [rsp+0x10]
cmp  r9d, DWORD PTR [rip+0x45400]
je   0x12ff7
mov  esi, r9d
mov  rdi, r15
mov  QWORD PTR [rsp+0x10], rax
call 0x10e10
mov  rax, QWORD PTR [rsp+0x10]
xor  r8d, r8d
test rax, rax
je   0x12efa
sub  rsp, 0x8
mov  r8, rbx
mov  rdx, r12
mov  rdi, rax
push QWORD PTR [rsp+0x10]
mov  r9, r14
mov  rcx, r13
mov  rsi, rbp
call 0x12e00
pop  rax
mov  r8d, 0x1
pop  rdx
jmp  0x12efa
nop
mov  eax, DWORD PTR [r15+0x28]
lea  edx, [rax+0x1]
jmp  0x12fbb
endbr64
push r14
push r13
push r12
push rbp
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  r9d, DWORD PTR [rbx+0x8]
mov  eax, DWORD PTR [rbx+0x20]
mov  r8d, r9d
sub  r8d, eax
test eax, eax
cmovs  r8d, r9d
test r9d, r9d
jle  0x166fe
test BYTE PTR [rbx+0xc], 0x1
jne  0x16710
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x40a45]
mov  ecx, r8d
xor  eax, eax
push r9
lea  rdx, [rip+0xe8ef]
mov  esi, 0x1
mov  r12d, r8d
call 0xbb10
mov  eax, 0x64
mov  rbx, QWORD PTR [rbx]
mov  rbp, QWORD PTR [rip+0x40a1b]
cmp  r12d, eax
mov  edx, 0xf
mov  esi, 0x1
cmovle eax, r12d
mov  rcx, rbp
lea  rdi, [rip+0xe60e]
mov  r13d, eax
call 0xbaf0
pop  rax
lea  eax, [r13-0x1]
pop  rdx
lea  r14, [rbx+rax*1+0x1]
lea  r13, [rip+0xe5e1]
test r12d, r12d
jle  0x1679e
nop
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r13
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  r14, rbx
jne  0x16780
pop  rbx
mov  rsi, rbp
mov  edi, 0xa
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
push r13
mov  edx, 0x5
mov  esi, 0x1
push r12
push rbp
push rbx
sub  rsp, 0x8
mov  r12, QWORD PTR [rdi+0x48]
mov  rbp, QWORD PTR [rip+0x40bdd]
lea  rdi, [rip+0xe7cb]
mov  r13d, DWORD PTR [r12+0x10]
mov  rcx, rbp
call 0xbaf0
test r13d, r13d
jle  0x165d6
lea  eax, [r13-0x1]
lea  rbx, [r12+0x58]
lea  r13, [r12+rax*1+0x59]
lea  r12, [rip+0xe7aa]
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  rbx, r13
jne  0x165b8
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffff071]
call QWORD PTR [rip+0x2540b]
endbr64
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x828
xor  edx, edx
mov  esi, 0x100
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x2818], rax
xor  eax, eax
mov  r12, rsp
mov  rbp, rdi
mov  rdi, r12
call 0x1edc0
mov  rbx, QWORD PTR [rbp+0x48]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
xor  esi, esi
mov  QWORD PTR [rbx], r12
48 b8 04 00 00 00 03 00 00 00 movabs rax, 0x300000004
mov  rdi, rbp
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  BYTE PTR [rbx+0x5a], 0x5
shl  eax, 0xd
mov  WORD PTR [rbx+0x5e], si
or   eax, 0x43
mov  BYTE PTR [rbx+0x60], 0x4
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x11e96]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0x11346
movzx  r12d, WORD PTR [rsp]
lea  rsi, [rip+0x12050]
mov  edi, 0x1
xor  eax, eax
lea  r13, [rsp+0x100]
rol  r12w, 0x8
movzx  r12d, r12w
add  r12d, 0x2
mov  edx, r12d
call 0xba60
xor  r8d, r8d
xor  edx, edx
mov  r9d, 0x5
mov  ecx, r12d
mov  rsi, r13
mov  rdi, rbp
call 0xfb70
test eax, eax
js   0x11370
lea  rsi, [rip+0x1204a]
lea  rdi, [rip+0x12048]
call 0x20720
mov  edx, r12d
mov  rsi, r13
mov  rdi, rax
call 0x207b0
xor  eax, eax
mov  rdx, QWORD PTR [rsp+0x2818]
sub  rdx, QWORD PTR fs:0x28
jne  0x11391
add  rsp, 0x2828
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  ecx, DWORD PTR [rbp+0x28]
test ecx, ecx
je   0x11354
mov  edx, DWORD PTR [rbp+0x2c]
test edx, edx
jle  0x11367
lea  rsi, [rip+0x11fc7]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
mov  eax, 0xffffffff
jmp  0x11325
xchg ax, ax
mov  eax, DWORD PTR [rbp+0x28]
test eax, eax
jne  0x11367
lea  rsi, [rip+0x11fc0]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
mov  eax, 0xffffffff
jmp  0x11325
endbr64
sub  rsp, 0x1a8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x198], rax
xor  eax, eax
lea  rdi, [rsp+0x10]
call 0xb820
test eax, eax
je   0x1d080
xor  eax, eax
mov  rdx, QWORD PTR [rsp+0x198]
sub  rdx, QWORD PTR fs:0x28
jne  0x1d0b1
add  rsp, 0x1a8
ret
nop  DWORD PTR [rax+0x0]
xor  eax, eax
lea  rcx, [rsp+0xc]
lea  rdx, [rsp+0x8]
lea  rdi, [rsp+0x92]
lea  rsi, [rip+0xe324]
call 0xb9e0
cmp  eax, 0x1
jle  0x1d05c
xor  eax, eax
cmp  DWORD PTR [rsp+0xc], 0x5
setg al
jmp  0x1d05e
endbr64
mov  edx, esi
mov  rsi, rdi
mov  rdi, QWORD PTR [rip+0x36a40]
endbr64
push r13
push r12
push rbp
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  ecx, DWORD PTR [rbx+0x8]
test ecx, ecx
jle  0x1660f
test BYTE PTR [rbx+0xc], 0x1
je   0x16620
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x40b39]
mov  r8d, ecx
mov  esi, 0x1
xor  eax, eax
lea  rdx, [rip+0xe9b8]
call 0xbb10
mov  r13d, DWORD PTR [rbx+0x8]
mov  eax, 0x64
mov  rbx, QWORD PTR [rbx]
mov  rbp, QWORD PTR [rip+0x40b10]
mov  edx, 0xc
mov  esi, 0x1
lea  rdi, [rip+0xe700]
cmp  r13d, eax
cmovle eax, r13d
mov  rcx, rbp
mov  r12d, eax
call 0xbaf0
test r13d, r13d
jle  0x166ae
lea  eax, [r12-0x1]
lea  r12, [rip+0xe6d7]
lea  r13, [rbx+rax*1+0x1]
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  rbx, r13
jne  0x16690
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push r15
mov  r15d, r8d
push r14
mov  r14d, r9d
push r13
mov  r13d, ecx
push r12
mov  r12d, edx
xor  edx, edx
bswap  r13d
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x18
mov  rbx, QWORD PTR [rdi+0x48]
mov  QWORD PTR [rsp+0x8], rsi
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r12d
mov  rdi, rbp
48 b8 03 00 00 00 0c 00 00 00 movabs rax, 0xc00000003
mov  r10, QWORD PTR [rsp+0x8]
rol  r12w, 0x8
mov  QWORD PTR [rbx+0xc], rax
and  dx, 0x1f00
48 b8 12 00 00 00 f0 00 00 00 movabs rax, 0xf000000012
mov  QWORD PTR [rbx+0x14], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  QWORD PTR [rbx], r10
shl  eax, 0xd
mov  DWORD PTR [rbx+0x5a], r13d
or   al, 0xad
mov  WORD PTR [rbx+0x60], r12w
or   eax, edx
mov  BYTE PTR [rbx+0x5e], r15b
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x13058]
mov  BYTE PTR [rbx+0x5f], r14b
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x18
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r12
xor  edx, edx
push rbp
mov  rbp, rdi
push rbx
mov  r12, QWORD PTR [rdi+0x48]
mov  rbx, rsi
mov  esi, 0x70
mov  rdi, r12
call 0x1edc0
mov  rdi, rbp
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  DWORD PTR [r12+0xc], 0x2
mov  QWORD PTR [r12+0x10], rax
mov  rax, rbx
movzx  edx, WORD PTR [rbp+0x14]
rol  bx, 0x8
sar  rax, 0x10
mov  WORD PTR [r12+0x5a], bx
and  eax, 0x1f
shl  edx, 0xd
shl  eax, 0x8
or   eax, 0xb
or   eax, edx
mov  WORD PTR [r12+0x58], ax
lea  rax, [rip+0x138c9]
pop  rbx
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
endbr64
push rbp
mov  ebp, 0x1000
push rbx
mov  ecx, ebp
mov  rbx, rdi
sub  rsp, 0x18
mov  r8, QWORD PTR [rdi+0xb8]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  rax, r8
sub  rax, QWORD PTR [rdi+0xa8]
sub  ecx, eax
mov  eax, DWORD PTR [rdi+0x2c]
test eax, eax
jle  0x17610
mov  edx, ecx
mov  rsi, r8
call 0x16f70
mov  ecx, ebp
movsxd r8, eax
add  r8, QWORD PTR [rbx+0xb8]
mov  rax, r8
sub  rax, QWORD PTR [rbx+0xa8]
sub  ecx, eax
mov  QWORD PTR [rbx+0xb8], r8
lea  rsi, [rsp+0x4]
mov  rdx, r8
mov  rdi, rbx
call 0x17300
cdqe
add  QWORD PTR [rbx+0xb8], rax
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x17647
add  rsp, 0x18
pop  rbx
pop  rbp
ret
endbr64
push rbp
mov  rbp, rdi
mov  rdi, QWORD PTR [rdi+0x78]
test rdi, rdi
je   0x15926
call 0xb660
mov  rdi, QWORD PTR [rbp+0x80]
test rdi, rdi
je   0x15937
call 0xb660
mov  rdi, QWORD PTR [rbp+0x48]
test rdi, rdi
je   0x15945
call 0xb660
mov  rdi, QWORD PTR [rbp+0xd8]
test rdi, rdi
je   0x15956
call 0xb660
mov  rdi, QWORD PTR [rbp+0xe0]
test rdi, rdi
je   0x15967
call 0xb660
mov  rdi, QWORD PTR [rbp+0x90]
test rdi, rdi
je   0x15978
call 0xb660
mov  rdi, rbp
call 0x163b0
mov  rdi, QWORD PTR [rbp+0xa8]
test rdi, rdi
je   0x15991
call 0xb660
mov  rdi, rbp
pop  rbp
endbr64
push r12
xor  edx, edx
mov  r12, rsi
mov  esi, 0x70
push rbp
mov  rbp, rdi
bswap  r12d
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
mov  rdi, rbp
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x5a], r12d
shl  eax, 0xd
or   eax, 0x2b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x1385d]
pop  rbx
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
endbr64
push r12
xor  r12d, r12d
push rbp
push rbx
mov  rbp, QWORD PTR [rdi+0xc0]
test rbp, rbp
je   0x18222
mov  rsi, QWORD PTR [rdi+0xb0]
mov  rax, QWORD PTR [rdi+0xb8]
mov  rbx, rdi
sub  rax, rsi
mov  r12d, eax
test eax, eax
jg   0x18230
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
mov  edx, eax
call 0x207b0
mov  rdi, rbp
call 0xb9d0
mov  rax, QWORD PTR [rbx+0xb8]
mov  QWORD PTR [rbx+0xb0], rax
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rsi, QWORD PTR [rdi+0xa8]
mov  rbp, QWORD PTR [rdi+0x48]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  eax, DWORD PTR [rdi+0x20]
mov  edx, DWORD PTR [rdi+0x38]
mov  QWORD PTR [rdi+0xb0], rsi
mov  QWORD PTR [rdi+0xb8], rsi
mov  DWORD PTR [rbp+0x1c], eax
mov  eax, DWORD PTR [rbp+0x18]
test eax, eax
je   0x177f0
cmp  eax, edx
jl   0x177f0
mov  r9d, DWORD PTR [rbx+0x34]
test r9d, r9d
je   0x176b3
and  DWORD PTR [rbp+0xc], 0xfffffffd
mov  r8d, DWORD PTR [rbx+0x3c]
test r8d, r8d
je   0x176c0
or   DWORD PTR [rbp+0xc], 0x10
mov  eax, DWORD PTR [rbp+0x14]
mov  BYTE PTR [rbp+0x2f], 0x0
cmp  eax, 0x20
jle  0x17820
mov  DWORD PTR [rbp+0x14], 0x20
mov  edi, DWORD PTR [rbx+0x2c]
test edi, edi
jne  0x1783a
mov  esi, DWORD PTR [rbx+0x60]
test esi, esi
je   0x1771a
mov  rcx, QWORD PTR [rbx+0x58]
test rcx, rcx
je   0x1770c
mov  rdi, QWORD PTR [rip+0x3fa67]
lea  rdx, [rip+0xda60]
mov  esi, 0x1
xor  eax, eax
call 0xbb10
xor  esi, esi
lea  rdi, [rip+0xd750]
call 0x203e0
mov  QWORD PTR [rbx+0xc8], 0x0
mov  rdi, QWORD PTR [rbx+0x78]
xor  esi, esi
call 0xb830
mov  rax, QWORD PTR [rbx+0x50]
mov  rdi, rbx
mov  DWORD PTR [rbx+0x60], 0x1
mov  QWORD PTR [rbx+0x58], rax
mov  rax, QWORD PTR [rbx]
call QWORD PTR [rax]
mov  DWORD PTR [rbx+0x60], 0x0
mov  rdi, rbx
mov  r12d, eax
call 0x19cd0
test r12d, r12d
js   0x178a8
mov  rdx, QWORD PTR [rbx+0xb8]
mov  ecx, 0x1000
lea  rsi, [rsp+0x4]
mov  rdi, rbx
mov  rax, rdx
sub  rax, QWORD PTR [rbx+0xa8]
sub  ecx, eax
call 0x17300
mov  rbp, QWORD PTR [rbx+0xc0]
mov  r12d, DWORD PTR [rsp+0x4]
cdqe
add  rax, QWORD PTR [rbx+0xb8]
mov  QWORD PTR [rbx+0xb8], rax
test rbp, rbp
je   0x177b8
mov  rsi, QWORD PTR [rbx+0xb0]
sub  rax, rsi
mov  edx, eax
test eax, eax
jg   0x17800
mov  rax, QWORD PTR [rbx+0xc8]
test rax, rax
je   0x177cd
mov  rdi, QWORD PTR [rbx+0xd0]
call rax
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x1791a
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop
mov  DWORD PTR [rbp+0x18], edx
jmp  0x176a6
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x207b0
mov  rdi, rbp
call 0xb9d0
mov  rax, QWORD PTR [rbx+0xb8]
mov  QWORD PTR [rbx+0xb0], rax
jmp  0x177b8
test eax, eax
jns  0x176d7
mov  edi, DWORD PTR [rbx+0x2c]
mov  DWORD PTR [rbp+0x14], 0x0
test edi, edi
je   0x176e2
jle  0x17853
mov  edx, 0x1000
mov  rdi, rbx
call 0x16f70
movsxd rsi, eax
add  rsi, QWORD PTR [rbx+0xb8]
mov  r12, QWORD PTR [rbx+0xc0]
mov  QWORD PTR [rbx+0xb8], rsi
test r12, r12
je   0x176e2
mov  r8, QWORD PTR [rbx+0xb0]
sub  rsi, r8
mov  edx, esi
test esi, esi
jle  0x176e2
mov  rsi, r8
mov  rdi, r12
call 0x207b0
mov  rdi, r12
call 0xb9d0
mov  rax, QWORD PTR [rbx+0xb8]
mov  QWORD PTR [rbx+0xb0], rax
jmp  0x176e2
nop  DWORD PTR [rax+0x0]
cmp  DWORD PTR [rbx+0x10], 0x7
jle  0x178b8
call 0x1fff0
cmp  eax, 0x16
je   0x178c6
lea  rdi, [rip+0xd8c9]
xor  eax, eax
call 0x1ea20
mov  ecx, DWORD PTR [rbp+0x28]
test ecx, ecx
je   0x17910
mov  edx, DWORD PTR [rbp+0x24]
test edx, edx
jne  0x178db
mov  DWORD PTR [rbp+0x24], 0x2
mov  eax, DWORD PTR [rbx+0x24]
test eax, eax
jle  0x17762
mov  r13d, DWORD PTR [rbp+0x24]
mov  r12d, DWORD PTR [rbp+0x28]
call 0x1fff0
lea  rdi, [rip+0xd8ae]
mov  esi, eax
mov  ecx, r13d
mov  edx, r12d
xor  eax, eax
call 0x1ebc0
jmp  0x17762
xchg ax, ax
call 0x1fff0
mov  DWORD PTR [rbp+0x28], eax
jmp  0x178cd
endbr64
push rbp
mov  rbp, rdi
mov  rdi, rsi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
lea  rdx, [rsp+0x4]
mov  rsi, rsp
mov  DWORD PTR [rsp], 0x0
mov  DWORD PTR [rsp+0x4], 0x0
call 0x20e20
test eax, eax
je   0x207a0
mov  esi, DWORD PTR [rsp]
mov  edx, 0x1b6
mov  rdi, rbp
xor  eax, eax
call 0xba70
mov  esi, eax
test eax, eax
js   0x207a0
mov  edx, DWORD PTR [rsp+0x4]
xor  edi, edi
or   dh, 0x10
call 0x20f80
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0x207a4
add  rsp, 0x10
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
xor  eax, eax
jmp  0x20785
endbr64
push rbx
mov  ebx, edi
call 0xb6a0
mov  r8d, DWORD PTR [rax]
mov  DWORD PTR [rax], ebx
pop  rbx
mov  eax, r8d
endbr64
push rbx
mov  rbx, rsi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
lea  rsi, [rsp+0x4]
mov  DWORD PTR [rsp+0x4], 0x1
call 0xe880
mov  QWORD PTR [rbx], rax
mov  eax, DWORD PTR [rsp+0x4]
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0xea8b
add  rsp, 0x10
pop  rbx
ret
endbr64
push r12
xor  edx, edx
mov  r12d, esi
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], 0x0
mov  rdi, rbp
48 b8 00 00 00 00 02 00 00 00 movabs rax, 0x200000000
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 06 00 00 00 10 00 00 00 movabs rax, 0x1000000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  BYTE PTR [rbx+0x5a], r12b
shl  eax, 0xd
or   eax, 0xd
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x13b88]
pop  rbx
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
endbr64
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, esi
mov  esi, 0x70
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
shl  eax, 0xd
or   eax, 0x1b
or   eax, edx
test r14d, r14d
mov  WORD PTR [rbx+0x58], ax
setne  al
add  eax, eax
test r13d, r13d
setne  dl
or   eax, edx
mov  BYTE PTR [rbx+0x5c], al
test r12d, r12d
je   0xf355
or   BYTE PTR [rbx+0x59], 0x1
lea  rax, [rip+0x13d38]
pop  rbx
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
movsxd rdx, edi
mov  rcx, rdx
imul rdx, rdx, 0x66666667
mov  eax, ecx
sar  eax, 0x1f
sar  rdx, 0x22
sub  edx, eax
movsxd rax, edx
mov  esi, edx
imul rax, rax, 0x66666667
sar  esi, 0x1f
sar  rax, 0x22
sub  eax, esi
lea  esi, [rax+rax*4]
mov  eax, edx
lea  edx, [rdx+rdx*4]
add  esi, esi
add  edx, edx
sub  eax, esi
sub  ecx, edx
shl  eax, 0x4
or   eax, ecx
endbr64
lea  rdi, [rip+0x1cfc5]
endbr64
cmp  rdx, 0x1fffff
jg   0x1220f
cmp  ecx, 0xff
jg   0x1220f
mov  eax, DWORD PTR [rip+0x461d5]
test eax, eax
je   0x12218
jmp  0x12120
nop  DWORD PTR [rax+0x0]
endbr64
push r12
mov  edi, 0xe8
call 0xb9c0
mov  r12, rax
test rax, rax
je   0x15ad6
xor  edx, edx
mov  esi, 0xe8
mov  rdi, rax
call 0x1edc0
lea  rax, [rip+0x1d86e]
mov  ecx, 0xffffffff
mov  rdi, r12
mov  QWORD PTR [r12], rax
mov  edx, 0xffffffff
mov  esi, 0xffffffff
call 0x19c80
mov  edi, 0x10
mov  DWORD PTR [r12+0x8], 0xffffffff
mov  DWORD PTR [r12+0x38], 0x14
mov  DWORD PTR [r12+0x60], 0x0
call 0xb9c0
mov  QWORD PTR [r12+0x78], rax
test rax, rax
je   0x15adc
mov  edi, 0x10
call 0xb9c0
mov  QWORD PTR [r12+0x80], rax
test rax, rax
je   0x15adc
mov  edi, 0x70
call 0xb9c0
mov  QWORD PTR [r12+0x48], rax
test rax, rax
je   0x15adc
mov  edi, 0x1000
call 0xb9c0
mov  QWORD PTR [r12+0xa8], rax
test rax, rax
je   0x15adc
mov  QWORD PTR [r12+0xb0], rax
mov  edi, 0x24
mov  QWORD PTR [r12+0xb8], rax
mov  BYTE PTR [rax], 0x0
mov  rax, QWORD PTR [rip+0x416bb]
mov  QWORD PTR [r12+0xc0], rax
call 0xb9c0
mov  QWORD PTR [r12+0xd8], rax
test rax, rax
je   0x15adc
mov  edi, 0x8
call 0xb9c0
mov  QWORD PTR [r12+0xe0], rax
test rax, rax
je   0x15adc
mov  rax, r12
pop  r12
ret
mov  rdi, r12
xor  r12d, r12d
call 0x15910
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
mov  r8, rdi
mov  edi, edx
movzx  eax, BYTE PTR [r8]
cmp  al, 0x20
jne  0x1e755
nop  DWORD PTR [rax+0x0]
movzx  eax, BYTE PTR [r8+0x1]
add  r8, 0x1
cmp  al, 0x20
je   0x1e748
cmp  al, 0x9
je   0x1e748
cmp  al, 0x2b
je   0x1e800
xor  r9d, r9d
cmp  al, 0x2d
je   0x1e7f0
movsx  edx, BYTE PTR [r8]
test edi, edi
jne  0x1e782
mov  edi, 0xa
cmp  dl, 0x30
je   0x1e810
xor  ecx, ecx
movsxd r10, edi
test dl, dl
jne  0x1e7ad
jmp  0x1e7d7
nop  DWORD PTR [rax]
movsx  eax, al
cmp  eax, edi
jge  0x1e7d7
imul rcx, r10
movsx  edx, BYTE PTR [r8+0x1]
cdqe
add  r8, 0x1
add  rcx, rax
test dl, dl
je   0x1e7d7
lea  eax, [rdx-0x30]
cmp  al, 0x9
jbe  0x1e790
mov  eax, edx
lea  r11d, [rdx-0x41]
and  eax, 0xffffffdf
sub  eax, 0x41
cmp  al, 0x5
ja   0x1e7d7
lea  eax, [rdx-0x57]
cmp  r11b, 0x19
ja   0x1e793
sub  edx, 0x37
movsx  eax, dl
cmp  eax, edi
jl   0x1e797
mov  rax, rcx
neg  rax
test r9d, r9d
cmovne rcx, rax
mov  rax, r8
mov  QWORD PTR [rsi], rcx
ret
nop  DWORD PTR [rax+rax*1+0x0]
add  r8, 0x1
mov  r9d, 0x1
jmp  0x1e76c
nop
add  r8, 0x1
xor  r9d, r9d
jmp  0x1e76c
nop  DWORD PTR [rax+0x0]
movsx  edx, BYTE PTR [r8+0x1]
mov  eax, edx
and  eax, 0xffffffdf
cmp  al, 0x58
je   0x1e82c
add  r8, 0x1
mov  edi, 0x8
jmp  0x1e782
movsx  edx, BYTE PTR [r8+0x2]
mov  edi, 0x10
add  r8, 0x2
endbr64
mov  rax, QWORD PTR [rip+0x37e95]
test rax, rax
je   0x205f8
ret
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rip+0x37e89]
lea  rdx, [rip+0x12e50]
test rax, rax
cmove  rax, rdx
endbr64
mov  rsi, QWORD PTR [rdi+0xc0]
endbr64
mov  rax, QWORD PTR [rdi+0x48]
mov  edx, DWORD PTR [rax+0x24]
test edx, edx
jne  0x17c50
mov  r8d, DWORD PTR [rax+0x28]
test r8d, r8d
jne  0x17c50
cmp  BYTE PTR [rax+0x2c], 0x0
jne  0x17c50
cmp  BYTE PTR [rax+0x2f], 0x0
jne  0x17c50
mov  eax, r8d
ret
nop  DWORD PTR [rax+rax*1+0x0]
movzx  edx, BYTE PTR [rax+0x2f]
xor  r8d, r8d
and  edx, 0x7f
cmp  dl, 0x6f
jbe  0x17c44
movzx  r8d, BYTE PTR [rax+0x3c]
mov  eax, r8d
endbr64
push r14
mov  r14, rsi
push r13
mov  r13d, ecx
push r12
mov  r12, rdx
push rbp
mov  rbp, rdi
push rbx
mov  rax, QWORD PTR [rdi+0xe0]
mov  rbx, QWORD PTR [rdi+0x48]
mov  eax, DWORD PTR [rax+0x4]
test eax, eax
jle  0x12100
mov  rdi, rbx
xor  edx, edx
mov  esi, 0x70
call 0x1edc0
mov  rax, QWORD PTR [rbp+0xe0]
mov  QWORD PTR [rbx], r14
mov  rdi, rbp
mov  ecx, DWORD PTR [rax+0x4]
mov  DWORD PTR [rbx+0xc], 0x3
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
mov  rax, r12
movzx  edx, WORD PTR [rbp+0x14]
rol  r12w, 0x8
sar  rax, 0x10
imul ecx, r13d
mov  WORD PTR [rbx+0x5a], r12w
and  eax, 0x1f
shl  edx, 0xd
mov  BYTE PTR [rbx+0x5c], r13b
shl  eax, 0x8
or   eax, 0x8
mov  DWORD PTR [rbx+0x8], ecx
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x11329]
pop  rbx
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x17650
nop  DWORD PTR [rax+0x0]
xor  esi, esi
lea  rdi, [rip+0x112fa]
call 0x203e0
endbr64
push rbp
mov  ebp, edi
call 0x205e0
lea  rsi, [rip+0x14225]
mov  edi, 0xffffffff
mov  rdx, rax
xor  eax, eax
call 0x1ec90
mov  edx, 0x9
mov  rcx, QWORD PTR [rip+0x492a2]
mov  esi, 0x1
lea  rdi, [rip+0x148c4]
call 0xbaf0
mov  edx, 0x1a
mov  rcx, QWORD PTR [rip+0x49285]
mov  esi, 0x1
lea  rdi, [rip+0x148b1]
call 0xbaf0
mov  edx, 0x26
mov  rcx, QWORD PTR [rip+0x49268]
mov  esi, 0x1
lea  rdi, [rip+0x141ec]
call 0xbaf0
mov  edx, 0x25
mov  rcx, QWORD PTR [rip+0x4924b]
mov  esi, 0x1
lea  rdi, [rip+0x141f7]
call 0xbaf0
mov  edx, 0x3a
mov  rcx, QWORD PTR [rip+0x4922e]
mov  esi, 0x1
lea  rdi, [rip+0x14202]
call 0xbaf0
mov  edx, 0x31
mov  rcx, QWORD PTR [rip+0x49211]
mov  esi, 0x1
lea  rdi, [rip+0x14225]
call 0xbaf0
mov  edx, 0x2e
mov  rcx, QWORD PTR [rip+0x491f4]
mov  esi, 0x1
lea  rdi, [rip+0x14240]
call 0xbaf0
mov  edx, 0x35
mov  rcx, QWORD PTR [rip+0x491d7]
mov  esi, 0x1
lea  rdi, [rip+0x14253]
call 0xbaf0
mov  edx, 0x29
mov  rcx, QWORD PTR [rip+0x491ba]
mov  esi, 0x1
lea  rdi, [rip+0x1426e]
call 0xbaf0
mov  edx, 0x16
mov  rcx, QWORD PTR [rip+0x4919d]
mov  esi, 0x1
lea  rdi, [rip+0x147e4]
call 0xbaf0
mov  edx, 0x32
mov  rcx, QWORD PTR [rip+0x49180]
mov  esi, 0x1
lea  rdi, [rip+0x14264]
call 0xbaf0
mov  rdi, QWORD PTR [rip+0x49168]
mov  ecx, 0x800
xor  eax, eax
lea  rdx, [rip+0x14282]
mov  esi, 0x1
call 0xbb10
mov  edx, 0x3c
mov  rcx, QWORD PTR [rip+0x49144]
mov  esi, 0x1
lea  rdi, [rip+0x142a8]
call 0xbaf0
mov  edx, 0x3b
mov  rcx, QWORD PTR [rip+0x49127]
mov  esi, 0x1
lea  rdi, [rip+0x142cb]
call 0xbaf0
mov  edx, 0x32
mov  rcx, QWORD PTR [rip+0x4910a]
mov  esi, 0x1
lea  rdi, [rip+0x142ee]
call 0xbaf0
mov  edx, 0x32
mov  rcx, QWORD PTR [rip+0x490ed]
mov  esi, 0x1
lea  rdi, [rip+0x14309]
call 0xbaf0
mov  edx, 0x2e
mov  esi, 0x1
mov  rcx, QWORD PTR [rip+0x490cb]
lea  rdi, [rip+0x14324]
call 0xbaf0
mov  edi, ebp
endbr64
mov  DWORD PTR [rdi+0x38], esi
endbr64
push r14
mov  r14, rsi
push r13
mov  r13d, ecx
push r12
mov  r12, rdx
push rbp
mov  rbp, rdi
push rbx
mov  rax, QWORD PTR [rdi+0xe0]
mov  rbx, QWORD PTR [rdi+0x48]
mov  eax, DWORD PTR [rax+0x4]
test eax, eax
jle  0x121d0
mov  rdi, rbx
xor  edx, edx
mov  esi, 0x70
bswap  r12d
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r14
mov  rdi, rbp
mov  rax, QWORD PTR [rbp+0xe0]
and  dx, 0x1f00
mov  ecx, DWORD PTR [rax+0x4]
mov  DWORD PTR [rbx+0xc], 0x3
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
imul ecx, r13d
rol  r13w, 0x8
mov  DWORD PTR [rbx+0x5a], r12d
shl  eax, 0xd
mov  WORD PTR [rbx+0x5f], r13w
or   eax, 0x28
or   eax, edx
mov  DWORD PTR [rbx+0x8], ecx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x11262]
pop  rbx
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x17650
nop  DWORD PTR [rax+rax*1+0x0]
xor  esi, esi
lea  rdi, [rip+0x1122a]
call 0x203e0
endbr64
mov  eax, DWORD PTR [rip+0x37f5e]
endbr64
lea  rdi, [rip+0x34225]
endbr64
test rdi, rdi
je   0x16230
mov  rax, QWORD PTR [rdi]
jmp  QWORD PTR [rax+0x8]
nop
lea  rax, [rip+0x1be49]
cmp  esi, 0x1
je   0x16260
lea  rax, [rip+0x1be5d]
cmp  esi, 0x2
je   0x16260
test esi, esi
lea  rax, [rip+0x1be36]
cmovne rax, rdi
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
endbr64
mov  r9, rsi
mov  rax, rdi
mov  esi, edx
mov  r8, r9
test edx, edx
jle  0x200ec
cmp  rdi, r9
jb   0x200f0
cmp  edx, 0x3f
jle  0x201b0
mov  rdx, rdi
or   rdx, r9
and  edx, 0x7
jne  0x202b8
movsxd r10, esi
mov  edi, esi
mov  rcx, r9
mov  rdx, rax
mov  r11, r10
and  r10, 0xffffffffffffffc0
and  edi, 0x3f
shr  r11, 0x6
add  r10, rax
nop  DWORD PTR [rax+0x0]
mov  r8, QWORD PTR [rdx]
add  rdx, 0x40
add  rcx, 0x40
mov  QWORD PTR [rcx-0x40], r8
mov  r8, QWORD PTR [rdx-0x38]
mov  QWORD PTR [rcx-0x38], r8
mov  r8, QWORD PTR [rdx-0x30]
mov  QWORD PTR [rcx-0x30], r8
mov  r8, QWORD PTR [rdx-0x28]
mov  QWORD PTR [rcx-0x28], r8
mov  r8, QWORD PTR [rdx-0x20]
mov  QWORD PTR [rcx-0x20], r8
mov  r8, QWORD PTR [rdx-0x18]
mov  QWORD PTR [rcx-0x18], r8
mov  r8, QWORD PTR [rdx-0x10]
mov  QWORD PTR [rcx-0x10], r8
mov  r8, QWORD PTR [rdx-0x8]
mov  QWORD PTR [rcx-0x8], r8
cmp  r10, rdx
jne  0x20068
movsxd r11, r11d
shl  r11, 0x6
add  rax, r11
and  esi, 0x38
lea  r8, [r9+r11*1]
jne  0x202ac
test edi, edi
je   0x200ec
movsxd rdi, edi
xor  edx, edx
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rax+rdx*1]
mov  BYTE PTR [r8+rdx*1], cl
add  rdx, 0x1
cmp  rdx, rdi
jne  0x200d8
add  r8, rdx
mov  rax, r8
ret
movsxd rdx, edx
add  r8, rdx
add  rax, rdx
cmp  esi, 0x3f
jle  0x201d8
mov  rcx, r8
or   rcx, rax
and  ecx, 0x7
jne  0x20208
mov  r9d, esi
shr  rdx, 0x6
mov  rdi, r8
and  r9d, 0x3f
nop
mov  rcx, QWORD PTR [rax-0x8]
sub  rax, 0x40
sub  rdi, 0x40
sub  edx, 0x1
mov  QWORD PTR [rdi+0x38], rcx
mov  rcx, QWORD PTR [rax+0x30]
mov  QWORD PTR [rdi+0x30], rcx
mov  rcx, QWORD PTR [rax+0x28]
mov  QWORD PTR [rdi+0x28], rcx
mov  rcx, QWORD PTR [rax+0x20]
mov  QWORD PTR [rdi+0x20], rcx
mov  rcx, QWORD PTR [rax+0x18]
mov  QWORD PTR [rdi+0x18], rcx
mov  rcx, QWORD PTR [rax+0x10]
mov  QWORD PTR [rdi+0x10], rcx
mov  rcx, QWORD PTR [rax+0x8]
mov  QWORD PTR [rdi+0x8], rcx
mov  rcx, QWORD PTR [rax]
mov  QWORD PTR [rdi], rcx
test edx, edx
jg   0x20120
and  esi, 0x38
jne  0x20353
test r9d, r9d
je   0x200ec
lea  edx, [r9-0x1]
mov  rsi, 0xfffffffffffffffe
sub  rsi, rdx
mov  rdx, 0xffffffffffffffff
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rax+rdx*1]
mov  BYTE PTR [rdi+rdx*1], cl
sub  rdx, 0x1
cmp  rdx, rsi
jne  0x20198
jmp  0x200ec
nop  DWORD PTR [rax]
movsxd rdi, edx
xor  edx, edx
nop  DWORD PTR [rax]
movzx  ecx, BYTE PTR [rax+rdx*1]
mov  BYTE PTR [r9+rdx*1], cl
add  rdx, 0x1
cmp  rdx, rdi
jne  0x201b8
lea  r8, [r9+rdx*1]
mov  rax, r8
ret
nop  DWORD PTR [rax+0x0]
lea  edx, [rsi-0x1]
mov  rsi, 0xfffffffffffffffe
sub  rsi, rdx
mov  rdx, 0xffffffffffffffff
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rax+rdx*1]
mov  BYTE PTR [r8+rdx*1], cl
sub  rdx, 0x1
cmp  rdx, rsi
jne  0x201f0
mov  rax, r8
ret
nop  DWORD PTR [rax]
mov  rdi, r8
lea  r10d, [rsi-0x8]
mov  r9, rdi
mov  rdx, rax
mov  r11d, r10d
sub  r11d, eax
nop  DWORD PTR [rax+rax*1+0x0]
movzx  ecx, BYTE PTR [rdx-0x1]
sub  rdx, 0x8
sub  r9, 0x8
mov  BYTE PTR [r9+0x7], cl
movzx  ecx, BYTE PTR [rdx+0x6]
mov  BYTE PTR [r9+0x6], cl
movzx  ecx, BYTE PTR [rdx+0x5]
mov  BYTE PTR [r9+0x5], cl
movzx  ecx, BYTE PTR [rdx+0x4]
mov  BYTE PTR [r9+0x4], cl
movzx  ecx, BYTE PTR [rdx+0x3]
mov  BYTE PTR [r9+0x3], cl
movzx  ecx, BYTE PTR [rdx+0x2]
mov  BYTE PTR [r9+0x2], cl
movzx  ecx, BYTE PTR [rdx+0x1]
mov  BYTE PTR [r9+0x1], cl
movzx  ecx, BYTE PTR [rdx]
mov  BYTE PTR [r9], cl
mov  ecx, r11d
add  ecx, edx
jns  0x20220
mov  edx, r10d
xor  ecx, ecx
shr  edx, 0x3
mov  r9d, edx
neg  r9d
shl  r9d, 0x3
cmp  esi, 0x7
cmovle r9d, ecx
add  edx, 0x1
mov  rcx, 0xfffffffffffffff8
neg  rdx
shl  rdx, 0x3
add  r9d, r10d
cmp  esi, 0x7
cmovle rdx, rcx
add  rax, rdx
add  rdi, rdx
jmp  0x20176
mov  esi, edi
mov  r9, r8
nop  DWORD PTR [rax+0x0]
lea  r10d, [rsi-0x8]
mov  rcx, r9
lea  r8d, [rsi+rax*1-0x8]
mov  rdx, rax
nop  WORD PTR [rax+rax*1+0x0]
movzx  edi, BYTE PTR [rdx]
add  rdx, 0x8
add  rcx, 0x8
mov  BYTE PTR [rcx-0x8], dil
movzx  edi, BYTE PTR [rdx-0x7]
mov  BYTE PTR [rcx-0x7], dil
movzx  edi, BYTE PTR [rdx-0x6]
mov  BYTE PTR [rcx-0x6], dil
movzx  edi, BYTE PTR [rdx-0x5]
mov  BYTE PTR [rcx-0x5], dil
movzx  edi, BYTE PTR [rdx-0x4]
mov  BYTE PTR [rcx-0x4], dil
movzx  edi, BYTE PTR [rdx-0x3]
mov  BYTE PTR [rcx-0x3], dil
movzx  edi, BYTE PTR [rdx-0x2]
mov  BYTE PTR [rcx-0x2], dil
movzx  edi, BYTE PTR [rdx-0x1]
mov  BYTE PTR [rcx-0x1], dil
cmp  r8d, edx
jns  0x202d0
mov  edx, r10d
xor  ecx, ecx
shr  edx, 0x3
mov  edi, edx
neg  edi
shl  edi, 0x3
cmp  esi, 0x7
cmovle edi, ecx
add  edx, 0x1
mov  ecx, 0x8
shl  rdx, 0x3
add  edi, r10d
cmp  esi, 0x7
cmovle rdx, rcx
add  rax, rdx
lea  r8, [r9+rdx*1]
jmp  0x200cb
mov  esi, r9d
endbr64
push r14
mov  r14d, ecx
push r13
mov  r13, rsi
mov  esi, 0x70
push r12
mov  r12, rdi
bswap  r13d
push rbp
push rbx
mov  rbp, QWORD PTR [rdi+0x48]
mov  ebx, edx
xor  edx, edx
and  ebx, 0x1f
mov  rdi, rbp
shl  ebx, 0x8
call 0x1edc0
or   bl, 0xa1
mov  DWORD PTR [rbp+0x5a], r13d
48 b8 02 00 00 00 0c 00 00 00 movabs rax, 0xc00000002
mov  QWORD PTR [rbp+0xc], rax
48 b8 12 00 00 00 80 25 00 00 movabs rax, 0x258000000012
mov  QWORD PTR [rbp+0x14], rax
movzx  eax, WORD PTR [rbp+0x58]
and  ax, 0xe000
or   ebx, eax
mov  WORD PTR [rbp+0x58], bx
test r14d, r14d
je   0x106bd
or   BYTE PTR [rbp+0x59], 0x10
lea  rax, [rip+0x12b59]
pop  rbx
mov  rdi, r12
pop  rbp
mov  QWORD PTR [r12+0x50], rax
pop  r12
pop  r13
pop  r14
endbr64
push r14
mov  r14d, esi
mov  esi, 0x70
push r13
mov  r13d, edx
xor  edx, edx
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
48 b8 02 00 00 00 0a 00 00 00 movabs rax, 0xa00000002
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 e0 01 00 00 movabs rax, 0x1e000000012
mov  QWORD PTR [rbx+0x14], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5a], r14b
shl  eax, 0xd
mov  BYTE PTR [rbx+0x5d], r13b
or   eax, 0x5b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r12d, r12d
je   0x103a1
or   BYTE PTR [rbx+0x59], 0x1
lea  rax, [rip+0x12e17]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
pop  r13
pop  r14
endbr64
push rbx
mov  rbx, rsi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  DWORD PTR [rsp], 0x0
mov  DWORD PTR [rsp+0x4], 0x0
test rsi, rsi
je   0x14226
mov  DWORD PTR [rsi], 0x0
test rdx, rdx
je   0x14231
mov  DWORD PTR [rdx], 0x0
mov  r10, rsp
sub  rsp, 0x8
xor  ecx, ecx
xor  r9d, r9d
push rdx
xor  esi, esi
mov  rdx, r10
lea  r8, [rsp+0x14]
call 0x12eb0
pop  rdx
pop  rcx
test eax, eax
je   0x14266
mov  eax, 0x1
test rbx, rbx
je   0x14266
mov  edx, DWORD PTR [rsp]
or   edx, DWORD PTR [rsp+0x4]
mov  DWORD PTR [rbx], edx
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0x1427c
add  rsp, 0x10
pop  rbx
ret
endbr64
push r15
xor  edx, edx
mov  r15, rdi
push r14
push r13
push r12
mov  r12d, esi
mov  esi, 0x24
push rbp
push rbx
sub  rsp, 0x158
mov  rbx, QWORD PTR [rdi+0xd8]
mov  rbp, QWORD PTR [rdi+0x48]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x148], rax
xor  eax, eax
mov  rdi, rbx
call 0x1edc0
add  DWORD PTR [r15+0x28], 0x1
mov  rdi, r15
mov  DWORD PTR [r15+0x40], 0x0
call 0xec00
cmp  DWORD PTR [rbp+0x24], 0x1
jle  0x130ca
test BYTE PTR [rbp+0x2c], 0x2
je   0x13210
mov  r14d, DWORD PTR [rbp+0x50]
test r14d, r14d
jle  0x13210
mov  edx, 0x24
mov  rsi, rbx
mov  rdi, r15
call 0xefb0
test eax, eax
jns  0x13180
mov  r13d, DWORD PTR [r15+0x2c]
test r13d, r13d
jne  0x13810
test BYTE PTR [rbp+0x2c], 0x2
jne  0x132f0
mov  DWORD PTR [rsp+0xc], 0x0
lea  r13, [rsp+0x40]
mov  DWORD PTR [rsp+0x4], 0x0
lea  rbp, [rbx+0x8]
lea  r14, [rsp+0x37]
mov  edx, 0x8
mov  rsi, rbp
mov  rdi, r14
call 0xb6b0
lea  rsi, [rbx+0x10]
mov  edx, 0x10
mov  rdi, r13
call 0xb6b0
lea  rsi, [rbx+0x20]
lea  rdi, [rsp+0x32]
mov  edx, 0x4
call 0xb6b0
mov  BYTE PTR [rsp+0x50], 0x0
movzx  eax, BYTE PTR [rbx]
mov  BYTE PTR [rsp+0x3f], 0x0
mov  BYTE PTR [rsp+0xb], al
and  eax, 0x1f
mov  BYTE PTR [rsp+0x36], 0x0
cmp  al, 0x6
ja   0x13250
lea  rdx, [rip+0x117b9]
movzx  eax, al
movsxd rax, DWORD PTR [rdx+rax*4]
add  rax, rdx
notrack jmp rax
mov  rdi, r15
call 0x164f0
mov  edx, 0x24
mov  r11d, DWORD PTR [r15+0x2c]
sub  edx, eax
mov  DWORD PTR [rsp+0xc], edx
test r11d, r11d
je   0x13778
movzx  eax, BYTE PTR [rbx+0x4]
cmp  al, 0x1f
ja   0x13968
mov  edi, 0x1
xor  eax, eax
lea  r13, [rsp+0x40]
mov  r14, rbx
lea  rsi, [rip+0x10639]
call 0xba60
mov  DWORD PTR [rsp+0x4], 0x24
xor  ebp, ebp
nop  DWORD PTR [rax+0x0]
movzx  edi, BYTE PTR [r14+rbp*1]
lea  eax, [rdi-0x20]
cmp  al, 0x5e
jbe  0x131e9
mov  edi, 0x2e
call 0xb670
add  rbp, 0x1
cmp  DWORD PTR [rsp+0x4], ebp
jg   0x131d8
mov  edi, 0xa
call 0xb670
mov  DWORD PTR [rsp+0x4], 0x1
jmp  0x1310e
nop
sub  DWORD PTR [r15+0x28], 0x1
xor  eax, eax
mov  rdx, QWORD PTR [rsp+0x148]
sub  rdx, QWORD PTR fs:0x28
jne  0x13e45
add  rsp, 0x158
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  DWORD PTR [r15+0x40], 0x259
nop  DWORD PTR [rax+rax*1+0x0]
sub  DWORD PTR [r15+0x28], 0x1
test r12d, r12d
je   0x132e0
mov  eax, DWORD PTR [rsp+0x4]
or   eax, DWORD PTR [r15+0x40]
je   0x13217
mov  rsi, QWORD PTR [rip+0x43ed1]
mov  rdi, r15
call 0x12220
mov  eax, 0x1
jmp  0x13217
xchg ax, ax
movzx  eax, BYTE PTR [rbx+0x4]
test al, al
jne  0x13850
cmp  BYTE PTR [rbx+0x8], 0x0
jne  0x13900
mov  eax, DWORD PTR [r15+0x40]
test eax, eax
jne  0x138b0
mov  r10d, DWORD PTR [rsp+0x4]
test r10d, r10d
je   0x13250
mov  DWORD PTR [r15+0x40], 0x5
mov  ecx, 0x8
mov  edx, 0x1d
mov  rdi, rbp
lea  rsi, [rip+0x10545]
call 0xb910
sub  DWORD PTR [r15+0x28], 0x1
test r12d, r12d
jne  0x13268
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, 0x1
jmp  0x13217
nop  WORD PTR [rax+rax*1+0x0]
cmp  DWORD PTR [rbp+0x50], 0x4
jne  0x130f9
mov  rbp, QWORD PTR [r15+0x48]
xor  edx, edx
mov  esi, 0x70
49 be 00 00 00 00 02 00 00 00 movabs r14, 0x200000000
49 bd 06 00 00 00 10 00 00 00 movabs r13, 0x1000000006
mov  rdi, rbp
call 0x1edc0
mov  QWORD PTR [rbp+0x8], r14
movzx  edx, WORD PTR [rbp+0x58]
mov  rdi, r15
mov  QWORD PTR [rbp+0x10], r13
movzx  eax, WORD PTR [r15+0x14]
lea  rcx, [rip+0xfd97]
and  dx, 0x1f00
mov  QWORD PTR [rbp+0x0], 0x0
shl  eax, 0xd
mov  BYTE PTR [rbp+0x5a], 0x12
or   eax, 0xd
or   eax, edx
mov  WORD PTR [rbp+0x58], ax
mov  QWORD PTR [r15+0x50], rcx
call 0x17650
mov  rbp, QWORD PTR [r15+0x48]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbp
call 0x1edc0
mov  QWORD PTR [rbp+0x8], r14
movzx  edx, WORD PTR [rbp+0x58]
mov  rdi, r15
mov  QWORD PTR [rbp+0x10], r13
movzx  eax, WORD PTR [r15+0x14]
lea  rcx, [rip+0xfd43]
and  dx, 0x1f00
mov  QWORD PTR [rbp+0x0], 0x0
shl  eax, 0xd
mov  BYTE PTR [rbp+0x5a], 0x1
or   eax, 0xd
or   eax, edx
mov  WORD PTR [rbp+0x58], ax
mov  QWORD PTR [r15+0x50], rcx
call 0x17650
test eax, eax
js   0x13ae0
movzx  eax, WORD PTR [rbx]
mov  DWORD PTR [r15+0x40], 0x65
lea  r13, [rsp+0x40]
mov  DWORD PTR [rsp+0xc], 0x0
and  ax, 0x7fe0
mov  DWORD PTR [rsp+0x4], 0x0
or   ax, 0x8001
mov  WORD PTR [rbx], ax
jmp  0x1310e
xchg ax, ax
lea  rsi, [rip+0x104fe]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13a28
lea  rsi, [rip+0x104ef]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13a00
lea  rsi, [rip+0x104e5]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13a38
lea  rsi, [rip+0x104de]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13940
lea  rsi, [rip+0x104d8]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13b02
lea  rsi, [rip+0x104dc]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13680
lea  rsi, [rip+0x104cd]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13ccc
lea  rsi, [rip+0x104bd]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13ab8
lea  rsi, [rip+0x104b5]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13b92
lea  rsi, [rip+0x104a5]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13b92
lea  rsi, [rip+0x10491]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13b92
lea  rsi, [rip+0x1047f]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13b92
lea  rsi, [rip+0x104ca]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13d8b
lea  rsi, [rip+0x104dc]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13df0
lea  rsi, [rip+0x104f9]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13e4a
lea  rsi, [rip+0x104f8]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13ebe
lea  rsi, [rip+0x104f8]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13ef5
lea  rsi, [rip+0x104ee]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13f4f
lea  rsi, [rip+0x1050c]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13f2a
lea  rsi, [rip+0x102f7]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x14081
lea  rsi, [rip+0x1050b]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x1404c
lea  rsi, [rip+0x10500]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x14174
lea  rsi, [rip+0x104f1]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x14174
lea  rsi, [rip+0x104ea]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x1414f
lea  rsi, [rip+0x104e6]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x14103
lea  rsi, [rip+0x104db]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x140b6
lea  rsi, [rip+0x104de]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13fcc
nop  DWORD PTR [rax+rax*1+0x0]
mov  r9d, DWORD PTR [r15+0x40]
test r9d, r9d
jne  0x13250
lea  rsi, [rip+0x104d8]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13ad0
movzx  r14d, BYTE PTR [rsp+0xb]
and  r14d, 0x1f
cmp  r14b, 0x5
jne  0x13250
mov  DWORD PTR [rsp+0x18], 0x0
lea  rcx, [rsp+0x20]
lea  rdx, [rsp+0x1c]
mov  rdi, r15
mov  DWORD PTR [rsp+0x1c], 0x0
lea  rsi, [rsp+0x18]
sub  rsp, 0x8
mov  DWORD PTR [rsp+0x28], 0x0
mov  DWORD PTR [rsp+0x2c], 0x0
mov  DWORD PTR [rsp+0x30], 0x0
mov  DWORD PTR [rsp+0x34], 0x0
lea  rax, [rsp+0x34]
push rax
mov  DWORD PTR [r15+0x40], 0x1f4
lea  r9, [rsp+0x38]
lea  r8, [rsp+0x34]
call 0x12eb0
pop  rdi
pop  r8
test eax, eax
je   0x1372b
mov  DWORD PTR [r15+0x40], 0x1f5
mov  esi, DWORD PTR [rsp+0x1c]
test esi, esi
je   0x1373b
mov  DWORD PTR [r15+0x40], 0x1f6
mov  ecx, DWORD PTR [rsp+0x24]
test ecx, ecx
je   0x1374b
mov  DWORD PTR [r15+0x40], 0x1f7
mov  edx, DWORD PTR [rsp+0x28]
test edx, edx
je   0x1375b
mov  DWORD PTR [r15+0x40], 0x1f8
mov  eax, DWORD PTR [rsp+0x2c]
test eax, eax
je   0x13250
mov  DWORD PTR [r15+0x40], 0x1f9
jmp  0x13250
nop  DWORD PTR [rax+0x0]
mov  DWORD PTR [rsp+0x4], 0x1
lea  r13, [rsp+0x40]
jmp  0x1310e
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x103dd]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
jne  0x13250
mov  DWORD PTR [r15+0x40], 0x258
jmp  0x13250
nop  DWORD PTR [rax]
cmp  DWORD PTR [r15+0x40], 0x65
je   0x13a60
cmp  BYTE PTR [rbx+0x4], 0x0
jne  0x13250
cmp  BYTE PTR [rbx+0x1], 0x0
jns  0x13250
movzx  eax, BYTE PTR [rbx+0x2]
and  eax, 0x7
cmp  al, 0x1
jne  0x13250
mov  DWORD PTR [r15+0x40], 0x64
mov  ecx, 0x8
mov  edx, 0x1d
mov  rdi, rbp
lea  rsi, [rip+0x100d6]
call 0xb910
jmp  0x13250
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rbp+0x2c]
movzx  r9d, BYTE PTR [rbp+0x2f]
mov  edi, 0x1
xor  eax, eax
mov  edx, DWORD PTR [rbp+0x24]
mov  r8d, DWORD PTR [rbp+0x50]
lea  rsi, [rip+0x10852]
shr  cl, 1
and  r9d, 0x7f
and  ecx, 0x1
call 0xba60
jmp  0x130ef
movzx  eax, BYTE PTR [rbx+0x4]
test al, al
je   0x13296
nop  DWORD PTR [rax]
cmp  al, 0x1e
jbe  0x138f0
lea  rsi, [rip+0x1003f]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13b6d
lea  rsi, [rip+0x1002e]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13ca7
lea  rsi, [rip+0x10027]
mov  rdi, r14
call 0xbbc0
cmp  r14, rax
je   0x13cd9
mov  DWORD PTR [r15+0x40], 0xb
jmp  0x13250
nop  DWORD PTR [rax]
cmp  eax, 0x2
je   0x13b4f
jle  0x139a6
cmp  eax, 0x3
jne  0x139d0
mov  ecx, 0x8
mov  edx, 0x1d
lea  rsi, [rip+0xff8b]
mov  rdi, rbp
call 0xb910
jmp  0x13250
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [r15+0x40], 0xa
jmp  0x13250
nop  DWORD PTR [rax]
cmp  DWORD PTR [rsp+0xc], 0x23
lea  rsi, [rbx+0x24]
jle  0x1390f
mov  BYTE PTR [rbx+0x4], 0x1f
mov  rdx, rbp
jmp  0x13925
nop  DWORD PTR [rax+0x0]
add  rdx, 0x1
cmp  rsi, rdx
jbe  0x13841
movzx  eax, BYTE PTR [rdx]
sub  eax, 0x20
cmp  al, 0x5e
jbe  0x13918
mov  BYTE PTR [rbx+0x4], 0x0
jmp  0x13296
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xffde]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x202
jmp  0x13250
nop  DWORD PTR [rax]
lea  r13, [rsp+0x40]
lea  edx, [rax+0x5]
mov  rdi, r15
mov  rsi, r13
call 0xefb0
test eax, eax
jns  0x13a80
lea  rsi, [rip+0xfe71]
mov  edi, 0x1
xor  eax, eax
mov  r14, rbx
call 0xba60
mov  DWORD PTR [rsp+0x4], 0x24
jmp  0x131cf
cmp  eax, 0x1
jne  0x13250
mov  ecx, 0x8
mov  edx, 0x1d
lea  rsi, [rip+0xfe6a]
mov  rdi, rbp
call 0xb910
jmp  0x13250
nop  DWORD PTR [rax]
cmp  eax, 0x4
jne  0x13250
mov  ecx, 0x8
mov  edx, 0x1d
lea  rsi, [rip+0xfe97]
mov  rdi, rbp
call 0xb910
jmp  0x13250
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xfefc]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x226
jmp  0x13250
nop  DWORD PTR [rax]
mov  DWORD PTR [r15+0x40], 0x191
jmp  0x13408
nop  DWORD PTR [rax]
lea  rsi, [rip+0xfed6]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x227
jmp  0x13250
nop  DWORD PTR [rax]
mov  ecx, 0x8
mov  edx, 0x1d
lea  rsi, [rip+0xfe4a]
mov  rdi, rbp
call 0xb910
jmp  0x13250
xchg ax, ax
movzx  ebp, BYTE PTR [rbx+0x4]
mov  rdi, r15
mov  r14, r13
call 0x164f0
lea  rsi, [rip+0xfd65]
mov  edi, 0x1
add  ebp, 0x5
sub  ebp, eax
xor  eax, eax
mov  DWORD PTR [rsp+0x4], ebp
call 0xba60
test ebp, ebp
jg   0x131cf
jmp  0x131f8
lea  rsi, [rip+0xfea4]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x21c
jmp  0x13250
nop  DWORD PTR [rax]
mov  DWORD PTR [r15+0x40], 0x1
lea  r13, [rsp+0x40]
mov  DWORD PTR [rsp+0xc], 0x0
mov  DWORD PTR [rsp+0x4], 0x0
jmp  0x1310e
lea  rsi, [rip+0xfe2a]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13b42
lea  rsi, [rip+0xfe1f]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13b42
lea  rsi, [rip+0xfe14]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x230
jmp  0x13250
mov  ecx, 0x8
mov  edx, 0x1d
lea  rsi, [rip+0xfce7]
mov  rdi, rbp
call 0xb910
jmp  0x13250
lea  rsi, [rip+0xfa28]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x138a0
mov  DWORD PTR [r15+0x40], 0x9
jmp  0x13250
lea  rsi, [rip+0xfde8]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13cfe
lea  rsi, [rip+0xfdda]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13cfe
lea  rsi, [rip+0xfdcc]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d7e
lea  rsi, [rip+0xfdbb]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d18
lea  rsi, [rip+0xfdaa]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d0b
lea  rsi, [rip+0xfd99]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d4c
lea  rsi, [rip+0xfd89]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d3f
lea  rsi, [rip+0xfd79]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d32
lea  rsi, [rip+0xfd67]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d25
lea  rsi, [rip+0xfd55]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13d59
lea  rsi, [rip+0xfd49]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x203
jmp  0x13250
lea  rsi, [rip+0xfbff]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x138a0
mov  DWORD PTR [r15+0x40], 0x7
jmp  0x13250
mov  DWORD PTR [r15+0x40], 0x200
jmp  0x13250
lea  rsi, [rip+0xf8ec]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x138a0
mov  DWORD PTR [r15+0x40], 0x2bc
jmp  0x13250
mov  DWORD PTR [r15+0x40], 0x1fe
jmp  0x13bda
mov  DWORD PTR [r15+0x40], 0x200
jmp  0x13c0a
mov  DWORD PTR [r15+0x40], 0x200
jmp  0x13bf2
mov  DWORD PTR [r15+0x40], 0x203
jmp  0x13c6a
mov  DWORD PTR [r15+0x40], 0x202
jmp  0x13c52
mov  DWORD PTR [r15+0x40], 0x202
jmp  0x13c3a
mov  DWORD PTR [r15+0x40], 0x201
jmp  0x13c22
mov  DWORD PTR [r15+0x40], 0x202
lea  rsi, [rip+0xfc6a]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13250
jmp  0x13c9a
mov  DWORD PTR [r15+0x40], 0x1ff
jmp  0x13bda
lea  rsi, [rip+0xfc58]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13eb1
lea  rsi, [rip+0xfc49]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13ea4
lea  rsi, [rip+0xfc39]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13e7f
lea  rsi, [rip+0xfc29]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13b42
lea  rsi, [rip+0xfc1c]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13edb
lea  rsi, [rip+0xfc13]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13edb
lea  rsi, [rip+0xfc0a]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x245
jmp  0x13250
call 0xb790
lea  rsi, [rip+0xfbf7]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13ee8
lea  rsi, [rip+0xfbe6]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13958
mov  DWORD PTR [r15+0x40], 0x230
lea  rsi, [rip+0xfb75]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13250
jmp  0x13b42
mov  DWORD PTR [r15+0x40], 0x230
jmp  0x13dbb
mov  DWORD PTR [r15+0x40], 0x230
jmp  0x13da3
lea  rsi, [rip+0xfb9a]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13a18
mov  DWORD PTR [r15+0x40], 0x244
jmp  0x13250
mov  DWORD PTR [r15+0x40], 0x212
jmp  0x13250
lea  rsi, [rip+0xf84f]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x14005
lea  rsi, [rip+0xfb61]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13a50
lea  rsi, [rip+0xfb88]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x1ff
jmp  0x13250
lea  rsi, [rip+0xfb2b]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13ad0
lea  rsi, [rip+0xfb1c]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13ad0
lea  rsi, [rip+0xfb0e]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13b42
lea  rsi, [rip+0xfb03]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13b42
lea  rsi, [rip+0xfaf4]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13b42
lea  rsi, [rip+0xfb7b]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x1402a
lea  rsi, [rip+0xfb76]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x23b
jmp  0x13250
mov  DWORD PTR [r15+0x40], 0x226
lea  rsi, [rip+0xfa61]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13250
jmp  0x13a50
mov  DWORD PTR [r15+0x40], 0x23a
lea  rsi, [rip+0xfb24]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13250
jmp  0x13ff8
lea  rsi, [rip+0xf706]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13b42
lea  rsi, [rip+0xfa7c]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13b42
lea  rsi, [rip+0xfa40]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x13ad0
lea  rsi, [rip+0xfa35]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13ad0
lea  rsi, [rip+0xfa74]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x14142
lea  rsi, [rip+0xfa66]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
je   0x14120
lea  rsi, [rip+0xfa59]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x209
jmp  0x13250
lea  rsi, [rip+0xfa17]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
jmp  0x13c9a
mov  DWORD PTR [r15+0x40], 0x209
lea  rsi, [rip+0xfa0f]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13250
jmp  0x140f6
mov  DWORD PTR [r15+0x40], 0x208
jmp  0x140ca
lea  rsi, [rip+0xf9bb]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
mov  DWORD PTR [r15+0x40], 0x204
jmp  0x13250
lea  rsi, [rip+0xf986]
mov  rdi, r13
call 0xbbc0
cmp  r13, rax
jne  0x13680
endbr64
lea  rdi, [rip+0x35155]
endbr64
sub  rsp, 0x8
call 0xb6a0
mov  eax, DWORD PTR [rax]
add  rsp, 0x8
endbr64
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
test rsi, rsi
je   0x12b3c
test BYTE PTR [rsi+0x7], 0x4
jne  0x12ba0
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], 0x2
shl  eax, 0xd
or   eax, 0x1b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x10510]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
add  rsp, 0x8
pop  rbx
pop  rbp
jmp  0x17650
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], 0x2
shl  eax, 0xd
or   eax, 0x1b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
or   BYTE PTR [rbx+0x59], 0x1
endbr64
push rbp
mov  rdx, rdi
lea  rsi, [rip+0xda80]
mov  edi, 0x1
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rbp, [rsp+0xe]
call 0xba60
call 0x20a60
mov  esi, 0xa
mov  rdi, rbp
call 0x20700
cmp  eax, 0xffffffff
je   0x164e4
lea  rsi, [rip+0xc7d3]
mov  rdi, rbp
call 0x20630
test eax, eax
je   0x164a0
mov  eax, 0x1
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x164df
add  rsp, 0x20
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xe8a6]
mov  rdi, rbp
call 0x20630
test eax, eax
jne  0x1647c
lea  rsi, [rip+0xd3ff]
mov  rdi, rbp
call 0x20630
test eax, eax
jne  0x1647c
lea  rsi, [rip+0xe884]
mov  rdi, rbp
call 0x20630
test eax, eax
setne  al
movzx  eax, al
jmp  0x16481
call 0xb790
or   edi, 0xffffffff
endbr64
48 ba 37 63 5c 22 b5 14 41 3a movabs rdx, 0x3a4114b5225c6337
mov  rcx, rdi
mov  rdi, rsi
mov  rax, rcx
mov  r8, rcx
imul rdx
mov  rax, rcx
sar  rax, 0x3f
sar  rdx, 0xa
mov  rsi, rdx
48 ba 07 3a 6d a0 d3 06 3a 6d movabs rdx, 0x6d3a06d3a06d3a07
sub  rsi, rax
imul r9d, esi, 0x1194
mov  BYTE PTR [rdi], sil
movsxd rax, r9d
sub  ecx, r9d
sub  r8, rax
mov  rax, r8
sar  r8, 0x3f
imul rdx
sar  rdx, 0x5
sub  rdx, r8
mov  BYTE PTR [rdi+0x1], dl
imul edx, edx, 0x4b
sub  ecx, edx
mov  BYTE PTR [rdi+0x2], cl
endbr64
push r13
push r12
mov  r12, rdx
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1ff44
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0x100]
mov  r13, rsp
mov  DWORD PTR [rsp], 0x18
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
jmp  0x1ff88
nop
sub  DWORD PTR [rbx], 0x1
add  QWORD PTR [rbp+0x0], 0x8
mov  r8, r13
mov  ecx, 0x1
mov  rdx, r12
mov  rsi, rbp
mov  rdi, rbx
call 0x1f490
cmp  eax, 0x1
je   0x1ff80
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x1ffc1
add  rsp, 0xd8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
endbr64
mov  rax, QWORD PTR [rip+0x37f45]
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x118
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
lea  eax, [rdx-0x1]
cmp  eax, 0xfe
ja   0x10fd8
mov  r14, rsp
mov  ebx, edx
mov  r12, rdi
xor  edx, edx
mov  rdi, r14
mov  rbp, rsi
mov  esi, 0x104
mov  r15d, ecx
mov  r13d, r8d
call 0x1edc0
cmp  ebx, 0x3
lea  eax, [rbx+0x1]
lea  edx, [rbx+0x4]
cmovle edx, eax
mov  r8d, r13d
mov  ecx, r15d
mov  rsi, r14
mov  rdi, r12
call 0x10d20
test eax, eax
js   0x10fd8
mov  rdi, r12
call 0x164f0
sub  ebx, eax
cmp  ebx, 0x4
jg   0x10fa0
movzx  eax, WORD PTR [rsp]
xor  edx, edx
rol  ax, 0x8
movzx  ecx, ax
test ecx, ecx
jne  0x10f88
movzx  eax, WORD PTR [rsp+0x2]
mov  BYTE PTR [rbp+0x0], dl
mov  WORD PTR [rbp+0x1], ax
movzx  eax, WORD PTR [rsp+0x6]
rol  ax, 0x8
mov  BYTE PTR [rbp+0x3], al
mov  eax, DWORD PTR [r12+0x2c]
test eax, eax
jne  0x10fc0
mov  rdx, QWORD PTR [rsp+0x108]
sub  rdx, QWORD PTR fs:0x28
jne  0x10fe2
add  rsp, 0x118
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  edx, 0x2
cmp  ecx, edx
cmovle edx, ecx
sub  eax, 0x3
cmp  ecx, 0x5
cmovg  edx, eax
jmp  0x10f3b
nop  DWORD PTR [rax]
lea  edx, [rbx-0x4]
lea  rsi, [rbp+0x4]
lea  rdi, [rsp+0x8]
call 0x20010
jmp  0x10f2a
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  edx, ebx
mov  rsi, rbp
lea  rdi, [rip+0x12311]
call 0x16b90
xor  eax, eax
jmp  0x10f5c
nop  DWORD PTR [rax]
mov  eax, 0xffffffff
jmp  0x10f5c
endbr64
push r12
xor  edx, edx
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rsi
mov  esi, 0x100
sub  rsp, 0x110
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
mov  r12, rsp
mov  rdi, r12
call 0x1edc0
xor  r8d, r8d
xor  edx, edx
mov  r9d, 0x1
mov  ecx, 0x4
mov  rsi, r12
mov  rdi, rbp
call 0xfc30
test eax, eax
js   0x11cb3
movzx  ecx, WORD PTR [rsp]
rol  cx, 0x8
movzx  ecx, cx
add  ecx, 0x2
cmp  ecx, 0x100
ja   0x11ca0
xor  r8d, r8d
xor  edx, edx
mov  r9d, 0x1
mov  rsi, r12
mov  rdi, rbp
call 0xfc30
test eax, eax
js   0x11cb3
xor  r8d, r8d
test rbx, rbx
je   0x11c79
movzx  edx, BYTE PTR [rsp+0x2]
sub  edx, 0x1
movsxd rdx, edx
movzx  eax, BYTE PTR [rsp+rdx*8+0xa]
movzx  ecx, BYTE PTR [rsp+rdx*8+0x9]
shl  eax, 0x8
shl  ecx, 0x10
or   eax, ecx
movzx  ecx, BYTE PTR [rsp+rdx*8+0xb]
movzx  edx, BYTE PTR [rsp+rdx*8+0x8]
or   eax, ecx
shl  edx, 0x18
cdqe
or   rax, rdx
mov  QWORD PTR [rbx], rax
mov  rax, QWORD PTR [rsp+0x108]
sub  rax, QWORD PTR fs:0x28
jne  0x11cbb
add  rsp, 0x110
mov  eax, r8d
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x1170c]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
mov  r8d, 0xffffffff
jmp  0x11c79
endbr64
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rsi
sub  rsp, 0x8
cmp  BYTE PTR [rsi+0x1], 0x0
js   0x17d20
movzx  eax, BYTE PTR [rbx+0x3]
and  eax, 0xf
cmp  al, 0x1
movzx  eax, BYTE PTR [rbx]
jbe  0x17cd0
mov  ecx, eax
shr  cl, 0x5
cmp  cl, 0x2
je   0x17d98
ja   0x17cf0
test cl, cl
je   0x17cd0
mov  rcx, rbp
mov  edx, 0xc
mov  esi, 0x1
lea  rdi, [rip+0xd1c8]
call 0xbaf0
movzx  eax, BYTE PTR [rbx]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, rax
lea  rsi, [rip+0xd55e]
mov  ecx, eax
and  edx, 0x1f
and  ecx, 0x1f
movsxd rdx, DWORD PTR [rsi+rdx*4]
add  rdx, rsi
notrack jmp rdx
nop  DWORD PTR [rax+0x0]
cmp  cl, 0x3
jne  0x17d70
and  eax, 0x1f
mov  rcx, rbp
mov  edx, 0xc
mov  esi, 0x1
cmp  al, 0x1f
je   0x18080
lea  rdi, [rip+0xd198]
call 0xbaf0
movzx  eax, BYTE PTR [rbx]
jmp  0x17cd0
xchg ax, ax
mov  rcx, rdi
mov  edx, 0xa
mov  esi, 0x1
lea  rdi, [rip+0xd149]
call 0xbaf0
jmp  0x17c8a
xchg ax, ax
movzx  ecx, cl
lea  rdx, [rip+0xd28d]
mov  rdi, rbp
xor  eax, eax
mov  esi, 0x1
call 0xbb10
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
jmp  0xb890
nop  DWORD PTR [rax+0x0]
movzx  ecx, cl
lea  rdx, [rip+0xd13f]
mov  rdi, rbp
xor  eax, eax
mov  esi, 0x1
call 0xbb10
movzx  eax, BYTE PTR [rbx]
jmp  0x17cd0
nop  DWORD PTR [rax+0x0]
mov  rcx, rbp
mov  edx, 0x9
mov  esi, 0x1
lea  rdi, [rip+0xd0e9]
call 0xbaf0
movzx  eax, BYTE PTR [rbx]
jmp  0x17cd0
nop  DWORD PTR [rax+0x0]
mov  rcx, rbp
mov  edx, 0x4
mov  esi, 0x1
lea  rdi, [rip+0xd110]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x4
mov  esi, 0x1
lea  rdi, [rip+0xb7bd]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0xe
mov  esi, 0x1
lea  rdi, [rip+0xd191]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x1a
mov  esi, 0x1
lea  rdi, [rip+0xd156]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x14
mov  esi, 0x1
lea  rdi, [rip+0xd121]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x11
mov  esi, 0x1
lea  rdi, [rip+0xd0ef]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x10
mov  esi, 0x1
lea  rdi, [rip+0xd0be]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x14
mov  esi, 0x1
lea  rdi, [rip+0xd089]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x12
mov  esi, 0x1
lea  rdi, [rip+0xd056]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0xd
mov  esi, 0x1
lea  rdi, [rip+0xd028]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x5
mov  esi, 0x1
lea  rdi, [rip+0xd002]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x5
mov  esi, 0x1
lea  rdi, [rip+0xcfdc]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0xd
mov  esi, 0x1
lea  rdi, [rip+0xcfae]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x8
mov  esi, 0x1
lea  rdi, [rip+0xcf85]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0xf
mov  esi, 0x1
lea  rdi, [rip+0xcf55]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0xb656]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x6
mov  esi, 0x1
lea  rdi, [rip+0xb656]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
movzx  edx, BYTE PTR [rbx+0x3]
and  edx, 0xf
cmp  dl, 0x1
ja   0x18098
and  eax, 0xffffffe0
cmp  al, 0x60
jne  0x17d40
mov  rcx, rbp
mov  edx, 0x10
mov  esi, 0x1
lea  rdi, [rip+0xcfb7]
call 0xbaf0
jmp  0x17d59
nop  DWORD PTR [rax+0x0]
mov  rcx, rbp
mov  edx, 0x9
mov  esi, 0x1
lea  rdi, [rip+0xcea6]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0xce7e]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
mov  rcx, rbp
mov  edx, 0x4
mov  esi, 0x1
lea  rdi, [rip+0xce59]
call 0xbaf0
jmp  0x17d59
xchg ax, ax
add  rsp, 0x8
lea  rdi, [rip+0xce14]
pop  rbx
pop  rbp
jmp  0xbaf0
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x11
mov  esi, 0x1
lea  rdi, [rip+0xcf08]
call 0xbaf0
endbr64
mov  r11, rsi
mov  r10, QWORD PTR [rsp+0x8]
mov  rsi, rdx
mov  rax, rcx
movzx  edx, BYTE PTR [rdi+0x3]
test r11, r11
je   0x12e25
movzx  ecx, BYTE PTR [rdi+0x2]
and  ecx, 0x1
mov  DWORD PTR [r11], ecx
test rsi, rsi
je   0x12e31
mov  ecx, edx
and  ecx, 0x1
mov  DWORD PTR [rsi], ecx
test rax, rax
je   0x12e41
movzx  ecx, BYTE PTR [rdi+0x2]
shr  cl, 1
and  ecx, 0x1
mov  DWORD PTR [rax], ecx
test r8, r8
je   0x12e50
mov  eax, edx
shr  al, 1
and  eax, 0x1
mov  DWORD PTR [r8], eax
mov  eax, edx
mov  esi, edx
shr  al, 0x5
shr  sil, 0x4
and  eax, 0x1
and  esi, 0x1
test r9, r9
je   0x12e8e
movzx  edx, BYTE PTR [rdi+0x2]
mov  ecx, edx
mov  edi, edx
shr  dl, 0x3
shr  cl, 0x5
shr  dil, 0x4
and  edx, 0x1
and  ecx, 0x1
and  edi, 0x1
add  ecx, edi
add  ecx, edx
setne  dl
movzx  edx, dl
mov  DWORD PTR [r9], edx
test r10, r10
je   0x12ea5
movzx  eax, al
movzx  edx, sil
add  eax, edx
setne  al
movzx  eax, al
mov  DWORD PTR [r10], eax
endbr64
push rbp
xor  edx, edx
mov  rbp, rdi
mov  esi, 0x70
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], 0x0
mov  rdi, rbp
48 b8 00 00 00 00 02 00 00 00 movabs rax, 0x200000000
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
shl  eax, 0xd
or   eax, 0x1
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x141d6]
mov  QWORD PTR [rbp+0x50], rax
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
mov  rax, rdi
mov  edi, edx
mov  r8, rax
test esi, esi
jle  0x1ef23
lea  ecx, [rsi-0x1]
jmp  0x1edf3
nop  DWORD PTR [rax+0x0]
add  rax, 0x1
mov  esi, ecx
mov  BYTE PTR [rax-0x1], dil
sub  ecx, 0x1
jb   0x1ef30
test al, 0x7
jne  0x1ede0
cmp  esi, 0x3f
jle  0x1ef40
movzx  edx, dl
movsxd rdi, esi
mov  r9d, esi
mov  rcx, rdx
mov  r8, rdi
and  rdi, 0xffffffffffffffc0
and  r9d, 0x3f
shl  rcx, 0x8
shr  r8, 0x6
add  rdi, rax
or   rcx, rdx
mov  rdx, rcx
shl  rdx, 0x10
or   rdx, rcx
mov  rcx, rdx
shl  rcx, 0x20
or   rcx, rdx
mov  rdx, rax
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rdx], rcx
add  rdx, 0x40
mov  QWORD PTR [rdx-0x38], rcx
mov  QWORD PTR [rdx-0x30], rcx
mov  QWORD PTR [rdx-0x28], rcx
mov  QWORD PTR [rdx-0x20], rcx
mov  QWORD PTR [rdx-0x18], rcx
mov  QWORD PTR [rdx-0x10], rcx
mov  QWORD PTR [rdx-0x8], rcx
cmp  rdi, rdx
jne  0x1ee40
movsxd r8, r8d
shl  r8, 0x6
add  r8, rax
test sil, 0x38
je   0x1eed7
sub  r9d, 0x8
mov  edx, ecx
mov  rax, r8
lea  edi, [r9+r8*1]
nop  DWORD PTR [rax]
mov  BYTE PTR [rax], dl
add  rax, 0x8
mov  BYTE PTR [rax-0x7], dl
mov  BYTE PTR [rax-0x6], dl
mov  BYTE PTR [rax-0x5], dl
mov  BYTE PTR [rax-0x4], dl
mov  BYTE PTR [rax-0x3], dl
mov  BYTE PTR [rax-0x2], dl
mov  BYTE PTR [rax-0x1], dl
cmp  edi, eax
jns  0x1ee88
mov  edx, r9d
mov  eax, 0x0
shr  edx, 0x3
mov  edi, edx
neg  edi
shl  edi, 0x3
and  esi, 0x38
cmove  edi, eax
lea  eax, [rdx+0x1]
mov  edx, 0x8
shl  rax, 0x3
add  r9d, edi
test esi, esi
cmove  rax, rdx
add  r8, rax
test r9d, r9d
jle  0x1ef23
48 b8 01 01 01 01 01 01 01 01 movabs rax, 0x101010101010101
movzx  ecx, cl
movsxd r10, r9d
imul rcx, rax
cmp  r9d, 0x8
jae  0x1efc0
test r9b, 0x4
jne  0x1f009
test r9d, r9d
je   0x1ef20
mov  BYTE PTR [r8], cl
test r9b, 0x2
je   0x1ef20
mov  eax, r9d
mov  WORD PTR [r8+rax*1-0x2], cx
nop  DWORD PTR [rax+rax*1+0x0]
add  r8, r10
mov  rax, r8
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  r8, rax
mov  rax, r8
ret
nop  WORD PTR [rax+rax*1+0x0]
48 b9 01 01 01 01 01 01 01 01 movabs rcx, 0x101010101010101
movzx  edx, dl
movsxd r8, esi
imul rdx, rcx
cmp  esi, 0x8
jb   0x1efa0
mov  ecx, esi
lea  rdi, [rax+0x8]
mov  QWORD PTR [rax], rdx
and  rdi, 0xfffffffffffffff8
mov  QWORD PTR [rax+rcx*1-0x8], rdx
mov  rcx, rax
sub  rcx, rdi
add  ecx, esi
and  ecx, 0xfffffff8
cmp  ecx, 0x8
jb   0x1ef90
mov  esi, ecx
xor  ecx, ecx
and  esi, 0xfffffff8
mov  r9d, ecx
add  ecx, 0x8
mov  QWORD PTR [rdi+r9*1], rdx
cmp  ecx, esi
jb   0x1ef82
add  r8, rax
mov  rax, r8
ret
nop  WORD PTR [rax+rax*1+0x0]
test sil, 0x4
jne  0x1efff
test esi, esi
je   0x1ef90
mov  BYTE PTR [rax], dl
test sil, 0x2
je   0x1ef90
mov  esi, esi
mov  WORD PTR [rax+rsi*1-0x2], dx
jmp  0x1ef90
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, r9d
lea  rsi, [r8+0x8]
mov  QWORD PTR [r8], rcx
and  rsi, 0xfffffffffffffff8
mov  QWORD PTR [r8+rax*1-0x8], rcx
mov  rax, r8
sub  rax, rsi
add  eax, r9d
and  eax, 0xfffffff8
cmp  eax, 0x8
jb   0x1ef20
and  eax, 0xfffffff8
xor  edx, edx
mov  edi, edx
add  edx, 0x8
mov  QWORD PTR [rsi+rdi*1], rcx
cmp  edx, eax
jb   0x1efed
jmp  0x1ef20
mov  esi, esi
mov  DWORD PTR [rax], edx
mov  DWORD PTR [rax+rsi*1-0x4], edx
jmp  0x1ef90
mov  eax, r9d
mov  DWORD PTR [r8], ecx
mov  DWORD PTR [r8+rax*1-0x4], ecx
endbr64
push r14
push r13
push r12
mov  r12d, esi
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x110
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
add  DWORD PTR [rdi+0x28], 0x1
mov  rbp, rsp
call 0xec00
sub  DWORD PTR [rbx+0x28], 0x1
xor  edx, edx
mov  esi, 0x100
mov  rdi, rbp
call 0x1edc0
add  DWORD PTR [rbx+0x28], 0x1
test r12d, r12d
mov  rsi, rbp
sete r12b
mov  r10d, DWORD PTR [rip+0x466c0]
mov  ecx, 0x3f
mov  rdi, rbx
movzx  r12d, r12b
mov  edx, 0xc
add  r12d, r12d
mov  r8d, r12d
test r10d, r10d
jne  0x11da8
call 0x10c30
test eax, eax
js   0x11db1
cmp  BYTE PTR [rsp+0x3], 0x8
mov  r13d, 0xffffffff
je   0x11e00
xor  edx, edx
mov  esi, 0x100
mov  rdi, rbp
call 0x1edc0
mov  edx, DWORD PTR [rbx+0x24]
test edx, edx
jne  0x11e30
mov  eax, DWORD PTR [rbx+0x28]
sub  eax, 0x1
mov  DWORD PTR [rbx+0x28], eax
mov  rax, QWORD PTR [rsp+0x108]
sub  rax, QWORD PTR fs:0x28
jne  0x11f63
add  rsp, 0x110
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
call 0x10ea0
test eax, eax
jns  0x11d45
xor  edx, edx
mov  esi, 0x100
mov  rdi, rbp
call 0x1edc0
mov  r8d, r12d
xor  ecx, ecx
mov  edx, 0xc
mov  r9d, DWORD PTR [rip+0x4660f]
mov  rsi, rbp
mov  rdi, rbx
test r9d, r9d
jne  0x11ec8
call 0x10c30
test eax, eax
jns  0x11d45
mov  eax, DWORD PTR [rbx+0x28]
mov  r13d, 0xffffffff
sub  eax, 0x1
jmp  0x11d76
xchg ax, ax
mov  ecx, DWORD PTR [rbx+0x24]
test ecx, ecx
jne  0x11ee8
movzx  r13d, BYTE PTR [rsp+0xa]
movzx  eax, BYTE PTR [rsp+0x9]
shl  r13d, 0x8
shl  eax, 0x10
or   r13d, eax
movzx  eax, BYTE PTR [rsp+0xb]
or   r13d, eax
jmp  0x11d56
nop  DWORD PTR [rax]
mov  eax, DWORD PTR [rip+0x465aa]
mov  r8d, r12d
mov  rsi, rbp
mov  rdi, rbx
mov  ecx, 0x3f
mov  edx, 0xfe
test eax, eax
jne  0x11ed8
call 0x10c30
test eax, eax
js   0x11d70
movzx  eax, BYTE PTR [rsp]
lea  rsi, [rip+0x1158c]
mov  edi, 0x1
lea  r12, [rbp+rax*1+0x0]
movzx  eax, BYTE PTR [rsp+0x3]
lea  rbp, [rsp+rax*1+0x4]
xor  eax, eax
call 0xba60
cmp  r12, rbp
jbe  0x11eb4
lea  r14, [rip+0x1156d]
movzx  edx, BYTE PTR [rbp+0x0]
mov  rsi, r14
mov  edi, 0x1
xor  eax, eax
and  edx, 0x3f
call 0xba60
movzx  eax, BYTE PTR [rbp+0x1]
lea  rbp, [rbp+rax*1+0x2]
cmp  r12, rbp
ja   0x11e90
mov  edi, 0xa
call 0xb670
jmp  0x11d70
nop  DWORD PTR [rax+rax*1+0x0]
call 0x10ea0
jmp  0x11de5
nop  WORD PTR [rax+rax*1+0x0]
call 0x10ea0
jmp  0x11e56
nop  WORD PTR [rax+rax*1+0x0]
movzx  edx, BYTE PTR [rsp+0x4]
lea  rsi, [rip+0x114d6]
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  edx, BYTE PTR [rsp+0x6]
movzx  eax, BYTE PTR [rsp+0x5]
lea  rsi, [rip+0x114c8]
mov  edi, 0x1
shl  eax, 0x10
shl  edx, 0x8
or   edx, eax
movzx  eax, BYTE PTR [rsp+0x7]
or   edx, eax
xor  eax, eax
movsxd rdx, edx
call 0xba60
movzx  edx, BYTE PTR [rsp+0xa]
movzx  eax, BYTE PTR [rsp+0x9]
lea  rsi, [rip+0x114a7]
mov  edi, 0x1
shl  eax, 0x10
shl  edx, 0x8
or   edx, eax
movzx  eax, BYTE PTR [rsp+0xb]
or   edx, eax
xor  eax, eax
movsxd rdx, edx
call 0xba60
jmp  0x11e0b
endbr64
push r15
push r14
push r13
push r12
mov  r12d, edx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x78
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x68], rax
xor  eax, eax
cmp  edx, 0x1
sbb  rbx, rbx
or   sil, 0x80
and  ebx, 0x927c0
mov  r13d, esi
call 0xb9b0
add  rbx, 0x61a80
mov  DWORD PTR [rsp+0xc], eax
cmp  eax, 0xffffffff
jne  0x1d298
call 0xb6a0
xor  r15d, r15d
mov  r14, rax
jmp  0x1d1ca
nop  DWORD PTR [rax+0x0]
test r12d, r12d
jne  0x1d175
cmp  r15d, 0x4
lea  rax, [rip+0xe2c0]
mov  edi, 0x10
lea  r9, [rip+0xe2ca]
cmovne r9, rax
mov  QWORD PTR [rsp], r9
call 0xbb70
mov  r9, QWORD PTR [rsp]
mov  rcx, rbp
mov  rdi, QWORD PTR [rip+0x3a001]
mov  r8, rax
lea  rdx, [rip+0xdc7f]
mov  esi, 0x1
xor  eax, eax
call 0xbb10
call 0xbbd0
pxor xmm0, xmm0
pxor xmm1, xmm1
add  r15d, 0x1
cdqe
cvtsi2sd xmm1, rbx
imul rax, rbx
cvtsi2sd xmm0, rax
mulsd  xmm0, QWORD PTR [rip+0xe372]
addsd  xmm0, xmm1
cvttsd2si rdi, xmm0
call 0xbbf0
mov  esi, r13d
mov  rdi, rbp
call 0xb9b0
cmp  r15d, 0x4
jg   0x1d2c0
cmp  eax, 0xffffffff
jne  0x1d2c0
cmp  DWORD PTR [r14], 0x10
je   0x1d128
cmp  r15d, 0x5
jne  0x1d298
test r12d, r12d
jne  0x1d298
lea  rsi, [rip+0xe73c]
lea  rdi, [rip+0xe224]
call 0xb930
mov  r12, rax
test rax, rax
je   0x1d298
mov  rdi, rbp
lea  r14, [rip+0xdc08]
call 0xb780
mov  rbx, rax
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, r12
call 0xb920
test eax, eax
jne  0x1d290
mov  rdi, r12
call 0xb6f0
test eax, eax
jne  0x1d290
lea  r13, [rsp+0x10]
mov  rdx, r12
mov  esi, 0x4f
mov  rdi, r13
call 0xb8b0
test rax, rax
je   0x1d220
mov  edx, ebx
mov  rsi, r13
mov  rdi, rbp
call 0xb6c0
test eax, eax
jne  0x1d220
mov  rdi, QWORD PTR [rip+0x39ef6]
mov  rcx, rbp
mov  rdx, r14
mov  esi, 0x1
call 0xbb10
mov  rdi, r12
call 0xb920
test eax, eax
je   0x1d22c
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, r12
call 0xb750
mov  rax, QWORD PTR [rsp+0x68]
sub  rax, QWORD PTR fs:0x28
jne  0x1d2c9
mov  eax, DWORD PTR [rsp+0xc]
add  rsp, 0x78
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rsp+0xc], eax
jmp  0x1d1d4
endbr64
push r15
mov  r15, rdi
push r14
mov  r14, r8
push r13
mov  r13, rdx
push r12
mov  r12d, esi
push rbp
mov  rbp, rcx
push rbx
sub  rsp, 0x28
mov  r8, QWORD PTR [rsp+0x68]
mov  rbx, QWORD PTR [rsp+0x60]
mov  QWORD PTR [rsp], r9
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
test r8, r8
je   0x15630
mov  DWORD PTR [r8], 0x0
lea  rcx, [rsp+0x14]
mov  QWORD PTR [rsp+0x8], r8
call 0x15140
mov  r8, QWORD PTR [rsp+0x8]
test eax, eax
je   0x15642
mov  eax, DWORD PTR [rsp+0x14]
mov  DWORD PTR [r8], eax
test rbp, rbp
je   0x154f9
xor  edx, edx
mov  esi, 0x100
mov  rdi, rbp
call 0x1edc0
add  DWORD PTR [r15+0x28], 0x1
mov  rdi, r15
call 0xec00
sub  DWORD PTR [r15+0x28], 0x1
xor  r8d, r8d
mov  ecx, r12d
mov  edx, DWORD PTR [rsp+0x14]
mov  rsi, rbp
mov  rdi, r15
mov  DWORD PTR [rsp+0x8], edx
call 0x10ff0
mov  edx, DWORD PTR [rsp+0x8]
test eax, eax
js   0x15780
mov  esi, DWORD PTR [r15+0x2c]
test esi, esi
jne  0x156d0
mov  ebp, 0x1
test r14, r14
je   0x15558
xor  edx, edx
mov  esi, 0x100
mov  rdi, r14
call 0x1edc0
add  DWORD PTR [r15+0x28], 0x1
mov  rdi, r15
call 0xec00
sub  DWORD PTR [r15+0x28], 0x1
mov  ecx, r12d
mov  rsi, r14
mov  edx, DWORD PTR [rsp+0x14]
mov  r8d, 0x1
mov  rdi, r15
mov  DWORD PTR [rsp+0x8], edx
call 0x10ff0
mov  edx, DWORD PTR [rsp+0x8]
test eax, eax
js   0x15760
mov  ecx, DWORD PTR [r15+0x2c]
test ecx, ecx
jne  0x156a0
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0x155b3
xor  edx, edx
mov  esi, 0x100
mov  rdi, rax
call 0x1edc0
add  DWORD PTR [r15+0x28], 0x1
mov  rdi, r15
call 0xec00
sub  DWORD PTR [r15+0x28], 0x1
mov  ecx, r12d
mov  rdi, r15
mov  r14d, DWORD PTR [rsp+0x14]
mov  rsi, QWORD PTR [rsp]
mov  r8d, 0x2
mov  edx, r14d
call 0x10ff0
test eax, eax
js   0x15740
mov  edx, DWORD PTR [r15+0x2c]
test edx, edx
jne  0x15678
test rbx, rbx
je   0x15650
xor  edx, edx
mov  esi, 0x100
mov  rdi, rbx
call 0x1edc0
add  DWORD PTR [r15+0x28], 0x1
mov  rdi, r15
call 0xec00
sub  DWORD PTR [r15+0x28], 0x1
mov  ecx, r12d
mov  rsi, rbx
mov  r14d, DWORD PTR [rsp+0x14]
mov  r8d, 0x3
mov  rdi, r15
mov  edx, r14d
call 0x10ff0
test eax, eax
js   0x15720
mov  eax, DWORD PTR [r15+0x2c]
test eax, eax
je   0x15650
mov  rdi, r15
call 0x164f0
mov  edx, r14d
mov  rsi, rbx
lea  rdi, [rip+0xdca1]
sub  edx, eax
call 0x16b90
jmp  0x15650
nop  WORD PTR [rax+rax*1+0x0]
lea  rcx, [rsp+0x14]
call 0x15140
test eax, eax
jne  0x154a2
mov  ebp, DWORD PTR [r15+0x28]
test ebp, ebp
je   0x15700
xor  ebp, ebp
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1579d
add  rsp, 0x28
mov  eax, ebp
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
mov  rdi, r15
call 0x164f0
mov  edx, r14d
mov  rsi, QWORD PTR [rsp]
lea  rdi, [rip+0xdc31]
sub  edx, eax
call 0x16b90
jmp  0x155b3
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, r15
mov  DWORD PTR [rsp+0x8], edx
call 0x164f0
mov  edx, DWORD PTR [rsp+0x8]
mov  rsi, r14
lea  rdi, [rip+0xdc05]
sub  edx, eax
call 0x16b90
jmp  0x15558
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, r15
mov  DWORD PTR [rsp+0x8], edx
call 0x164f0
mov  edx, DWORD PTR [rsp+0x8]
mov  rsi, rbp
lea  rdi, [rip+0xdbd5]
sub  edx, eax
call 0x16b90
jmp  0x154f9
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdx, r13
lea  rsi, [rip+0xf3be]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
jmp  0x15650
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, r13
lea  rsi, [rip+0xf446]
xor  eax, eax
xor  ebp, ebp
mov  edi, 0xffffffff
call 0x1ec90
jmp  0x15650
nop  DWORD PTR [rax]
mov  rdx, r13
lea  rsi, [rip+0xf409]
xor  eax, eax
xor  ebp, ebp
mov  edi, 0xffffffff
call 0x1ec90
jmp  0x155b3
nop  DWORD PTR [rax]
mov  rdx, r13
lea  rsi, [rip+0xf3d4]
xor  eax, eax
xor  ebp, ebp
mov  edi, 0xffffffff
call 0x1ec90
jmp  0x15558
nop  DWORD PTR [rax]
mov  rdx, r13
lea  rsi, [rip+0xf39f]
xor  eax, eax
xor  ebp, ebp
mov  edi, 0xffffffff
call 0x1ec90
jmp  0x154fe
endbr64
imul eax, edi, 0x3c
movsxd rdx, edx
add  eax, esi
cdqe
lea  rsi, [rax+rax*4]
mov  rax, rsi
shl  rax, 0x4
sub  rax, rsi
add  rdx, rax
cmp  edi, 0x59
jle  0x14eb8
test ecx, ecx
lea  rax, [rdx-0x6de66]
setne  cl
test cl, cl
jne  0x14eb8
ret
nop  DWORD PTR [rax]
lea  rax, [rdx-0x96]
endbr64
push rbp
xor  edx, edx
mov  esi, 0x70
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rbp, QWORD PTR [rdi+0x48]
mov  rdi, rbp
call 0x1edc0
mov  rax, QWORD PTR [rbx+0xe0]
movzx  edx, WORD PTR [rbp+0x58]
mov  rdi, rbx
mov  QWORD PTR [rbp+0x0], rax
and  dx, 0x1f00
48 b8 08 00 00 00 03 00 00 00 movabs rax, 0x300000008
mov  QWORD PTR [rbp+0x8], rax
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbp+0x10], rax
movzx  eax, WORD PTR [rbx+0x14]
shl  eax, 0xd
or   eax, 0x25
or   eax, edx
mov  WORD PTR [rbp+0x58], ax
xor  eax, eax
mov  WORD PTR [rbp+0x5f], ax
lea  rax, [rip+0x13f4f]
mov  QWORD PTR [rbx+0x50], rax
call 0x17650
test eax, eax
js   0xf11b
mov  rax, QWORD PTR [rbx+0xe0]
mov  ecx, DWORD PTR [rax+0x4]
mov  edx, DWORD PTR [rax]
bswap  ecx
bswap  edx
mov  DWORD PTR [rax+0x4], ecx
mov  DWORD PTR [rax], edx
xor  eax, eax
add  rsp, 0x8
pop  rbx
pop  rbp
ret
mov  eax, 0xffffffff
endbr64
push r12
mov  r12, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rax, QWORD PTR [rdi]
call QWORD PTR [rax+0x28]
test r12, r12
jle  0x16348
cmp  r12, rax
jg   0x16348
mov  QWORD PTR [rbx+0x68], rax
mov  rax, r12
mov  QWORD PTR [rbx+0x70], r12
add  rsp, 0x8
pop  rbx
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  r12, rax
endbr64
movzx  eax, BYTE PTR [rdi]
test al, al
je   0x20e80
lea  rcx, [rip+0xa97a]
nop  WORD PTR [rax+rax*1+0x0]
sub  eax, 0x61
cmp  al, 0x16
ja   0x20e50
movzx  eax, al
movsxd rax, DWORD PTR [rcx+rax*4]
add  rax, rcx
notrack jmp rax
nop  DWORD PTR [rax+0x0]
sub  rsp, 0x8
xor  esi, esi
lea  rdi, [rip+0x1262b]
call 0x203e0
xor  eax, eax
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
or   DWORD PTR [rdx], 0x1
movzx  eax, BYTE PTR [rdi+0x1]
add  rdi, 0x1
test al, al
jne  0x20e38
nop
mov  edx, DWORD PTR [rdx]
mov  eax, 0x1
and  edx, 0x3
cmp  edx, 0x3
je   0x20f70
ret
nop  DWORD PTR [rax+0x0]
add  rdi, 0x1
or   DWORD PTR [rsi], 0x1
or   DWORD PTR [rdx], 0x2
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  DWORD PTR [rax+rax*1+0x0]
add  rdi, 0x1
or   DWORD PTR [rdx], 0x80
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  WORD PTR [rax+rax*1+0x0]
add  rdi, 0x1
or   DWORD PTR [rsi], 0x200
or   DWORD PTR [rdx], 0x20
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  WORD PTR [rax+rax*1+0x0]
add  rdi, 0x1
or   DWORD PTR [rsi], 0x80
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  WORD PTR [rax+rax*1+0x0]
add  rdi, 0x1
or   DWORD PTR [rsi], 0x40
or   DWORD PTR [rdx], 0x10
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  WORD PTR [rax+rax*1+0x0]
add  rdi, 0x1
or   DWORD PTR [rdx], 0x4
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  WORD PTR [rax+rax*1+0x0]
add  rdi, 0x1
or   DWORD PTR [rsi], 0x400
or   DWORD PTR [rdx], 0x8
movzx  eax, BYTE PTR [rdi]
test al, al
jne  0x20e38
jmp  0x20e80
nop  DWORD PTR [rax]
mov  edx, DWORD PTR [rsi]
and  edx, 0xfffffffe
or   edx, 0x2
mov  DWORD PTR [rsi], edx
endbr64
push r15
shl  edx, 0xb
push r14
movsxd r15, edx
push r13
mov  r14, r15
push r12
push rbp
mov  rbp, rsi
push rbx
mov  ebx, edi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x4a2d1]
test rdi, rdi
je   0xe148
call 0xb980
movsxd rsi, ebx
xor  edx, edx
mov  r12, r15
shl  rsi, 0xb
mov  edi, eax
mov  r13d, eax
call 0xbb00
cmp  rax, 0xffffffffffffffff
je   0xe1e0
mov  rdx, r12
mov  rsi, rbp
mov  edi, r13d
call 0xb8a0
cmp  rax, r12
je   0xe130
test rax, rax
js   0xe1f8
lea  rsi, [rip+0x14c1e]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1eaf0
add  rsp, 0x8
mov  eax, r14d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x4a289]
mov  rax, QWORD PTR [rdi+0xe0]
movsxd r13, DWORD PTR [rax+0x4]
mov  eax, 0x800
cdq
idiv r13d
imul eax, ebx
movsxd r12, eax
test r15, r15
jg   0xe177
jmp  0xe130
mov  rdi, QWORD PTR [rip+0x4a261]
mov  rax, QWORD PTR [rip+0x4a252]
mov  rsi, rbp
cmp  r15, rax
cmovle rax, r15
cqo
idiv r13
mov  rdx, r12
mov  ecx, eax
mov  rbx, rax
call 0x121f0
test eax, eax
js   0xe1ae
mov  rdi, QWORD PTR [rip+0x4a233]
call 0x164f0
test eax, eax
je   0xe1bc
lea  rdi, [rip+0x14b5b]
xor  eax, eax
call 0x1ea20
mov  rax, rbx
add  r12, rbx
imul rax, r13
sub  r15, rax
add  rbp, rax
test r15, r15
jg   0xe170
jmp  0xe130
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x14b42]
xor  eax, eax
call 0x1ea20
jmp  0xe101
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x14b11]
xor  eax, eax
call 0x1ea20
endbr64
push r13
mov  edx, 0xc
push r12
mov  r12d, esi
mov  esi, 0x1
push rbp
push rbx
mov  rbx, rdi
lea  rdi, [rip+0xd37e]
sub  rsp, 0x8
mov  rbp, QWORD PTR [rip+0x3f694]
mov  rcx, rbp
call 0xbaf0
test r12d, r12d
jle  0x17b0e
lea  eax, [r12-0x1]
lea  r12, [rip+0xd276]
lea  r13, [rbx+rax*1+0x1]
nop  WORD PTR [rax+rax*1+0x0]
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  rbx, r13
jne  0x17af0
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push r12
mov  r12d, esi
push rbp
push rbx
mov  rbx, rdi
call 0xb980
movsxd rbp, eax
cmp  DWORD PTR [rip+0x12aac], ebp
jle  0x20a20
mov  rax, QWORD PTR [rip+0x12aab]
lea  rdx, [rbp+rbp*2+0x0]
lea  rbp, [rax+rdx*8]
mov  rdx, QWORD PTR [rbp+0x0]
mov  rax, rbp
test rdx, rdx
jne  0x209e3
jmp  0x20a10
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [rax]
cmp  rbx, rdx
je   0x20a10
mov  rax, QWORD PTR [rax+0x8]
test rax, rax
jne  0x209e0
mov  edi, 0x18
call 0xb9c0
test rax, rax
je   0x20a17
mov  rdx, QWORD PTR [rbp+0x8]
mov  QWORD PTR [rax+0x8], rdx
mov  QWORD PTR [rbp+0x8], rax
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rax], rbx
mov  DWORD PTR [rax+0x10], r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, rbx
call 0x208c0
endbr64
push r13
lea  r8, [rip+0xe183]
push r12
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rsi
movsxd rsi, edx
48 ba cf f7 53 e3 a5 9b c4 20 movabs rdx, 0x20c49ba5e353f7cf
mov  r12, rsi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rdi+0x80]
mov  rax, QWORD PTR [rbp+0x48]
mov  rcx, QWORD PTR [rdi+0x8]
mov  eax, DWORD PTR [rax+0x18]
push rax
mov  rax, rcx
sar  rcx, 0x3f
imul rdx
xor  eax, eax
sar  rdx, 0x7
sub  rdx, rcx
mov  rcx, 0xffffffffffffffff
push rdx
mov  r9, QWORD PTR [rdi]
mov  edx, 0x1
mov  rdi, rbx
call 0xb650
pop  rdx
pop  rcx
test eax, eax
js   0x16f40
movsxd r13, eax
add  r13, rbx
cmp  DWORD PTR [rbp+0x2c], 0x1
jg   0x16f50
mov  eax, r13d
sub  eax, ebx
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, r12d
mov  rsi, r13
mov  rdi, rbp
sub  edx, eax
call 0x16e00
test eax, eax
js   0x16f40
cdqe
add  r13, rax
endbr64
mov  rax, QWORD PTR [rdi+0x48]
mov  edx, DWORD PTR [rax+0x20]
mov  eax, DWORD PTR [rax+0x8]
mov  ecx, eax
sub  ecx, edx
test edx, edx
cmovns eax, ecx
endbr64
lea  rax, [rip+0x184a5]
endbr64
push rbp
mov  rbp, rdi
mov  edi, 0x18
push rbx
mov  rbx, rsi
sub  rsp, 0x8
call 0xb9c0
test rax, rax
je   0x1e891
mov  rdx, QWORD PTR [rip+0x39b9a]
mov  QWORD PTR [rax+0x8], rbp
mov  QWORD PTR [rax+0x10], rbx
mov  QWORD PTR [rax], rdx
mov  QWORD PTR [rip+0x39b88], rax
xor  eax, eax
add  rsp, 0x8
pop  rbx
pop  rbp
ret
or   eax, 0xffffffff
endbr64
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rsi, QWORD PTR [rdi+0xb0]
mov  rax, QWORD PTR [rdi+0xb8]
sub  rax, rsi
mov  r12d, eax
test eax, eax
jle  0x182a6
mov  rbx, rdi
mov  edx, eax
mov  rdi, rbp
call 0x207b0
mov  rdi, rbp
call 0xb9d0
mov  rax, QWORD PTR [rbx+0xb8]
mov  QWORD PTR [rbx+0xb0], rax
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
endbr64
push rbp
mov  rbp, rdi
mov  rdi, QWORD PTR [rip+0x37ac1]
test rdi, rdi
je   0x20d14
call 0xb750
mov  QWORD PTR [rip+0x37aac], 0x0
xor  eax, eax
test rbp, rbp
je   0x20d33
mov  rdi, rbp
lea  rsi, [rip+0xac05]
call 0xb930
cmp  rax, 0x1
mov  rbp, rax
sbb  eax, eax
mov  QWORD PTR [rip+0x37a86], rbp
pop  rbp
endbr64
push r13
mov  edx, 0x2d
push r12
push rbp
mov  ebp, esi
push rbx
mov  rbx, rdi
sub  rsp, 0x68
movdqa xmm0, XMMWORD PTR [rip+0x15740]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x58], rax
xor  eax, eax
48 b8 20 20 20 20 20 20 20 20 movabs rax, 0x2020202020202020
mov  QWORD PTR [rsp+0x48], rax
mov  eax, DWORD PTR [rip+0x4ad13]
movups XMMWORD PTR [rsp+0x8], xmm0
mov  ecx, eax
movups XMMWORD PTR [rsp+0x18], xmm0
and  ecx, 0xf000
movups XMMWORD PTR [rsp+0x28], xmm0
movups XMMWORD PTR [rsp+0x38], xmm0
cmp  ecx, 0x8000
je   0xd660
mov  edx, 0x64
cmp  ecx, 0x4000
je   0xd660
mov  edx, 0x6c
cmp  ecx, 0xa000
je   0xd660
mov  edx, 0x63
cmp  ecx, 0x2000
je   0xd660
mov  edx, 0x62
cmp  ecx, 0x6000
je   0xd660
mov  edx, 0x66
cmp  ecx, 0x1000
je   0xd660
cmp  ecx, 0xc000
mov  edx, 0x73
mov  ecx, 0x3f
cmovne edx, ecx
nop  DWORD PTR [rax]
48 be 2d 2d 2d 2d 2d 2d 2d 2d movabs rsi, 0x2d2d2d2d2d2d2d2d
mov  BYTE PTR [rsp], dl
mov  QWORD PTR [rsp+0x1], rsi
mov  BYTE PTR [rsp+0x9], 0x2d
test ah, 0x1
je   0xd681
mov  BYTE PTR [rsp+0x1], 0x72
test al, 0x80
je   0xd68a
mov  BYTE PTR [rsp+0x2], 0x77
test al, 0x40
je   0xd693
mov  BYTE PTR [rsp+0x3], 0x78
test al, 0x20
je   0xd69c
mov  BYTE PTR [rsp+0x4], 0x72
test al, 0x10
je   0xd6a5
mov  BYTE PTR [rsp+0x5], 0x77
test al, 0x8
je   0xd6ae
mov  BYTE PTR [rsp+0x6], 0x78
test al, 0x4
je   0xd6b7
mov  BYTE PTR [rsp+0x7], 0x72
test al, 0x2
je   0xd6c0
mov  BYTE PTR [rsp+0x8], 0x77
test al, 0x1
je   0xd6c9
mov  BYTE PTR [rsp+0x9], 0x78
mov  r8, QWORD PTR [rip+0x4ac20]
lea  rdi, [rsp+0xb]
mov  edx, 0x45
xor  eax, eax
lea  rcx, [rip+0x15062]
mov  esi, 0x1
lea  r12, [rip+0x1505b]
call 0xbc00
mov  rcx, r12
lea  rdi, [rsp+0xf]
xor  eax, eax
mov  r8d, DWORD PTR [rip+0x4abf7]
mov  edx, 0x41
mov  esi, 0x1
lea  r13, [rip+0x15039]
call 0xbc00
mov  rcx, r12
lea  rdi, [rsp+0x14]
xor  eax, eax
mov  edx, 0x3c
mov  esi, 0x1
lea  r12, [rsp+0x1e]
mov  r8d, DWORD PTR [rip+0x4abc5]
call 0xbc00
mov  rcx, r13
mov  edx, 0x32
mov  rdi, r12
mov  r8, QWORD PTR [rip+0x4abbe]
mov  esi, 0x1
xor  eax, eax
call 0xbc00
mov  eax, DWORD PTR [rip+0x4ac30]
mov  r8, QWORD PTR [rip+0x4aba5]
test eax, eax
je   0xd781
mov  rax, QWORD PTR [rip+0x4ab9a]
lea  r8, [rax+0x7ff]
shr  r8, 0xb
mov  edx, 0x32
mov  rcx, r13
mov  esi, 0x1
mov  rdi, r12
xor  eax, eax
call 0xbc00
0f b6 05 0a a2 04 00  movzx  eax, BYTE PTR [rip+0x4a20a]
lea  edx, [rax-0x1]
cmp  dl, 0xb
jbe  0xd8a5
lea  rdi, [rsp+0x2d]
mov  edx, 0x23
xor  eax, eax
mov  r12, rsp
movzx  r8d, BYTE PTR [rip+0x4a1e8]
lea  rcx, [rip+0x14f8d]
mov  esi, 0x1
call 0xbc00
lea  rdi, [rsp+0x30]
mov  edx, 0x20
0f b6 05 c4 a1 04 00  movzx  eax, BYTE PTR [rip+0x4a1c4]
lea  rcx, [rip+0x14f6f]
mov  esi, 0x1
mov  BYTE PTR [rsp+0x3f], 0x0
lea  r8d, [rax+0x76c]
xor  eax, eax
call 0xbc00
lea  rdi, [rsp+0x35]
mov  r8d, ebp
xor  eax, eax
lea  rcx, [rip+0x14f4a]
mov  edx, 0x1b
mov  esi, 0x1
call 0xbc00
movsx  r8d, BYTE PTR [rbx+0x19]
xor  eax, eax
mov  edx, 0x13
lea  rdi, [rsp+0x3d]
lea  rcx, [rip+0x14f28]
mov  esi, 0x1
call 0xbc00
mov  rax, r12
lea  rdx, [rsp+0x42]
nop  DWORD PTR [rax]
cmp  BYTE PTR [rax], 0x0
jne  0xd858
mov  BYTE PTR [rax], 0x20
add  rax, 0x1
cmp  rax, rdx
jne  0xd850
xor  eax, eax
mov  rdx, r12
mov  edi, 0x1
mov  BYTE PTR [rsp+0x42], 0x0
lea  r8, [rip+0x4a149]
lea  rcx, [rip+0x4a942]
lea  rsi, [rip+0x14ee5]
call 0xba60
mov  rax, QWORD PTR [rsp+0x58]
sub  rax, QWORD PTR fs:0x28
jne  0xd8ca
add  rsp, 0x68
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
sub  eax, 0x1
lea  rdx, [rip+0x24771]
cdqe
mov  rax, QWORD PTR [rdx+rax*8]
movzx  edx, WORD PTR [rax]
mov  WORD PTR [rsp+0x29], dx
movzx  eax, BYTE PTR [rax+0x2]
mov  BYTE PTR [rsp+0x2b], al
jmp  0xd7ab
endbr64
push r15
movsxd rsi, esi
xor  eax, eax
push r14
push r13
mov  r13d, r8d
push r12
mov  r12, rsi
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rcx
mov  rcx, rdx
lea  rdx, [rip+0xd256]
sub  rsp, 0x8
call 0xb800
test eax, eax
js   0x16cc6
movsxd r15, eax
sub  r12d, eax
add  r15, rbp
test r13d, r13d
jle  0x16cd8
lea  eax, [r13-0x1]
lea  r14, [rip+0xe0dc]
lea  r13, [rbx+rax*1+0x1]
jmp  0x16c9e
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movsxd rdx, eax
sub  r12d, eax
add  r15, rdx
cmp  r13, rbx
je   0x16cd8
movzx  r9d, BYTE PTR [rbx]
xor  eax, eax
movsxd rsi, r12d
mov  r8, r14
mov  rcx, 0xffffffffffffffff
mov  edx, 0x1
mov  rdi, r15
add  rbx, 0x1
call 0xb650
test eax, eax
jns  0x16c90
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
movsxd rsi, r12d
lea  rdx, [rip+0xdf3d]
mov  rdi, r15
xor  eax, eax
call 0xb800
lea  edx, [rax+r15*1]
sub  edx, ebp
test eax, eax
cmovns eax, edx
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x118
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
lea  eax, [rdx-0x1]
cmp  eax, 0xfe
ja   0x10c00
mov  r14, rdi
mov  rbp, rsi
mov  r12d, edx
mov  r13d, ecx
mov  ebx, r8d
lea  r15d, [rdx+0x1]
cmp  edx, 0x3
jg   0x10bc8
xor  eax, eax
mov  ecx, DWORD PTR [r14+0x2c]
xor  edx, edx
mov  BYTE PTR [rsp+0x6], 0x0
mov  WORD PTR [rsp], ax
movzx  eax, WORD PTR [rbp+0x1]
mov  WORD PTR [rsp+0x4], dx
mov  WORD PTR [rsp+0x2], ax
movzx  eax, BYTE PTR [rbp+0x3]
mov  BYTE PTR [rsp+0x7], al
test ecx, ecx
jne  0x10be8
mov  rsi, rsp
mov  r8d, ebx
mov  ecx, r13d
mov  edx, r15d
mov  rdi, r14
call 0x10a00
mov  rdx, QWORD PTR [rsp+0x108]
sub  rdx, QWORD PTR fs:0x28
jne  0x10c07
add  rsp, 0x118
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  r15d, [rdx+0x4]
lea  rsi, [rsp+0x8]
lea  edx, [rdx-0x4]
lea  rdi, [rbp+0x4]
call 0x20010
jmp  0x10b5e
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, r12d
mov  rsi, rbp
lea  rdi, [rip+0x13443]
call 0x16b90
jmp  0x10b89
nop  DWORD PTR [rax+0x0]
mov  eax, 0xffffffff
jmp  0x10b9d
endbr64
push rbp
mov  rbp, rdi
push rbx
mov  ebx, esi
sub  rsp, 0x18
call 0x13050
test eax, eax
je   0x141c1
mov  eax, 0x1
test ebx, ebx
jne  0x141d0
add  rsp, 0x18
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
mov  DWORD PTR [rsp+0xc], eax
call 0x124f0
mov  eax, DWORD PTR [rsp+0xc]
add  rsp, 0x18
pop  rbx
pop  rbp
endbr64
push r12
mov  r12, rdi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1ea84
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  DWORD PTR [rsp], 0x8
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1fff0
mov  rcx, rsp
mov  rdx, r12
mov  edi, 0x1
mov  esi, eax
call 0x1e8e0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1eaeb
add  rsp, 0xd0
pop  r12
ret
endbr64
mov  rsi, rdi
mov  rdi, QWORD PTR [rip+0x3f072]
endbr64
push r14
mov  r14, rsi
mov  esi, 0x70
push r13
mov  r13d, edx
xor  edx, edx
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r12d
mov  rdi, rbp
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
rol  r12w, 0x8
mov  QWORD PTR [rbx], r14
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], r13b
shl  eax, 0xd
mov  WORD PTR [rbx+0x5f], r12w
or   eax, 0x59
mov  DWORD PTR [rbx+0xc], 0x3
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x12d9b]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
pop  r13
pop  r14
endbr64
push rbp
mov  rbp, rdi
call 0x17b60
cmp  eax, 0x2
je   0xeac0
cmp  DWORD PTR [rbp+0x28], 0x1
jle  0xeab0
xor  eax, eax
pop  rbp
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x175a0
xor  eax, eax
jmp  0xeaaa
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x17be0
cmp  eax, 0x4
jne  0xeaa2
mov  rdi, rbp
call 0x17c20
cmp  eax, 0x4
je   0xeaf4
mov  rdi, rbp
call 0x17c20
cmp  eax, 0x7
je   0xeaf4
mov  rdi, rbp
call 0x17c20
cmp  eax, 0x8
jne  0xeaa2
mov  eax, 0x1
pop  rbp
endbr64
push r15
movsxd rsi, esi
xor  eax, eax
push r14
mov  r14, rsi
push r13
mov  r13, rcx
mov  rcx, rdx
lea  rdx, [rip+0xc570]
push r12
push rbp
mov  rbp, rdi
push rbx
mov  ebx, r8d
sub  rsp, 0x8
call 0xb800
test eax, eax
js   0x179cd
movsxd r15, eax
sub  r14d, eax
add  r15, rbp
test ebx, ebx
jle  0x179e0
lea  eax, [rbx-0x1]
lea  r12, [rip+0xadad]
lea  rbx, [r13+rax*1+0x1]
jmp  0x179a7
nop  DWORD PTR [rax+0x0]
xor  eax, eax
lea  r8, [rip+0x13ab6]
mov  edx, 0x1
mov  rdi, r15
mov  rcx, 0xffffffffffffffff
call 0xb650
test eax, eax
js   0x179cd
movsxd rdx, eax
sub  r14d, eax
add  r15, rdx
cmp  r13, rbx
je   0x179e0
movzx  r9d, BYTE PTR [r13+0x0]
add  r13, 0x1
movsxd rsi, r14d
lea  eax, [r9-0x20]
cmp  eax, 0x5e
jbe  0x17978
xor  eax, eax
mov  rdx, r12
mov  rdi, r15
call 0xb800
test eax, eax
jns  0x17999
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
movsxd rsi, r14d
lea  rdx, [rip+0xd235]
mov  rdi, r15
xor  eax, eax
call 0xb800
lea  edx, [rax+r15*1]
sub  edx, ebp
test eax, eax
cmovns eax, edx
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14d, r8d
push r13
mov  r13, rdx
xor  edx, edx
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r15
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x8], r12d
shl  eax, 0xd
mov  DWORD PTR [rbx+0xc], 0x3
or   eax, 0x44
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r14d, r14d
je   0xfd8b
movzx  eax, BYTE PTR [rbx+0x59]
and  eax, 0xffffffe1
or   eax, 0x2
mov  BYTE PTR [rbx+0x59], al
rol  r12w, 0x8
lea  rax, [rip+0x133ac]
bswap  r13d
mov  rdi, rbp
mov  DWORD PTR [rbx+0x5a], r13d
mov  WORD PTR [rbx+0x5f], r12w
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x8
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r14
mov  r14d, ecx
push r13
mov  r13, rsi
push r12
mov  r12d, edx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x20
mov  rbx, QWORD PTR [rdi+0x48]
lea  rdi, [rip+0x12b21]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
call 0xb6e0
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
mov  DWORD PTR [rbx+0x8], r12d
48 b8 02 00 00 00 0c 00 00 00 movabs rax, 0xc00000002
lea  rdi, [rip+0x12b0b]
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 80 25 00 00 movabs rax, 0x258000000012
mov  QWORD PTR [rbx+0x14], rax
mov  eax, 0x1104
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x12add]
mov  QWORD PTR [rbx], r13
mov  BYTE PTR [rbx+0x5d], 0x0
mov  QWORD PTR [rbp+0x50], rax
call 0xb6e0
mov  rdi, rbp
call 0x17650
lea  rsi, [rip+0x137e7]
mov  edi, 0x1
mov  r12d, eax
mov  edx, eax
xor  eax, eax
call 0xba60
cmp  r12d, 0xffffffff
je   0x108a6
test r14d, r14d
jne  0x10868
lea  rsi, [rip+0x137e4]
xor  eax, eax
xor  r14d, r14d
mov  r13, rsp
mov  edi, 0x1
lea  r12, [rip+0x137f8]
call 0xba60
mov  edi, 0x14
call 0xbb80
nop
mov  rdi, rbp
add  r14d, 0x1
call 0xeb80
mov  edx, 0x12
mov  rsi, r13
mov  rdi, rbp
call 0xef20
movzx  ebx, WORD PTR [rsp+0x10]
pxor xmm0, xmm0
mov  rsi, r12
mov  edi, 0x1
rol  bx, 0x8
movzx  ebx, bx
imul eax, ebx, 0x64
mov  edx, ebx
cvtsi2ss xmm0, eax
mulss  xmm0, DWORD PTR [rip+0x14153]
mov  eax, 0x1
cvtss2sd xmm0, xmm0
call 0xba60
mov  edi, 0x186a0
call 0xbbf0
cmp  ebx, 0xffef
jg   0x1083f
test ebx, ebx
jne  0x107d0
cmp  r14d, 0x32
jle  0x107d0
mov  edi, 0xa
call 0xbb80
mov  edi, 0x1
lea  rsi, [rip+0x137ab]
xor  eax, eax
call 0xba60
xor  edi, edi
call 0xbae0
nop  DWORD PTR [rax+rax*1+0x0]
call 0xbbb0
cmp  eax, 0xffffffff
je   0x108d0
test eax, eax
jne  0x107a5
mov  rdi, rbp
call 0xeb80
test eax, eax
jns  0x108a6
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  edi, 0x1
call 0xbb80
mov  rdi, rbp
call 0xeb80
test eax, eax
js   0x10890
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x108e1
add  rsp, 0x20
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x12989]
call 0xbaa0
jmp  0x107a5
endbr64
mov  edx, DWORD PTR [rdi+0x40]
xor  eax, eax
test edx, edx
sete al
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0xc38
mov  DWORD PTR [rsp+0xc], esi
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0xc28], rax
xor  eax, eax
mov  BYTE PTR [rsp+0x20], 0x0
cmp  esi, 0x3
jle  0xd4d0
mov  DWORD PTR [rsp+0x14], 0x0
mov  r15, rdi
xor  r14d, r14d
lea  rbx, [rip+0x4a9e1]
mov  DWORD PTR [rsp+0x18], 0x0
mov  DWORD PTR [rsp+0x10], 0x0
movzx  edx, BYTE PTR [r15+0x3]
lea  eax, [rdx-0x1]
cmp  al, 0x1
ja   0xd48b
movzx  eax, BYTE PTR [r15]
cmp  eax, 0x50
jne  0xd02b
mov  ecx, r14d
or   ecx, 0x1
cmp  BYTE PTR [r15+0x1], 0x58
cmove  r14d, ecx
cmp  eax, 0x50
jne  0xd02b
mov  ecx, r14d
or   ecx, 0x2
cmp  BYTE PTR [r15+0x1], 0x4e
cmove  r14d, ecx
cmp  eax, 0x53
jne  0xd03f
mov  ecx, r14d
or   ecx, 0x4
cmp  BYTE PTR [r15+0x1], 0x4c
cmove  r14d, ecx
cmp  eax, 0x4e
jne  0xd053
mov  ecx, r14d
or   ecx, 0x8
cmp  BYTE PTR [r15+0x1], 0x4d
cmove  r14d, ecx
cmp  eax, 0x43
jne  0xd067
mov  ecx, r14d
or   ecx, 0x10
cmp  BYTE PTR [r15+0x1], 0x4c
cmove  r14d, ecx
cmp  eax, 0x50
jne  0xd07b
mov  ecx, r14d
or   ecx, 0x20
cmp  BYTE PTR [r15+0x1], 0x4c
cmove  r14d, ecx
cmp  eax, 0x52
jne  0xd08f
mov  ecx, r14d
or   ecx, 0x40
cmp  BYTE PTR [r15+0x1], 0x45
cmove  r14d, ecx
cmp  eax, 0x54
jne  0xd0a3
mov  ecx, r14d
or   cl, 0x80
cmp  BYTE PTR [r15+0x1], 0x46
cmove  r14d, ecx
cmp  eax, 0x53
jne  0xd0c0
cmp  BYTE PTR [r15+0x1], 0x50
jne  0xd0c0
mov  DWORD PTR [rip+0x4b2c3], edx
movzx  eax, BYTE PTR [r15]
or   r14d, 0x400
cmp  eax, 0x41
jne  0xd0e2
cmp  BYTE PTR [r15+0x1], 0x41
jne  0xd0e2
movzx  eax, BYTE PTR [r15+0x3]
or   r14d, 0x800
mov  DWORD PTR [rip+0x4b296], eax
movzx  eax, BYTE PTR [r15]
cmp  eax, 0x50
jne  0xd11b
cmp  BYTE PTR [r15+0x1], 0x58
jne  0xd11b
mov  eax, DWORD PTR [r15+0x4]
mov  DWORD PTR [rip+0x4b200], eax
movsxd rax, DWORD PTR [r15+0xc]
mov  QWORD PTR [rip+0x4b1ed], rax
mov  eax, DWORD PTR [r15+0x14]
mov  DWORD PTR [rip+0x4b1ef], eax
mov  eax, DWORD PTR [r15+0x1c]
mov  DWORD PTR [rip+0x4b1e9], eax
movzx  eax, BYTE PTR [r15]
cmp  eax, 0x4e
jne  0xd181
cmp  BYTE PTR [r15+0x1], 0x4d
jne  0xd181
lea  rdi, [rip+0x4b092]
call 0xb780
mov  ebp, DWORD PTR [rip+0x4b187]
lea  rdi, [rip+0x4b080]
test ebp, ebp
je   0xd149
mov  ebp, eax
add  rdi, rax
movzx  edx, BYTE PTR [r15+0x2]
lea  rsi, [r15+0x5]
sub  edx, 0x5
movsxd rdx, edx
call 0xb6b0
movzx  eax, BYTE PTR [r15+0x2]
lea  rdi, [rip+0x4b057]
mov  DWORD PTR [rip+0x4b14d], 0x1
lea  eax, [rbp+rax*1-0x5]
cdqe
mov  BYTE PTR [rdi+rax*1], 0x0
movzx  eax, BYTE PTR [r15]
cmp  eax, 0x43
jne  0xd1a5
cmp  BYTE PTR [r15+0x1], 0x45
jne  0xd1a5
mov  edi, DWORD PTR [r15+0x4]
mov  esi, DWORD PTR [r15+0x14]
mov  DWORD PTR [rsp+0x10], edi
mov  edi, DWORD PTR [r15+0xc]
mov  DWORD PTR [rsp+0x14], esi
mov  DWORD PTR [rsp+0x18], edi
cmp  eax, 0x53
jne  0xd460
cmp  BYTE PTR [r15+0x1], 0x4c
jne  0xd460
movzx  edx, BYTE PTR [r15+0x2]
lea  r13, [r15+0x5]
lea  ebp, [rdx-0x5]
mov  rax, rdx
test ebp, ebp
jle  0xd2a2
mov  DWORD PTR [rsp+0x1c], r14d
lea  r12, [rsp+0x20]
nop  WORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [r13+0x0]
and  eax, 0xfffffffe
cmp  al, 0x20
ja   0xd200
lea  rsi, [rip+0x15a71]
movzx  eax, al
movsxd rax, DWORD PTR [rsi+rax*4]
add  rax, rsi
notrack jmp rax
lea  rsi, [rip+0x14e79]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [r13+0x0], 0xfe
jne  0xd3b4
cmp  BYTE PTR [rbx], 0x0
je   0xd3e0
mov  rdi, rbx
call 0xb780
mov  edx, 0x800
mov  rsi, r12
lea  rdi, [rbx+rax*1]
call 0xb990
mov  BYTE PTR [rsp+0x20], 0x0
mov  rdi, rax
test BYTE PTR [r13+0x0], 0x1
jne  0xd27b
sub  rax, rbx
sub  eax, 0x1
cdqe
cmp  BYTE PTR [rbx+rax*1], 0x2f
je   0xd27b
mov  rcx, rbx
mov  edx, 0x2
lea  rsi, [rip+0x1e14e]
sub  rcx, rdi
add  rcx, 0x800
call 0xb910
movzx  edx, BYTE PTR [r13+0x1]
mov  rax, rdx
add  edx, 0x2
sub  ebp, edx
lea  r13, [r13+rax*1+0x2]
test ebp, ebp
jg   0xd1e0
movzx  edx, BYTE PTR [r15+0x2]
mov  r14d, DWORD PTR [rsp+0x1c]
mov  rax, rdx
mov  BYTE PTR [rsp+0x20], 0x0
sub  DWORD PTR [rsp+0xc], edx
mov  ecx, DWORD PTR [rsp+0xc]
add  r15, rax
cmp  ecx, 0x3
jg   0xcfef
mov  eax, DWORD PTR [rsp+0x10]
test eax, eax
je   0xd470
lea  rbx, [rsp+0x420]
sub  eax, DWORD PTR [rip+0x4a6cb]
mov  edx, 0x1
mov  edi, eax
mov  rsi, rbx
call 0xe0b0
movsxd rax, DWORD PTR [rsp+0x18]
mov  esi, DWORD PTR [rsp+0x14]
mov  edx, 0x1
lea  rdi, [rbx+rax*1]
call 0xcf90
or   r14d, eax
cmp  BYTE PTR [rip+0x4a6bb], 0x0
lea  rbx, [rip+0x4a6b4]
jne  0xd4b0
mov  rax, QWORD PTR [rsp+0xc28]
sub  rax, QWORD PTR fs:0x28
jne  0xd4d8
add  rsp, 0xc38
mov  eax, r14d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
xchg ax, ax
mov  rdi, r12
mov  edx, 0x400
lea  rsi, [rip+0x153d2]
call 0xb630
lea  rsi, [rip+0x153cc]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0xd213
nop  DWORD PTR [rax+0x0]
mov  rdi, r12
mov  edx, 0x400
lea  rsi, [rip+0x1539d]
call 0xb630
lea  rsi, [rip+0x14cd5]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0xd213
nop  DWORD PTR [rax+0x0]
mov  edx, 0x400
lea  rsi, [rip+0x1e00e]
mov  rdi, r12
call 0xb630
cmp  BYTE PTR [r13+0x1], 0x0
je   0xd21e
xor  eax, eax
lea  rsi, [rip+0x14cd8]
mov  edi, 0x1
call 0xba60
cmp  BYTE PTR [rbx], 0x0
jne  0xd227
nop  DWORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rip+0x4a5d6], 0x203e2d
jmp  0xd227
nop
mov  edx, 0x400
lea  rsi, [rip+0x1531e]
mov  rdi, r12
call 0xb630
jmp  0xd3b4
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movzx  edx, BYTE PTR [r13+0x1]
lea  rsi, [r13+0x2]
mov  ecx, 0x400
mov  rdi, r12
mov  r14, rdx
call 0xbb30
movzx  r8d, r14b
mov  BYTE PTR [rsp+r8*1+0x20], 0x0
jmp  0xd21e
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x400
lea  rsi, [rip+0x152cd]
mov  rdi, r12
call 0xb630
jmp  0xd3b4
nop  DWORD PTR [rax+0x0]
movzx  edx, BYTE PTR [r15+0x2]
mov  rax, rdx
jmp  0xd2a7
nop  DWORD PTR [rax]
cmp  DWORD PTR [rsp+0xc], 0x3
jle  0xd2fe
movzx  edx, BYTE PTR [r15+0x3]
lea  eax, [rdx-0x1]
cmp  al, 0x1
jbe  0xcfff
lea  rsi, [rip+0x15271]
mov  edi, 0x1
xor  eax, eax
xor  r14d, r14d
call 0xba60
jmp  0xd312
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, rbx
call 0xb780
cmp  BYTE PTR [rbx+rax*1-0x1], 0x2f
jne  0xd312
mov  BYTE PTR [rbx+rax*1-0x1], 0x0
jmp  0xd312
nop  DWORD PTR [rax]
xor  r14d, r14d
jmp  0xd2fe
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x58
mov  r9d, DWORD PTR [rip+0x4aa17]
mov  DWORD PTR [rsp+0x28], esi
mov  r15, rdi
mov  ebx, edx
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1048], rax
xor  eax, eax
test r9d, r9d
jne  0xde64
test ebx, ebx
jle  0xde3f
lea  eax, [rbx-0x1]
mov  ebx, DWORD PTR [rsp+0x28]
shr  eax, 0xb
add  ebx, 0x1
add  eax, ebx
mov  DWORD PTR [rsp+0x24], ebx
mov  DWORD PTR [rsp+0x2c], eax
nop  DWORD PTR [rax+0x0]
mov  edi, DWORD PTR [rsp+0x28]
mov  edx, 0x1
sub  edi, DWORD PTR [rip+0x49fc1]
xor  r12d, r12d
lea  rsi, [rip+0x497b7]
lea  rbx, [rip+0x4a7d0]
call 0xe0b0
mov  eax, DWORD PTR [rsp+0x24]
mov  DWORD PTR [rsp+0x28], eax
nop  DWORD PTR [rax]
movsxd r13, r12d
lea  rax, [rip+0x49796]
lea  rbp, [rax+r13*1]
cmp  BYTE PTR [rbp+0x0], 0x0
je   0xdc58
movzx  r14d, BYTE PTR [rbp+0x19]
xor  eax, eax
mov  ecx, 0x12
lea  rdi, [rip+0x4a8b5]
rep stos QWORD PTR es:[rdi], rax
mov  eax, DWORD PTR [rbp+0xa]
movzx  r8d, BYTE PTR [rbp+0x20]
mov  DWORD PTR [rip+0x4a880], 0x0
and  r14d, 0x2
mov  BYTE PTR [rip+0x49f75], 0x0
cmp  r14b, 0x1
mov  QWORD PTR [rip+0x4a8ba], rax
sbb  eax, eax
mov  BYTE PTR [rip+0x4a761], 0x0
and  eax, 0x4000
add  eax, 0x4000
mov  DWORD PTR [rip+0x4a889], eax
cmp  r8b, 0x1
je   0xdce0
mov  eax, DWORD PTR [rip+0x4a8f1]
test eax, eax
je   0xdcfe
sub  eax, 0x1
cmp  eax, 0x2
ja   0xde7d
shr  r8b, 1
movzx  edi, r8b
je   0xdd3c
mov  r8, QWORD PTR [rip+0x496e1]
xor  eax, eax
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [r8+0x8]
movzx  esi, BYTE PTR [rbp+rax*2+0x21]
movzx  ecx, BYTE PTR [rbp+rax*2+0x22]
mov  rsi, QWORD PTR [rdx+rsi*8]
mov  edx, 0x5f
test rsi, rsi
je   0xdada
movzx  edx, BYTE PTR [rsi+rcx*1]
mov  ecx, 0x5f
test dl, dl
cmove  edx, ecx
mov  BYTE PTR [rbx+rax*1], dl
add  rax, 0x1
cmp  edi, eax
jg   0xdab0
mov  BYTE PTR [rbx+rdi*1], 0x0
mov  rax, QWORD PTR [rbp+0x12]
mov  esi, DWORD PTR [rip+0x4a8b1]
mov  QWORD PTR [rip+0x49eae], rax
movzx  eax, BYTE PTR [rbp+0x1a]
mov  BYTE PTR [rip+0x49eac], al
test esi, esi
jne  0xdd60
test r14b, r14b
je   0xdc82
cmp  BYTE PTR [rbp+0x20], 0x1
je   0xdc78
mov  rax, QWORD PTR [rip+0x4965a]
test rax, rax
je   0xddc8
nop
mov  r14, rax
mov  rax, QWORD PTR [rax]
test rax, rax
jne  0xdb30
mov  edi, 0x18
call 0xb9c0
mov  QWORD PTR [r14], rax
mov  rdx, rax
mov  eax, DWORD PTR [rbp+0x2]
mov  QWORD PTR [rdx], 0x0
mov  rdi, r15
mov  QWORD PTR [rsp+0x18], rdx
mov  DWORD PTR [rdx+0x10], eax
mov  eax, DWORD PTR [rbp+0xa]
mov  DWORD PTR [rdx+0x14], eax
call 0xb780
mov  rdi, rbx
mov  r14, rax
call 0xb780
lea  r9, [r14+rax*1]
mov  QWORD PTR [rsp+0x10], rax
lea  rdi, [r9+0x2]
mov  QWORD PTR [rsp+0x8], r9
call 0xb9c0
mov  rdx, QWORD PTR [rsp+0x18]
mov  rsi, r15
mov  rdi, rax
mov  QWORD PTR [rdx+0x8], rax
mov  rdx, r14
call 0xb960
mov  rcx, QWORD PTR [rsp+0x10]
mov  r9, QWORD PTR [rsp+0x8]
add  r14, rax
mov  r8, rax
cmp  ecx, 0x8
jae  0xdd90
test cl, 0x4
jne  0xde18
test ecx, ecx
je   0xdbd9
movzx  eax, BYTE PTR [rbx]
mov  BYTE PTR [r14], al
test cl, 0x2
jne  0xde2d
mov  ecx, 0x2f
mov  WORD PTR [r8+r9*1], cx
mov  edx, DWORD PTR [rip+0x4a7af]
test edx, edx
je   0xdc2e
cmp  BYTE PTR [rbp+0x20], 0x1
jne  0xdbf9
cmp  BYTE PTR [rbp+0x21], 0x1
jbe  0xdc2e
lea  r14, [rsp+0x40]
mov  edx, 0x1001
mov  rsi, r15
mov  rdi, r14
call 0xb990
mov  rdx, r14
mov  rsi, rbx
sub  rdx, rax
mov  rdi, rax
add  rdx, 0x1001
call 0xba40
mov  rdi, r14
call 0xb6e0
mov  eax, DWORD PTR [rip+0x4a768]
test eax, eax
jne  0xdd48
lea  rax, [rip+0x4955d]
movzx  eax, BYTE PTR [rax+r13*1]
add  r12d, eax
cmp  r12d, 0x7df
jle  0xda00
mov  eax, DWORD PTR [rsp+0x24]
mov  ebx, DWORD PTR [rsp+0x2c]
cmp  eax, ebx
je   0xde3f
add  eax, 0x1
mov  DWORD PTR [rsp+0x24], eax
jmp  0xd9d0
nop  DWORD PTR [rax+0x0]
cmp  BYTE PTR [rbp+0x21], 0x1
ja   0xdb1f
lea  r14, [rsp+0x40]
mov  edx, 0x1001
mov  rsi, r15
mov  rdi, r14
call 0xb990
mov  rdx, r14
mov  rsi, rbx
sub  rdx, rax
mov  rdi, rax
add  rdx, 0x1001
call 0xb990
mov  rdi, QWORD PTR [rip+0x4a6ca]
test rdi, rdi
je   0xdbe3
mov  rsi, r14
call 0xb8d0
test eax, eax
jne  0xdbe3
mov  rdi, rbp
call 0xd8d0
jmp  0xdbe3
nop  DWORD PTR [rax+0x0]
movzx  eax, BYTE PTR [rbp+0x21]
test al, al
je   0xdde8
cmp  al, 0x1
je   0xde00
mov  eax, DWORD PTR [rip+0x4a676]
test eax, eax
jne  0xdd30
movzx  edx, r8b
lea  rsi, [rbp+0x21]
mov  ecx, 0x100
mov  rdi, rbx
mov  BYTE PTR [rsp+0x8], r8b
call 0xba10
movzx  r8d, BYTE PTR [rsp+0x8]
mov  BYTE PTR [rbx+r8*1], 0x0
jmp  0xdae9
nop  DWORD PTR [rax+rax*1+0x0]
sub  eax, 0x1
cmp  eax, 0x2
ja   0xde7d
xor  edi, edi
jmp  0xdae5
nop  DWORD PTR [rax+rax*1+0x0]
mov  esi, DWORD PTR [rbp+0x2]
mov  rdi, rbp
call 0xd5a0
jmp  0xdc3c
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rsp+0x34]
lea  rsi, [rsp+0x38]
mov  rdi, rbp
call 0xd4e0
mov  esi, DWORD PTR [rsp+0x34]
mov  rdi, QWORD PTR [rsp+0x38]
xor  edx, edx
call 0xcf90
movzx  r14d, BYTE PTR [rbp+0x19]
and  r14d, 0x2
jmp  0xdb0c
mov  rax, QWORD PTR [rbx]
lea  rdi, [r14+0x8]
mov  rsi, rbx
and  rdi, 0xfffffffffffffff8
mov  QWORD PTR [r14], rax
mov  eax, ecx
mov  rdx, QWORD PTR [rbx+rax*1-0x8]
mov  QWORD PTR [r14+rax*1-0x8], rdx
sub  r14, rdi
add  ecx, r14d
sub  rsi, r14
shr  ecx, 0x3
rep movs QWORD PTR es:[rdi], QWORD PTR ds:[rsi]
jmp  0xdbd9
nop  DWORD PTR [rax+0x0]
mov  edi, 0x18
call 0xb9c0
mov  QWORD PTR [rip+0x493a7], rax
mov  rdx, rax
jmp  0xdb4b
nop  DWORD PTR [rax+0x0]
mov  r8d, 0x2e
mov  WORD PTR [rip+0x4a3ca], r8w
jmp  0xdae9
nop  DWORD PTR [rax+rax*1+0x0]
mov  edi, 0x2e2e
mov  BYTE PTR [rip+0x4a3b6], 0x0
mov  WORD PTR [rip+0x4a3ad], di
jmp  0xdae9
mov  eax, DWORD PTR [rbx]
mov  ecx, ecx
mov  DWORD PTR [r14], eax
mov  eax, DWORD PTR [rbx+rcx*1-0x4]
mov  DWORD PTR [r14+rcx*1-0x4], eax
jmp  0xdbd9
mov  ecx, ecx
movzx  eax, WORD PTR [rbx+rcx*1-0x2]
mov  WORD PTR [r14+rcx*1-0x2], ax
jmp  0xdbd9
mov  rax, QWORD PTR [rsp+0x1048]
sub  rax, QWORD PTR fs:0x28
jne  0xde87
add  rsp, 0x1058
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rdx, rdi
lea  rsi, [rip+0x14906]
mov  edi, 0x1
call 0xba60
jmp  0xd9aa
mov  edi, 0x1
call 0xbae0
endbr64
push rbp
mov  rbp, rdi
push rbx
mov  ebx, esi
sub  rsp, 0x8
call 0x20860
add  rsp, 0x8
mov  rdi, rbp
or   eax, ebx
pop  rbx
pop  rbp
mov  esi, eax
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
mov  rax, QWORD PTR [rdi]
push rbx
mov  rbx, rdi
call QWORD PTR [rax+0x38]
mov  QWORD PTR [rbx+0xa0], 0x0
pop  rbx
endbr64
push r13
mov  r13d, edx
xor  edx, edx
push r12
mov  r12, rsi
mov  esi, r13d
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, r12
call 0x1edc0
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r12
mov  rdi, rbp
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  DWORD PTR [rbx+0x8], r13d
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0xc], 0x3
shl  eax, 0xd
mov  BYTE PTR [rbx+0x5c], r13b
or   eax, 0x12
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x13ffc]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0xf079
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
jne  0xf050
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x164f0
mov  edx, r13d
mov  rsi, r12
lea  rdi, [rip+0x13fc9]
sub  edx, eax
call 0x16b90
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  eax, 0xffffffff
endbr64
mov  eax, DWORD PTR [rip+0x477c6]
test eax, eax
jne  0x10c28
jmp  0x108f0
nop  DWORD PTR [rax+rax*1+0x0]
endbr64
push rbp
mov  rcx, rsi
mov  rbp, rsi
mov  edx, 0x11
push rbx
mov  esi, 0x1
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0xd8]
lea  rdi, [rip+0x111dc]
call 0xbaf0
mov  rdi, rbp
mov  rsi, rbx
call 0x17c70
movzx  ecx, BYTE PTR [rbx+0x2]
mov  esi, 0x1
xor  eax, eax
lea  rdx, [rip+0x111cc]
mov  rdi, rbp
and  ecx, 0x7
call 0xbb10
movzx  ecx, BYTE PTR [rbx+0x3]
mov  esi, 0x1
xor  eax, eax
lea  rdx, [rip+0x111c4]
mov  rdi, rbp
and  ecx, 0xf
call 0xbb10
movzx  eax, BYTE PTR [rbx+0x3]
and  eax, 0xf
cmp  al, 0x1
ja   0x12318
cmp  BYTE PTR [rbx+0x4], 0x1e
ja   0x122a9
cmp  BYTE PTR [rbx+0x8], 0x0
je   0x12300
lea  rcx, [rbx+0x8]
mov  rdi, rbp
lea  rdx, [rip+0x11203]
xor  eax, eax
mov  esi, 0x1
call 0xbb10
lea  rcx, [rbx+0x10]
mov  rdi, rbp
xor  eax, eax
lea  rdx, [rip+0x11200]
mov  esi, 0x1
call 0xbb10
add  rsp, 0x8
lea  rcx, [rbx+0x20]
mov  rdi, rbp
pop  rbx
lea  rdx, [rip+0x111fd]
mov  esi, 0x1
xor  eax, eax
pop  rbp
jmp  0xbb10
nop  DWORD PTR [rax]
cmp  BYTE PTR [rbx+0x10], 0x0
jne  0x122a9
cmp  BYTE PTR [rbx+0x20], 0x0
jne  0x122a9
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x11
mov  esi, 0x1
lea  rdi, [rip+0x11134]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x3]
test al, al
js   0x124c0
test al, 0x40
jne  0x12470
movzx  eax, BYTE PTR [rbx+0x7]
test al, al
js   0x12495
test al, 0x40
jne  0x12448
test al, 0x20
jne  0x12420
test al, 0x10
jne  0x123f8
test al, 0x8
jne  0x123d0
test al, 0x2
jne  0x123b0
test al, 0x1
jne  0x12390
mov  rsi, rbp
mov  edi, 0xa
call 0xb890
jmp  0x1229d
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0xa
mov  esi, 0x1
lea  rdi, [rip+0x1110b]
call 0xbaf0
jmp  0x12375
nop  DWORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0x110e3]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
jmp  0x12371
nop
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0x110bb]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
jmp  0x1236d
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x5
mov  esi, 0x1
lea  rdi, [rip+0x1108d]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
jmp  0x12369
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0x1105d]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
jmp  0x12361
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0x1102d]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
jmp  0x12359
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x8
mov  esi, 0x1
lea  rdi, [rip+0x10ff4]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
test al, al
jns  0x12351
mov  rcx, rbp
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0x10fd8]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x7]
jmp  0x12351
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, rbp
mov  edx, 0x5
mov  esi, 0x1
lea  rdi, [rip+0x10f9e]
call 0xbaf0
movzx  eax, BYTE PTR [rbx+0x3]
endbr64
mov  rsi, rdi
mov  rdi, QWORD PTR [rip+0x379c2]
test rsi, rsi
je   0x20e10
test rdi, rdi
je   0x20e10
jmp  0x20b70
nop  DWORD PTR [rax]
xor  eax, eax
endbr64
push r13
mov  r13, rsi
mov  esi, 0x70
push r12
mov  r12d, edx
xor  edx, edx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r13
mov  rdi, rbp
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  DWORD PTR [rbx+0x8], r12d
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], r12b
shl  eax, 0xd
mov  DWORD PTR [rbx+0xc], 0x3
or   eax, 0x3
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x1408b]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x8
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x428
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x418], rax
xor  eax, eax
test rdi, rdi
je   0x21658
mov  r12, rdi
call 0x21100
test rax, rax
jne  0x21658
lea  rsi, [rip+0xa431]
mov  rdi, r12
call 0xb930
mov  rbp, rax
test rax, rax
je   0x21658
mov  esi, 0x1
mov  edi, 0x200
call 0xb8c0
mov  r13, rax
test rax, rax
je   0x21658
xor  eax, eax
nop  WORD PTR [rax+rax*1+0x0]
mov  BYTE PTR [r13+rax*2+0x0], al
add  rax, 0x1
cmp  rax, 0x20
jne  0x21530
mov  BYTE PTR [r13+0xfe], 0x7f
xor  r15d, r15d
lea  rbx, [rsp+0x10]
lea  r14, [rip+0xa364]
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdx, rbp
mov  esi, 0x400
mov  rdi, rbx
call 0xb8b0
test rax, rax
je   0x215d0
mov  esi, 0x23
mov  rdi, rbx
call 0xb7e0
test rax, rax
je   0x2158a
mov  BYTE PTR [rax], 0x0
xor  eax, eax
lea  rcx, [rsp+0xc]
lea  rdx, [rsp+0x8]
mov  rsi, r14
mov  rdi, rbx
call 0xb9e0
cmp  eax, 0x2
jne  0x21560
mov  eax, DWORD PTR [rsp+0x8]
cmp  eax, 0xff
ja   0x21560
cmp  DWORD PTR [rsp+0xc], 0xffff
movzx  edx, WORD PTR [rsp+0xc]
ja   0x21560
mov  WORD PTR [r13+rax*2+0x0], dx
mov  r15d, 0x1
jmp  0x21560
xchg ax, ax
mov  rdi, rbp
call 0xb750
test r15d, r15d
je   0x216bb
mov  esi, 0x1
mov  edi, 0x800
call 0xb8c0
mov  r15, rax
test rax, rax
je   0x216cf
xor  ebx, ebx
jmp  0x21610
mov  BYTE PTR [rax+rbp*1], bl
add  rbx, 0x1
cmp  rbx, 0x100
je   0x21660
movzx  edx, BYTE PTR [r13+rbx*2+0x1]
mov  rax, rdx
mov  DWORD PTR [rsp+0xc], edx
movzx  edx, BYTE PTR [r13+rbx*2+0x0]
lea  r14, [r15+rax*8]
mov  rax, QWORD PTR [r14]
mov  DWORD PTR [rsp+0x8], edx
mov  rbp, rdx
test rax, rax
jne  0x21600
mov  esi, 0x1
mov  edi, 0x100
call 0xb8c0
mov  QWORD PTR [r14], rax
test rax, rax
jne  0x21600
mov  rsi, r15
mov  rdi, r13
call 0x21460
mov  eax, 0xffffffff
jmp  0x21696
nop
mov  edi, 0x28
call 0xb9c0
mov  rbp, rax
test rax, rax
je   0x2164d
mov  rdi, r12
call 0xbb50
mov  QWORD PTR [rbp+0x8], r15
mov  rdi, rbp
mov  QWORD PTR [rbp+0x0], rax
mov  QWORD PTR [rbp+0x10], r13
mov  QWORD PTR [rbp+0x18], 0x0
call 0x21040
mov  rdx, QWORD PTR [rsp+0x418]
sub  rdx, QWORD PTR fs:0x28
jne  0x216ca
add  rsp, 0x428
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rdi, r13
call 0xb660
mov  eax, 0xffffffff
jmp  0x21696
call 0xb790
xor  esi, esi
mov  rdi, r13
call 0x21460
or   eax, 0xffffffff
endbr64
lea  rdi, [rip+0x1ed25]
endbr64
push r13
mov  rcx, rdi
push r12
mov  r12d, edx
mov  edx, 0xc
push rbp
mov  rbp, rdi
lea  rdi, [rip+0xd411]
push rbx
mov  rbx, rsi
mov  esi, 0x1
sub  rsp, 0x8
call 0xbaf0
test r12d, r12d
jle  0x17a7e
lea  eax, [r12-0x1]
lea  r12, [rip+0xd30a]
lea  r13, [rbx+rax*1+0x1]
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movzx  ecx, BYTE PTR [rbx]
add  rbx, 0x1
xor  eax, eax
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0xbb10
cmp  rbx, r13
jne  0x17a60
add  rsp, 0x8
mov  rsi, rbp
mov  edi, 0xa
pop  rbx
pop  rbp
pop  r12
pop  r13
endbr64
push rbp
sub  rsp, 0x70
mov  QWORD PTR [rsp+0x8], rdi
lea  rbp, [rsp+0x10]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x68], rax
xor  eax, eax
call 0x19c70
lea  rdi, [rsp+0x8]
xor  ecx, ecx
xor  edx, edx
xor  esi, esi
call 0xe3d0
mov  rdi, QWORD PTR [rsp+0x8]
xor  r8d, r8d
xor  ecx, ecx
mov  edx, 0x50
mov  rsi, rbp
call 0x15af0
mov  QWORD PTR [rip+0x4a172], rax
test rax, rax
je   0xe338
mov  rdi, rax
mov  esi, 0xf800
call 0x16310
mov  rdi, QWORD PTR [rip+0x4a155]
mov  rsi, rax
mov  QWORD PTR [rip+0x4a143], rax
call 0x16350
test rax, rax
je   0xe370
mov  rdx, QWORD PTR [rip+0x4a12e]
mov  rdi, QWORD PTR [rip+0x4a12f]
mov  esi, 0x1
test rdx, rdx
lea  rax, [rdx+0x7ff]
cmovns rax, rdx
and  rax, 0xfffffffffffff800
mov  QWORD PTR [rip+0x4a107], rax
call 0x11010
mov  rdi, QWORD PTR [rip+0x4a103]
mov  esi, 0x3c
call 0xecc0
test eax, eax
jne  0xe310
mov  rax, QWORD PTR [rip+0x4a0ee]
sub  DWORD PTR [rax+0x28], 0x1
mov  eax, 0xffffffff
mov  rdx, QWORD PTR [rsp+0x68]
sub  rdx, QWORD PTR fs:0x28
jne  0xe392
add  rsp, 0x70
pop  rbp
ret
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rip+0x4a0c1]
add  DWORD PTR [rdi+0x28], 0x1
call 0xf080
mov  rax, QWORD PTR [rip+0x4a0b1]
sub  DWORD PTR [rax+0x28], 0x1
mov  eax, 0x1
jmp  0xe2f3
nop  WORD PTR [rax+rax*1+0x0]
cmp  BYTE PTR [rsp+0x10], 0x0
lea  rax, [rip+0x168dc]
mov  rsi, rbp
lea  rdx, [rip+0x1d291]
lea  rdi, [rip+0x14a06]
cmove  rdx, rax
xor  eax, eax
call 0x1ebc0
mov  eax, 0xffffffff
jmp  0xe2f3
nop  WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x14a02]
call 0x1ebc0
mov  rdi, QWORD PTR [rip+0x4a055]
call 0x159a0
mov  eax, 0xffffffff
jmp  0xe2f3
endbr64
mov  rax, QWORD PTR [rdi+0x48]
movzx  eax, BYTE PTR [rax+0x2c]
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
lea  rdi, [rip+0x1fb55]
endbr64
push r15
mov  r15d, r8d
push r14
mov  r14d, r9d
push r13
mov  r13d, edx
xor  edx, edx
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x18
mov  rbx, QWORD PTR [rdi+0x48]
mov  QWORD PTR [rsp+0x8], rsi
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r12d
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  r10, QWORD PTR [rsp+0x8]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0xc], 0x3
shl  eax, 0xd
or   eax, 0x42
mov  QWORD PTR [rbx], r10
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r15d, r15d
je   0xfb25
movzx  eax, BYTE PTR [rbx+0x59]
and  eax, 0xffffffe1
or   eax, 0x2
mov  BYTE PTR [rbx+0x59], al
test r14d, r14d
je   0xfb2e
mov  BYTE PTR [rbx+0x5a], 0x40
mov  eax, DWORD PTR [rsp+0x50]
rol  r12w, 0x8
mov  BYTE PTR [rbx+0x5e], r13b
mov  rdi, rbp
mov  WORD PTR [rbx+0x5f], r12w
mov  BYTE PTR [rbx+0x5b], al
lea  rax, [rip+0x135dd]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x18
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
endbr64
mov  rax, QWORD PTR [rdi+0x48]
mov  ecx, DWORD PTR [rax+0x24]
test ecx, ecx
jne  0x17bd8
mov  edx, DWORD PTR [rax+0x28]
test edx, edx
jne  0x17bd8
cmp  BYTE PTR [rax+0x2c], 0x0
jne  0x17bd8
xor  r8d, r8d
cmp  BYTE PTR [rax+0x2f], 0x0
je   0x17bdc
nop  DWORD PTR [rax]
lea  r8, [rax+0x2f]
mov  rax, r8
endbr64
lea  rdi, [rip+0x20985]
endbr64
push r14
mov  esi, 0x100
push r13
mov  r13, rdx
xor  edx, edx
push r12
mov  r12, rcx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x110
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
mov  r14, rsp
mov  rdi, r14
call 0x1edc0
mov  rbx, QWORD PTR [rbp+0x48]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r14
mov  rdi, rbp
48 b8 04 00 00 00 03 00 00 00 movabs rax, 0x300000004
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  BYTE PTR [rbx+0x5a], 0x0
shl  eax, 0xd
mov  BYTE PTR [rbx+0x60], 0x4
or   eax, 0x43
or   eax, edx
xor  edx, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x11fea]
mov  WORD PTR [rbx+0x5e], dx
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0x111c8
movzx  eax, WORD PTR [rsp]
rol  ax, 0x8
movzx  eax, ax
add  eax, 0x2
cmp  eax, 0x3
jbe  0x111c0
test r13, r13
je   0x11182
movzx  eax, BYTE PTR [rsp+0x2]
mov  DWORD PTR [r13+0x0], eax
xor  r13d, r13d
test r12, r12
je   0x11193
movzx  eax, BYTE PTR [rsp+0x3]
mov  DWORD PTR [r12], eax
mov  rax, QWORD PTR [rsp+0x108]
sub  rax, QWORD PTR fs:0x28
jne  0x111ea
add  rsp, 0x110
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
mov  r13d, 0xffffffff
jmp  0x11193
mov  eax, DWORD PTR [rbp+0x28]
mov  r13d, 0xffffffff
test eax, eax
jne  0x11193
lea  rsi, [rip+0x1211d]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
jmp  0x11193
endbr64
lea  rdi, [rip+0x216b5]
endbr64
push r14
push r13
mov  r13, rdx
xor  edx, edx
push r12
mov  r12, rsi
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x20
mov  rbx, QWORD PTR [rdi+0x48]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  rdi, rbx
call 0x1edc0
lea  rax, [rsp+0xc]
movzx  edx, WORD PTR [rbx+0x58]
mov  rdi, rbp
mov  QWORD PTR [rbx], rax
48 b8 0c 00 00 00 03 00 00 00 movabs rax, 0x30000000c
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
shl  eax, 0xd
or   eax, 0x5c
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
mov  eax, 0xc00
mov  WORD PTR [rbx+0x5f], ax
lea  rax, [rip+0x12c76]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0x10640
mov  ebx, DWORD PTR [rsp+0x10]
mov  eax, DWORD PTR [rsp+0x14]
bswap  ebx
bswap  eax
mov  ebx, ebx
mov  r14d, eax
test r12, r12
je   0x105a7
mov  QWORD PTR [r12], rbx
mov  edx, DWORD PTR [rbp+0x2c]
test r13, r13
je   0x10630
mov  eax, eax
mov  QWORD PTR [r13+0x0], rax
test edx, edx
je   0x105de
mov  rcx, rbx
mov  rdx, r14
lea  rsi, [rip+0x12c38]
xor  eax, eax
shr  rcx, 0xa
shr  rdx, 0xa
mov  edi, 0x1
call 0xba60
xor  eax, eax
test rbx, rbx
je   0x1060d
mov  rax, rbx
xor  edx, edx
sub  rax, r14
lea  rax, [rax+rax*4]
lea  rax, [rax+rax*4]
shl  rax, 0x2
div  rbx
mov  edx, 0x64
cmp  eax, edx
cmovg  eax, edx
xor  edx, edx
test eax, eax
cmovs  eax, edx
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x10647
add  rsp, 0x20
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
test edx, edx
jne  0x105bd
test r12, r12
je   0x105bd
jmp  0x105de
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, 0xffffffff
jmp  0x1060d
endbr64
push r14
push r13
push r12
mov  r12d, edi
push rbp
mov  rbp, rsi
push rbx
movsxd rbx, edx
call 0x1fff0
mov  r13d, eax
jmp  0x20aa2
nop
call 0x1fff0
cmp  eax, 0x4
jne  0x20ab7
mov  edi, r13d
call 0x20610
mov  rdx, rbx
mov  rsi, rbp
mov  edi, r12d
call 0xb8a0
mov  r14d, eax
test eax, eax
js   0x20a90
pop  rbx
mov  eax, r14d
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
lea  rax, [rip+0x1d165]
push r12
mov  r12, rsi
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rax
mov  QWORD PTR [rdi], rax
test rsi, rsi
je   0x162a8
mov  edx, 0x6
lea  rsi, [rip+0xe927]
mov  rdi, r12
call 0xb6c0
test eax, eax
je   0x162d8
mov  rsi, r12
mov  rdi, rbp
call QWORD PTR [rbx+0x18]
mov  r12d, eax
test eax, eax
js   0x162c9
mov  ecx, DWORD PTR [rbp+0x14]
mov  edx, DWORD PTR [rbp+0x10]
mov  rdi, rbp
mov  esi, DWORD PTR [rbp+0xc]
call 0x19c80
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
call 0x19c70
mov  rbx, rax
test rax, rax
je   0x162f0
mov  QWORD PTR [rbp+0x0], rax
jmp  0x162a8
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbp+0x0]
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, r8d
push r12
mov  r12d, ecx
shl  r13d, 0x6
push rbp
mov  rbp, rdi
and  r12d, 0x3f
push rbx
or   r12d, r13d
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r15
mov  rdi, rbp
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  DWORD PTR [rbx+0x8], r14d
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0xc], 0x3
shl  eax, 0xd
mov  BYTE PTR [rbx+0x5a], r12b
or   eax, 0x1a
mov  BYTE PTR [rbx+0x5c], r14b
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x125fb]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0x10d0d
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
jne  0x10ce0
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x164f0
mov  edx, r14d
mov  rsi, r15
lea  rdi, [rip+0x125ca]
sub  edx, eax
call 0x16b90
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  eax, 0xffffffff
endbr64
push r15
mov  r15d, r8d
push r14
mov  r14d, ecx
push r13
mov  r13, rdi
and  r14d, 0x7
push r12
mov  r12, r9
push rbp
mov  rbp, rdx
xor  edx, edx
push rbx
sub  rsp, 0x18
mov  rbx, QWORD PTR [rdi+0x48]
mov  QWORD PTR [rsp+0x8], rsi
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
mov  r10, QWORD PTR [rsp+0x8]
mov  DWORD PTR [rbx+0x8], ebp
mov  rdi, r13
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  BYTE PTR [rbx+0x59], r14b
mov  QWORD PTR [rbx+0x10], rax
mov  rax, r12
rol  r12w, 0x8
sar  rax, 0x10
mov  BYTE PTR [rbx+0x5a], r15b
mov  BYTE PTR [rbx+0x5b], al
mov  rax, rbp
rol  bp, 0x8
sar  rax, 0x10
mov  WORD PTR [rbx+0x5c], r12w
mov  BYTE PTR [rbx+0x5e], al
lea  rax, [rip+0x136b6]
mov  WORD PTR [rbx+0x5f], bp
mov  QWORD PTR [rbx], r10
mov  DWORD PTR [rbx+0xc], 0xa
mov  BYTE PTR [rbx+0x58], 0x3b
mov  QWORD PTR [r13+0x50], rax
call 0x17650
add  rsp, 0x18
not  eax
pop  rbx
pop  rbp
shr  eax, 0x1f
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, r8d
push r12
mov  r12d, ecx
shl  r13d, 0x6
push rbp
mov  rbp, rdi
and  r12d, 0x3f
push rbx
or   r12d, r13d
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r15
mov  rdi, rbp
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  DWORD PTR [rbx+0x8], r14d
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0xc], 0x3
shl  eax, 0xd
mov  BYTE PTR [rbx+0x5a], r12b
or   eax, 0x5a
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
mov  eax, r14d
rol  ax, 0x8
mov  WORD PTR [rbx+0x5f], ax
lea  rax, [rip+0x12522]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0x10dfd
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
jne  0x10dd0
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rdi, rbp
call 0x164f0
mov  edx, r14d
mov  rsi, r15
lea  rdi, [rip+0x124da]
sub  edx, eax
call 0x16b90
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  eax, 0xffffffff
endbr64
push r14
mov  r14, rsi
mov  esi, 0x70
push r13
mov  r13d, edx
xor  edx, edx
push r12
mov  r12d, ecx
bswap  r13d
push rbp
mov  rbp, rdi
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r12d
mov  rdi, rbp
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
rol  r12w, 0x8
mov  QWORD PTR [rbx], r14
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x5a], r13d
shl  eax, 0xd
mov  WORD PTR [rbx+0x5f], r12w
or   al, 0xe5
mov  DWORD PTR [rbx+0xc], 0x3
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x12e44]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
pop  r13
pop  r14
endbr64
push r15
mov  r15, rsi
mov  esi, 0x70
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, ecx
push r12
mov  r12, rdi
bswap  r13d
push rbp
mov  ebp, r8d
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
mov  DWORD PTR [rbx+0x8], ebp
rol  bp, 0x8
mov  rdi, r12
48 b8 03 00 00 00 0a 00 00 00 movabs rax, 0xa00000003
mov  QWORD PTR [rbx], r15
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 f0 00 00 00 movabs rax, 0xf000000012
mov  QWORD PTR [rbx+0x14], rax
lea  rax, [rip+0x13287]
mov  BYTE PTR [rbx+0x59], r14b
mov  DWORD PTR [rbx+0x5a], r13d
mov  WORD PTR [rbx+0x5f], bp
mov  BYTE PTR [rbx+0x58], 0x52
mov  QWORD PTR [r12+0x50], rax
call 0x17650
add  rsp, 0x8
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x28
mov  QWORD PTR [rsp], rdx
lea  r14, [rsp+0x10]
xor  edx, edx
mov  rbp, rdi
mov  QWORD PTR [rsp+0x8], rcx
mov  rdi, r14
mov  r13d, esi
mov  esi, 0x2000
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x2018], rax
xor  eax, eax
call 0x1edc0
xor  r8d, r8d
mov  ecx, 0x4
mov  rsi, r14
mov  r9d, 0x2
mov  edx, 0x1
mov  rdi, rbp
call 0xfc30
test eax, eax
js   0x118a5
movzx  r15d, WORD PTR [rsp+0x10]
rol  r15w, 0x8
movzx  r15d, r15w
add  r15d, 0x2
cmp  r15d, 0xe
jbe  0x118a5
xor  r8d, r8d
mov  r9d, 0x2
mov  ecx, r15d
mov  rsi, r14
mov  edx, 0x1
mov  rdi, rbp
call 0xfc30
test eax, eax
js   0x118a5
mov  esi, DWORD PTR [rbp+0x2c]
mov  r12d, r15d
add  r12, r14
test esi, esi
jne  0x11930
lea  rbx, [rsp+0x14]
cmp  r12, rbx
jbe  0x118a5
movzx  eax, BYTE PTR [rsp+0x13]
cmp  BYTE PTR [rbx], al
jne  0x11898
cmp  BYTE PTR [rbx+0x3], 0xb0
jne  0x11898
mov  ecx, DWORD PTR [rbp+0x2c]
test ecx, ecx
jne  0x119c0
movzx  edx, BYTE PTR [rbx+0x6]
test r13d, r13d
jne  0x118b0
movzx  esi, BYTE PTR [rbx+0x5]
movzx  edi, BYTE PTR [rbx+0x4]
mov  ecx, 0x1
call 0x14e80
mov  rcx, QWORD PTR [rsp]
test rcx, rcx
je   0x11803
mov  QWORD PTR [rcx], rax
mov  edx, DWORD PTR [rbp+0x2c]
test edx, edx
jne  0x119a0
movzx  edx, BYTE PTR [rbx+0xa]
test r13d, r13d
je   0x118f0
mov  edi, edx
call 0x14e10
movzx  edi, BYTE PTR [rbx+0x9]
mov  r13d, eax
call 0x14e10
movzx  edi, BYTE PTR [rbx+0x8]
mov  r12d, eax
call 0x14e10
mov  ecx, 0x1
mov  edx, r13d
mov  esi, r12d
mov  edi, eax
call 0x14e80
mov  rbx, rax
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
jne  0x11910
mov  rcx, QWORD PTR [rsp+0x8]
xor  eax, eax
test rcx, rcx
je   0x11869
mov  QWORD PTR [rcx], rbx
mov  rdx, QWORD PTR [rsp+0x2018]
sub  rdx, QWORD PTR fs:0x28
jne  0x119f2
add  rsp, 0x2028
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
add  rbx, 0xb
cmp  rbx, r12
jb   0x117bb
mov  eax, 0xffffffff
jmp  0x11869
nop  DWORD PTR [rax+0x0]
mov  edi, edx
call 0x14e10
movzx  edi, BYTE PTR [rbx+0x5]
mov  r15d, eax
call 0x14e10
movzx  edi, BYTE PTR [rbx+0x4]
mov  r12d, eax
call 0x14e10
mov  ecx, 0x1
mov  edx, r15d
mov  esi, r12d
mov  edi, eax
call 0x14e80
jmp  0x117f7
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movzx  esi, BYTE PTR [rbx+0x9]
movzx  edi, BYTE PTR [rbx+0x8]
mov  ecx, 0x1
call 0x14e80
mov  rbx, rax
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
je   0x1185a
mov  rdx, rbx
lea  rsi, [rip+0x11a7f]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x1185a
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
mov  ebx, 0x2000
call 0x164f0
mov  r8d, eax
mov  eax, ebx
sub  eax, r8d
cmp  eax, r15d
jl   0x119e0
mov  edx, r15d
mov  rsi, r14
lea  rbx, [rsp+0x14]
lea  rdi, [rip+0x11a14]
call 0x16b90
cmp  r12, rbx
jbe  0x118a5
mov  r14, rbx
lea  r15, [rip+0x11a07]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rsi, r14
mov  edx, 0xb
mov  rdi, r15
add  r14, 0xb
call 0x16b90
cmp  r14, r12
jb   0x11980
jmp  0x117b6
xchg ax, ax
mov  rdx, rax
lea  rsi, [rip+0x119e0]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x1180e
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0xb
mov  rsi, rbx
lea  rdi, [rip+0x119b6]
call 0x16b90
jmp  0x117d8
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x164f0
sub  ebx, eax
mov  r15d, ebx
jmp  0x1194e
endbr64
push r12
push rbp
mov  rbp, rdi
push rbx
mov  ebx, esi
sub  rsp, 0x40
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x38], rax
xor  eax, eax
mov  r12, rsp
call 0xeb80
xor  edx, edx
mov  esi, 0x2c
mov  rdi, r12
call 0x1edc0
mov  eax, ebx
rol  bx, 0x8
mov  BYTE PTR [rsp+0x3], 0x8
sar  eax, 0x10
mov  WORD PTR [rsp+0xa], bx
xor  r8d, r8d
mov  edx, 0xc
mov  BYTE PTR [rsp+0x9], al
mov  rax, QWORD PTR [rbp+0xd8]
mov  rsi, r12
mov  rdi, rbp
movzx  eax, BYTE PTR [rax+0x3]
and  eax, 0xf
cmp  al, 0x1
mov  eax, DWORD PTR [rip+0x463fd]
seta r8b
xor  ecx, ecx
test eax, eax
jne  0x12010
call 0x108f0
mov  rdx, QWORD PTR [rsp+0x38]
sub  rdx, QWORD PTR fs:0x28
jne  0x12017
add  rsp, 0x40
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+rax*1+0x0]
call 0x10b10
jmp  0x11ff2
endbr64
push r14
mov  r14, rsi
mov  esi, 0x70
push r13
mov  r13d, edx
xor  edx, edx
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
and  r12d, 0x7
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r13d
mov  rdi, rbp
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
rol  r13w, 0x8
mov  QWORD PTR [rbx], r14
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0xc], 0x1
shl  eax, 0xd
mov  WORD PTR [rbx+0x5f], r13w
or   eax, 0x3c
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x13749]
or   BYTE PTR [rbx+0x59], r12b
pop  rbx
mov  QWORD PTR [rbp+0x50], rax
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
movzx  esi, BYTE PTR [rdi]
movzx  edx, BYTE PTR [rdi+0x20]
sub  esi, 0x21
mov  eax, edx
sub  esi, edx
movzx  edx, dl
lea  rdi, [rdi+rdx*1+0x21]
test al, 0x1
jne  0xd565
add  rdi, 0x1
sub  esi, 0x1
cmp  esi, 0xd
jle  0xd570
cmp  BYTE PTR [rdi+0x6], 0x58
je   0xd580
xor  edx, edx
jmp  0xcf90
nop  WORD PTR [rax+rax*1+0x0]
cmp  BYTE PTR [rdi+0x7], 0x41
jne  0xd570
cmp  BYTE PTR [rdi+0x9], 0x0
jne  0xd570
sub  esi, 0xe
add  rdi, 0xe
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x78
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x68], rax
mov  eax, DWORD PTR [rdi]
test eax, eax
jle  0x1f6cc
mov  rbx, QWORD PTR [rsi]
mov  rbp, rdi
mov  r14, rsi
mov  r12, rdx
mov  r13, r8
mov  r15d, ecx
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [rbx]
movzx  ecx, BYTE PTR [rdx]
cmp  cl, 0x2d
je   0x1f528
cmp  cl, 0x2b
je   0x1fd15
mov  rdi, rdx
mov  QWORD PTR [rsp], rdx
call 0x1f020
mov  rdx, QWORD PTR [rsp]
test eax, eax
jne  0x1fd15
mov  eax, 0x1
mov  rdx, QWORD PTR [rsp+0x68]
sub  rdx, QWORD PTR fs:0x28
jne  0x1fe10
add  rsp, 0x78
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rdx+0x1]
test cl, cl
je   0x1f4fc
cmp  cl, 0x2d
je   0x1fc00
mov  rdi, rdx
mov  QWORD PTR [rsp], rdx
call 0x1f020
mov  rdx, QWORD PTR [rsp]
mov  ecx, 0x1
mov  DWORD PTR [rsp+0x38], 0x0
mov  DWORD PTR [rsp+0x34], eax
mov  eax, DWORD PTR [rbp+0x0]
lea  r9, [rdx+0x1]
mov  DWORD PTR [rsp+0x3c], eax
movdqu xmm0, XMMWORD PTR [r13+0x0]
xor  r10d, r10d
movups XMMWORD PTR [rsp+0x50], xmm0
mov  rax, QWORD PTR [r13+0x10]
mov  QWORD PTR [rsp+0x60], rax
test r15d, r15d
je   0x1f59f
mov  eax, DWORD PTR [rsp+0x50]
cmp  eax, 0x2f
ja   0x1fa30
mov  edx, eax
add  eax, 0x8
add  rdx, QWORD PTR [rsp+0x60]
mov  DWORD PTR [rsp+0x50], eax
mov  r10, QWORD PTR [rdx]
movzx  edx, BYTE PTR [r12+0x1]
mov  r11, r9
lea  eax, [rdx-0x2b]
cmp  al, 0x1
setbe  al
test dl, dl
sete dl
or   eax, edx
movzx  edx, BYTE PTR [r12]
movzx  eax, al
mov  DWORD PTR [rsp+0x2c], eax
mov  eax, ecx
mov  rcx, r13
mov  r13, rbx
xor  eax, 0x1
mov  rbx, r12
mov  BYTE PTR [rsp+0x33], al
test dl, dl
je   0x1f730
cmp  dl, 0x5c
je   0x1f970
movsx  esi, dl
lea  rdi, [rip+0x13e60]
mov  QWORD PTR [rsp+0x20], rcx
mov  QWORD PTR [rsp+0x18], r11
mov  QWORD PTR [rsp+0x10], r10
mov  QWORD PTR [rsp+0x8], r9
mov  BYTE PTR [rsp], dl
call 0xb7e0
movzx  edx, BYTE PTR [rsp]
mov  r9, QWORD PTR [rsp+0x8]
test rax, rax
mov  r10, QWORD PTR [rsp+0x10]
mov  r11, QWORD PTR [rsp+0x18]
mov  rcx, QWORD PTR [rsp+0x20]
je   0x1f978
movzx  eax, BYTE PTR [r11]
cmp  al, 0x2b
je   0x1fae0
cmp  al, 0x3d
jne  0x1fb50
add  r11, 0x1
mov  esi, DWORD PTR [rsp+0x34]
test esi, esi
je   0x1fb20
nop  DWORD PTR [rax+0x0]
lea  eax, [rdx-0x23]
cmp  al, 0x1c
ja   0x1f5d5
lea  rdi, [rip+0xc09a]
movzx  eax, al
movsxd rax, DWORD PTR [rdi+rax*4]
add  rax, rdi
notrack jmp rax
nop  WORD PTR [rax+rax*1+0x0]
cmp  BYTE PTR [r11+0x1], 0x0
jne  0x1fa6c
mov  r8, rbx
mov  r13, rcx
test r15d, r15d
je   0x1f6a0
movzx  eax, BYTE PTR [r11]
mov  BYTE PTR [r10], al
nop  DWORD PTR [rax]
movzx  eax, BYTE PTR [r8+0x1]
cmp  al, 0x2c
je   0x1f6b1
test al, al
jne  0x1fd8c
mov  eax, DWORD PTR [rbp+0x0]
mov  rsi, QWORD PTR [r14]
sub  eax, 0x1
lea  rbx, [rsi+0x8]
mov  DWORD PTR [rbp+0x0], eax
mov  QWORD PTR [r14], rbx
test eax, eax
jg   0x1f4d0
xor  eax, eax
jmp  0x1f501
nop  DWORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rbx+0x2]
lea  rsi, [rbx+0x1]
lea  edx, [rax-0x2b]
cmp  dl, 0x1
jbe  0x1fb78
test al, al
je   0x1fb78
test r15d, r15d
je   0x1f717
mov  eax, DWORD PTR [rsp+0x50]
cmp  eax, 0x2f
ja   0x1fcd0
mov  edx, eax
add  eax, 0x8
add  rdx, QWORD PTR [rsp+0x60]
mov  DWORD PTR [rsp+0x50], eax
mov  r10, QWORD PTR [rdx]
movzx  edx, BYTE PTR [rbx+0x1]
mov  rbx, rsi
test dl, dl
jne  0x1f5dd
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  edx, DWORD PTR [rsp+0x2c]
mov  r13, rcx
test edx, edx
je   0x1fd60
mov  eax, DWORD PTR [rsp+0x38]
test eax, eax
jne  0x1fd60
mov  edx, r15d
mov  rsi, r12
mov  rdi, r9
call 0x1f070
cmp  eax, 0xffffffff
je   0x1fd60
cmp  eax, 0x1
je   0x1f6b1
jmp  0x1f501
cmp  BYTE PTR [r11], 0x0
jne  0x1fa6c
cmp  r12, rbx
je   0x1fa6c
cmp  BYTE PTR [rbx-0x1], 0x2c
je   0x1fa6c
mov  r13, rcx
movzx  ecx, BYTE PTR [rbx+0x1]
mov  r8, rbx
mov  eax, ecx
and  eax, 0xffffffdf
cmp  al, 0x4c
jne  0x1fba0
movzx  eax, BYTE PTR [rbx+0x2]
mov  edx, eax
and  edx, 0xffffffdf
cmp  dl, 0x4c
jne  0x1fce8
test r15d, r15d
je   0x1f7bf
add  QWORD PTR [r10], 0x1
movzx  eax, BYTE PTR [r8+0x3]
add  r8, 0x2
jmp  0x1f6a5
nop  DWORD PTR [rax]
cmp  BYTE PTR [r11], 0x0
jne  0x1f7f6
mov  eax, DWORD PTR [rbp+0x0]
cmp  eax, 0x1
jle  0x1fd60
sub  eax, 0x1
mov  DWORD PTR [rbp+0x0], eax
mov  rax, QWORD PTR [r14]
lea  rdx, [rax+0x8]
mov  r11, QWORD PTR [rax+0x8]
mov  QWORD PTR [r14], rdx
lea  rsi, [rsp+0x48]
mov  rdi, r11
mov  QWORD PTR [rsp+0x10], rcx
mov  QWORD PTR [rsp+0x8], r10
mov  QWORD PTR [rsp], r9
call 0x1e840
mov  r9, QWORD PTR [rsp]
mov  r10, QWORD PTR [rsp+0x8]
cmp  BYTE PTR [rax], 0x0
mov  rcx, QWORD PTR [rsp+0x10]
jne  0x1fa60
mov  r13, rcx
movzx  ecx, BYTE PTR [rbx+0x1]
mov  rdx, QWORD PTR [rsp+0x48]
mov  r8, rbx
mov  eax, ecx
and  eax, 0xffffffdf
cmp  al, 0x4c
jne  0x1fc70
movzx  eax, BYTE PTR [rbx+0x2]
mov  ecx, eax
and  ecx, 0xffffffdf
cmp  cl, 0x4c
jne  0x1fd00
test r15d, r15d
je   0x1f7bf
mov  QWORD PTR [r10], rdx
add  r8, 0x2
movzx  eax, BYTE PTR [r8+0x1]
jmp  0x1f6a5
cmp  BYTE PTR [r11], 0x0
mov  r8, rbx
mov  r13, rcx
jne  0x1f89c
mov  eax, DWORD PTR [rbp+0x0]
cmp  eax, 0x1
jle  0x1fd60
sub  eax, 0x1
mov  DWORD PTR [rbp+0x0], eax
mov  rax, QWORD PTR [r14]
lea  rdx, [rax+0x8]
mov  r11, QWORD PTR [rax+0x8]
mov  QWORD PTR [r14], rdx
xor  eax, eax
cmp  BYTE PTR [r8+0x1], 0x20
sete al
add  r8, rax
test r15d, r15d
je   0x1f6a0
mov  QWORD PTR [r10], r11
jmp  0x1f6a0
nop  WORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [r11]
mov  rdx, rbx
test al, al
jne  0x1f8eb
mov  eax, DWORD PTR [rbp+0x0]
cmp  eax, 0x1
jle  0x1fd60
sub  eax, 0x1
mov  DWORD PTR [rbp+0x0], eax
mov  rax, QWORD PTR [r14]
lea  rsi, [rax+0x8]
mov  r11, QWORD PTR [rax+0x8]
mov  QWORD PTR [r14], rsi
movzx  eax, BYTE PTR [rdx+0x1]
add  rbx, 0x1
cmp  al, 0x2c
je   0x1f8ff
test al, al
jne  0x1fdf7
test r15d, r15d
je   0x1fdd5
mov  eax, DWORD PTR [rsp+0x50]
cmp  eax, 0x2f
ja   0x1fb88
mov  esi, eax
add  eax, 0x8
add  rsi, QWORD PTR [rsp+0x60]
mov  DWORD PTR [rsp+0x50], eax
mov  QWORD PTR [rsp], rcx
mov  rsi, QWORD PTR [rsi]
mov  rdi, r11
mov  QWORD PTR [rsp+0x20], r9
mov  QWORD PTR [rsp+0x18], rdx
mov  QWORD PTR [rsp+0x10], r11
mov  QWORD PTR [rsp+0x8], r10
call r10
mov  rcx, QWORD PTR [rsp]
cmp  eax, 0xfffffffd
jne  0x1fdcd
mov  rdx, QWORD PTR [rsp+0x18]
mov  r10, QWORD PTR [rsp+0x8]
mov  r11, QWORD PTR [rsp+0x10]
mov  r9, QWORD PTR [rsp+0x20]
movzx  edx, BYTE PTR [rdx+0x1]
jmp  0x1f5d5
xchg ax, ax
movzx  edx, BYTE PTR [rbx+0x1]
add  rbx, 0x1
cmp  BYTE PTR [r11], dl
jne  0x1f9b0
cmp  BYTE PTR [r11+0x1], 0x0
movzx  edx, BYTE PTR [rbx+0x1]
jne  0x1f999
test dl, dl
je   0x1fda6
cmp  dl, 0x2c
je   0x1fda6
add  rbx, 0x1
add  r11, 0x1
jmp  0x1f5d5
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
test dl, dl
je   0x1f730
cmp  dl, 0x2c
je   0x1fa20
mov  eax, edx
movzx  edx, BYTE PTR [rbx+0x1]
test r15d, r15d
mov  rdi, QWORD PTR [rsp+0x60]
setne  sil
jmp  0x1f9ef
nop  DWORD PTR [rax+0x0]
add  rbx, 0x1
cmp  dl, 0x2c
je   0x1fa20
test dl, dl
je   0x1f730
mov  eax, edx
movzx  edx, BYTE PTR [rbx+0x1]
cmp  al, 0x26
jne  0x1f9d8
test sil, sil
je   0x1f9d8
mov  eax, DWORD PTR [rsp+0x50]
cmp  eax, 0x2f
ja   0x1fa48
mov  r8d, eax
add  eax, 0x8
mov  DWORD PTR [rsp+0x50], eax
add  r8, rdi
mov  r10, QWORD PTR [r8]
add  rbx, 0x1
cmp  dl, 0x2c
jne  0x1f9e1
nop  WORD PTR [rax+rax*1+0x0]
test dl, dl
je   0x1f730
mov  r11, r9
jmp  0x1f658
mov  rdx, QWORD PTR [rsp+0x58]
lea  rax, [rdx+0x8]
mov  QWORD PTR [rsp+0x58], rax
jmp  0x1f59c
nop  DWORD PTR [rax+rax*1+0x0]
mov  r8, QWORD PTR [rsp+0x58]
lea  rax, [r8+0x8]
mov  QWORD PTR [rsp+0x58], rax
jmp  0x1fa0e
nop  DWORD PTR [rax+rax*1+0x0]
movzx  edx, BYTE PTR [rbx]
test dl, dl
je   0x1fac8
cmp  dl, 0x2c
je   0x1fac8
test r15d, r15d
mov  rdi, QWORD PTR [rsp+0x60]
setne  al
jmp  0x1fa91
nop  DWORD PTR [rax+0x0]
movzx  edx, BYTE PTR [rbx+0x1]
add  rbx, 0x1
cmp  dl, 0x2c
je   0x1fac8
test dl, dl
je   0x1fac8
cmp  dl, 0x26
jne  0x1fa80
test al, al
je   0x1fa80
mov  edx, DWORD PTR [rsp+0x50]
cmp  edx, 0x2f
ja   0x1fb60
mov  esi, edx
add  edx, 0x8
mov  DWORD PTR [rsp+0x50], edx
add  rsi, rdi
movzx  edx, BYTE PTR [rbx+0x1]
add  rbx, 0x1
mov  r10, QWORD PTR [rsi]
cmp  dl, 0x2c
jne  0x1fa8d
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rsp+0x3c]
mov  r11, r9
mov  DWORD PTR [rbp+0x0], eax
mov  QWORD PTR [r14], r13
movzx  edx, BYTE PTR [rbx]
jmp  0x1f5d5
nop  DWORD PTR [rax]
cmp  r11, r9
je   0x1fd3f
mov  edi, DWORD PTR [rsp+0x34]
test edi, edi
je   0x1fb24
cmp  r11, r9
setne  sil
test BYTE PTR [rsp+0x33], sil
jne  0x1fb08
cmp  dl, 0x26
je   0x1f8c4
cmp  dl, 0x2c
jne  0x1f9bd
jmp  0x1fa28
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [r11]
test al, al
je   0x1f658
cmp  dl, 0x2a
jne  0x1f658
movzx  edx, BYTE PTR [rbx+0x1]
cmp  dl, 0x20
je   0x1fde5
mov  r8, rbx
mov  r13, rcx
jmp  0x1f89c
nop  DWORD PTR [rax]
test al, al
je   0x1f645
jmp  0x1fae9
nop  WORD PTR [rax+rax*1+0x0]
mov  rsi, QWORD PTR [rsp+0x58]
lea  rdx, [rsi+0x8]
mov  QWORD PTR [rsp+0x58], rdx
jmp  0x1fab3
nop  DWORD PTR [rax+rax*1+0x0]
add  DWORD PTR [rsp+0x2c], 0x1
jmp  0x1f6f4
nop  WORD PTR [rax+rax*1+0x0]
mov  rsi, QWORD PTR [rsp+0x58]
lea  rax, [rsi+0x8]
mov  QWORD PTR [rsp+0x58], rax
jmp  0x1f923
nop  DWORD PTR [rax+rax*1+0x0]
sub  ecx, 0x43
lea  rsi, [rbx+0x1]
cmp  cl, 0x30
ja   0x1fbed
mov  eax, 0x1
shl  rax, cl
48 b9 40 00 00 00 40 00 00 00 movabs rcx, 0x4000000040
test rax, rcx
jne  0x1fddd
48 ba 01 00 00 00 01 00 00 00 movabs rdx, 0x100000001
test rax, rdx
jne  0x1fd76
48 ba 00 00 01 00 00 00 01 00 movabs rdx, 0x1000000010000
test rax, rdx
jne  0x1fd6a
test r15d, r15d
je   0x1f6a0
add  DWORD PTR [r10], 0x1
jmp  0x1f6a0
nop
cmp  BYTE PTR [rdx+0x2], 0x0
jne  0x1fc30
sub  eax, 0x1
mov  DWORD PTR [rbp+0x0], eax
je   0x1f6cc
mov  rax, rbx
add  rax, 0x8
mov  QWORD PTR [r14], rax
mov  eax, 0x1
jmp  0x1f501
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, rdx
mov  QWORD PTR [rsp], rdx
call 0x1f020
mov  rdx, QWORD PTR [rsp]
mov  DWORD PTR [rsp+0x34], eax
mov  eax, DWORD PTR [rbp+0x0]
cmp  BYTE PTR [rdx+0x3], 0x0
lea  r9, [rdx+0x2]
mov  DWORD PTR [rsp+0x3c], eax
je   0x1fd60
mov  DWORD PTR [rsp+0x38], 0x1
mov  ecx, 0x1
jmp  0x1f565
nop  DWORD PTR [rax+rax*1+0x0]
sub  ecx, 0x43
lea  rsi, [rbx+0x1]
cmp  cl, 0x30
ja   0x1fcbd
mov  eax, 0x1
shl  rax, cl
48 b9 40 00 00 00 40 00 00 00 movabs rcx, 0x4000000040
test rax, rcx
jne  0x1fdef
48 b9 01 00 00 00 01 00 00 00 movabs rcx, 0x100000001
test rax, rcx
jne  0x1fd48
48 b9 00 00 01 00 00 00 01 00 movabs rcx, 0x1000000010000
test rax, rcx
jne  0x1fd81
test r15d, r15d
je   0x1f6a0
mov  DWORD PTR [r10], edx
jmp  0x1f6a0
xchg ax, ax
mov  rdx, QWORD PTR [rsp+0x58]
lea  rax, [rdx+0x8]
mov  QWORD PTR [rsp+0x58], rax
jmp  0x1f714
nop  DWORD PTR [rax+rax*1+0x0]
test r15d, r15d
je   0x1fcf5
add  QWORD PTR [r10], 0x1
movzx  eax, BYTE PTR [rbx+0x2]
add  r8, 0x1
jmp  0x1f6a5
xchg ax, ax
test r15d, r15d
je   0x1fcf5
mov  QWORD PTR [r10], rdx
add  r8, 0x1
movzx  eax, BYTE PTR [rbx+0x2]
jmp  0x1f6a5
mov  rdi, rdx
mov  QWORD PTR [rsp], rdx
call 0x1f020
mov  DWORD PTR [rsp+0x38], 0x0
mov  r9, QWORD PTR [rsp]
xor  ecx, ecx
mov  DWORD PTR [rsp+0x34], eax
mov  eax, DWORD PTR [rbp+0x0]
mov  DWORD PTR [rsp+0x3c], eax
jmp  0x1f565
movzx  edx, BYTE PTR [rbx+0x1]
jmp  0x1f999
test r15d, r15d
je   0x1fd50
mov  BYTE PTR [r10], dl
movzx  eax, BYTE PTR [r8+0x2]
mov  r8, rsi
jmp  0x1f6a5
nop  DWORD PTR [rax]
mov  eax, 0xffffffff
jmp  0x1f501
test r15d, r15d
je   0x1fd50
add  WORD PTR [r10], 0x1
jmp  0x1fd50
test r15d, r15d
je   0x1fd50
add  BYTE PTR [r10], 0x1
jmp  0x1fd50
test r15d, r15d
je   0x1fd50
mov  WORD PTR [r10], dx
jmp  0x1fd50
lea  rsi, [r8+0x1]
lea  rdi, [rip+0xb9e1]
call 0x203e0
mov  eax, 0xfffffffe
jmp  0x1f501
mov  r8, rbx
mov  r13, rcx
test r15d, r15d
je   0x1f6b1
mov  DWORD PTR [r10], 0x1
movzx  eax, BYTE PTR [rbx+0x1]
cmp  al, 0x2c
jne  0x1f6a9
jmp  0x1f6b1
mov  r13, rcx
jmp  0x1f762
mov  r13, rcx
jmp  0x1f6b1
mov  r8, rsi
jmp  0x1fbed
mov  eax, 0x2a
jmp  0x1f9c3
mov  r8, rsi
jmp  0x1fcbd
mov  rsi, rbx
lea  rdi, [rip+0xb977]
call 0x203e0
mov  eax, 0xfffffffe
jmp  0x1f501
endbr64
49 b8 cf f7 53 e3 a5 9b c4 20 movabs r8, 0x20c49ba5e353f7cf
push rbp
mov  rbp, rdi
mov  rsi, QWORD PTR [rdi+0x80]
mov  rdi, QWORD PTR [rdi+0x48]
mov  rcx, QWORD PTR [rsi+0x8]
mov  r9d, DWORD PTR [rdi+0x18]
mov  rdi, QWORD PTR [rip+0x40974]
mov  rax, rcx
sar  rcx, 0x3f
imul r8
xor  eax, eax
mov  r8, rdx
lea  rdx, [rip+0xe84e]
sar  r8, 0x7
sub  r8, rcx
mov  rcx, QWORD PTR [rsi]
mov  esi, 0x1
call 0xbb10
cmp  DWORD PTR [rbp+0x2c], 0x1
jle  0x16824
mov  rdi, rbp
call 0x166d0
pop  rbp
endbr64
push r12
push rbp
push rbx
sub  rsp, 0x110
mov  r12d, DWORD PTR [rip+0x473ba]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
cmp  r12d, esi
je   0x1105c
add  DWORD PTR [rdi+0x28], 0x1
mov  ebp, esi
mov  rbx, rdi
call 0xec00
test ebp, ebp
jne  0x11080
xor  ebp, ebp
sub  DWORD PTR [rbx+0x28], 0x1
mov  DWORD PTR [rip+0x47384], ebp
mov  rax, QWORD PTR [rsp+0x108]
sub  rax, QWORD PTR fs:0x28
jne  0x1109e
add  rsp, 0x110
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
ret
xchg ax, ax
xor  r8d, r8d
mov  rsi, rsp
mov  ecx, 0x3f
mov  edx, 0x8
mov  rdi, rbx
call 0x10d20
test eax, eax
jns  0x11052
jmp  0x11050
endbr64
mov  QWORD PTR [rdi+0x88], rsi
endbr64
push rbx
mov  rbx, rsi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
lea  rsi, [rsp+0x4]
mov  DWORD PTR [rsp+0x4], 0x1
call 0xe880
mov  QWORD PTR [rbx], rax
mov  eax, DWORD PTR [rsp+0x4]
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0xea3b
add  rsp, 0x10
pop  rbx
ret
endbr64
push r13
mov  r13, rsi
mov  esi, 0x70
push r12
mov  r12d, edx
xor  edx, edx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0x8], r12d
mov  rdi, rbp
48 b8 03 00 00 00 0a 00 00 00 movabs rax, 0xa00000003
rol  r12w, 0x8
mov  QWORD PTR [rbx], r13
mov  QWORD PTR [rbx+0xc], rax
and  dx, 0x1f00
48 b8 12 00 00 00 f0 00 00 00 movabs rax, 0xf000000012
mov  QWORD PTR [rbx+0x14], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  WORD PTR [rbx+0x5f], r12w
shl  eax, 0xd
or   eax, 0x51
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x13305]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x8
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
endbr64
push r15
push r14
mov  r14, rsi
push r13
mov  r13, rcx
push r12
mov  r12, rdi
lea  rdi, [rip+0x149aa]
push rbp
push rbx
mov  rbx, rdx
sub  rsp, 0x1a8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x198], rax
xor  eax, eax
call 0x20cf0
test r12, r12
je   0xe548
mov  rbp, QWORD PTR [r12]
test rbp, rbp
je   0xe548
mov  rdi, rbp
call 0x20da0
test rax, rax
jne  0xe670
xor  r15d, r15d
mov  rdi, rbp
call 0xbb50
mov  QWORD PTR [r12], rax
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
test r14, r14
je   0xe4a6
lea  rbp, [rip+0x1496a]
mov  rdi, rbp
call 0x20da0
mov  r12, rax
test rax, rax
je   0xe608
mov  edx, 0xa
lea  rsi, [rsp+0x10]
mov  rdi, rax
call 0xb940
mov  rdx, QWORD PTR [rsp+0x10]
mov  ecx, eax
cmp  BYTE PTR [rdx], 0x0
jne  0xe854
cmp  eax, 0xffffffff
jl   0xe854
mov  eax, DWORD PTR [r14]
test eax, eax
jle  0xe618
test rbx, rbx
je   0xe500
cmp  QWORD PTR [rbx], 0x0
jle  0xe5c0
lea  rdi, [rip+0x14921]
call 0x20da0
mov  r12, rax
test rax, rax
je   0xe500
lea  rsi, [rsp+0x10]
mov  rdi, rax
call 0xe9f0
cmp  eax, 0x1
jne  0xe845
mov  rax, QWORD PTR [rbx]
cmp  rax, 0xffffffffffffffff
jl   0xe845
mov  rdx, QWORD PTR [rsp+0x10]
cmp  rax, rdx
jg   0xe6c8
nop  WORD PTR [rax+rax*1+0x0]
test r13, r13
je   0xe516
cmp  QWORD PTR [r13+0x0], 0x0
jne  0xe516
cmp  r15d, 0x3
jg   0xe780
call 0x20d40
mov  rax, QWORD PTR [rsp+0x198]
sub  rax, QWORD PTR fs:0x28
jne  0xe840
add  rsp, 0x1a8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
lea  r15, [rip+0x14857]
mov  rdi, r15
call 0xb640
mov  rbp, rax
test rax, rax
je   0xe7a0
mov  rdi, rbp
call 0x20da0
mov  rdi, rax
test rax, rax
je   0xe7c9
lea  r10, [rsp+0x90]
xor  eax, eax
lea  rcx, [rsp+0x1a]
mov  rdx, r10
lea  r9, [rsp+0x30]
lea  r8, [rsp+0x25]
mov  QWORD PTR [rsp+0x8], r10
lea  rsi, [rip+0x14812]
call 0xb9e0
test r12, r12
mov  r10, QWORD PTR [rsp+0x8]
mov  r15d, eax
je   0xe450
jmp  0xe6a8
nop  WORD PTR [rax+rax*1+0x0]
lea  rbp, [rip+0x14809]
mov  rdi, rbp
call 0xb640
mov  r12, rax
test rax, rax
je   0xe6d0
mov  rsi, rbx
mov  rdi, rax
call 0xe9f0
cmp  eax, 0x1
jne  0xe5f5
cmp  QWORD PTR [rbx], 0xffffffffffffffff
jge  0xe4b5
mov  rcx, r12
lea  rdx, [rip+0x14879]
jmp  0xe70f
nop  DWORD PTR [rax+0x0]
mov  eax, DWORD PTR [r14]
mov  ecx, 0xffffffff
test eax, eax
jg   0xe4a6
mov  rdi, rbp
mov  DWORD PTR [rsp+0x8], ecx
call 0xb640
mov  ecx, DWORD PTR [rsp+0x8]
test rax, rax
mov  r12, rax
je   0xe7d8
mov  edx, 0xa
lea  rsi, [rsp+0x10]
mov  rdi, rax
call 0xb940
mov  rdx, QWORD PTR [rsp+0x10]
mov  DWORD PTR [r14], eax
cmp  BYTE PTR [rdx], 0x0
jne  0xe65c
cmp  eax, 0xffffffff
jge  0xe4a6
mov  rcx, r12
lea  rdx, [rip+0x147b2]
jmp  0xe70f
nop  DWORD PTR [rax+rax*1+0x0]
lea  r10, [rsp+0x90]
mov  rdi, rax
lea  rcx, [rsp+0x1a]
xor  eax, eax
mov  rdx, r10
lea  r9, [rsp+0x30]
lea  r8, [rsp+0x25]
mov  QWORD PTR [rsp+0x8], r10
lea  rsi, [rip+0x14716]
call 0xb9e0
mov  r10, QWORD PTR [rsp+0x8]
mov  r15d, eax
test r15d, r15d
jle  0xe43a
mov  rdi, r10
call 0xbb50
mov  QWORD PTR [r12], rax
jmp  0xe450
nop  WORD PTR [rax+rax*1+0x0]
mov  QWORD PTR [rbx], rdx
jmp  0xe500
cmp  r15d, 0x2
jle  0xe740
cmp  BYTE PTR [rsp+0x25], 0x0
je   0xe740
cmp  WORD PTR [rsp+0x25], 0x312d
je   0xe730
lea  r12, [rsp+0x25]
mov  rsi, rbx
mov  rdi, r12
call 0xe9f0
cmp  eax, 0x1
jne  0xe705
cmp  QWORD PTR [rbx], 0xffffffffffffffff
jge  0xe4b5
mov  rcx, r12
lea  rdx, [rip+0x14791]
mov  rdi, QWORD PTR [rip+0x48a4a]
mov  esi, 0x1
xor  eax, eax
call 0xbb10
mov  edi, 0x1
call 0xbae0
nop  DWORD PTR [rax+0x0]
cmp  BYTE PTR [rsp+0x27], 0x0
jne  0xe6e6
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x20da0
mov  r12, rax
test rax, rax
je   0xe4b5
mov  rsi, rbx
mov  rdi, rax
call 0xe9f0
cmp  eax, 0x1
jne  0xe76e
cmp  QWORD PTR [rbx], 0xffffffffffffffff
jge  0xe4b5
mov  rcx, r12
lea  rdx, [rip+0x14760]
jmp  0xe70f
nop  WORD PTR [rax+rax*1+0x0]
cmp  WORD PTR [rsp+0x30], 0x2222
je   0xe830
lea  rdi, [rsp+0x30]
call 0xbb50
mov  QWORD PTR [r13+0x0], rax
jmp  0xe516
mov  rdi, r15
call 0x20da0
mov  rdi, rax
test rax, rax
je   0xe7c1
call 0xbb50
mov  rbp, rax
test rax, rax
jne  0xe563
xor  r15d, r15d
jmp  0xe450
test r12, r12
je   0xe7c1
jmp  0xe437
nop  DWORD PTR [rax+rax*1+0x0]
cmp  r15d, 0x1
jle  0xe820
cmp  BYTE PTR [rsp+0x1a], 0x0
je   0xe820
lea  r12, [rsp+0x1a]
mov  edx, 0xa
lea  rsi, [rsp+0x10]
mov  DWORD PTR [rsp+0x8], ecx
mov  rdi, r12
call 0xb940
mov  rdx, QWORD PTR [rsp+0x10]
mov  DWORD PTR [r14], eax
cmp  BYTE PTR [rdx], 0x0
jne  0xe863
cmp  eax, 0xffffffff
mov  ecx, DWORD PTR [rsp+0x8]
jl   0xe863
jne  0xe4a6
nop  DWORD PTR [rax+0x0]
mov  DWORD PTR [r14], ecx
jmp  0xe4a6
nop  DWORD PTR [rax+rax*1+0x0]
cmp  BYTE PTR [rsp+0x32], 0x0
je   0xe516
jmp  0xe78d
call 0xb790
mov  rcx, r12
lea  rdx, [rip+0x146b1]
jmp  0xe70f
mov  rcx, r12
lea  rdx, [rip+0x14592]
jmp  0xe70f
mov  rcx, r12
lea  rdx, [rip+0x145d3]
endbr64
push r12
mov  r12, rsi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
test rdi, rdi
js   0x150f8
test r12, r12
jg   0x150a8
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x15131
add  rsp, 0x10
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rsp+0x5]
mov  rdi, r12
call 0x14ec0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x15131
movsx  ecx, BYTE PTR [rsp+0x5]
movsx  r9d, BYTE PTR [rsp+0x7]
mov  rdx, r12
xor  eax, eax
movsx  r8d, BYTE PTR [rsp+0x6]
add  rsp, 0x10
mov  edi, 0x1
lea  rsi, [rip+0xf8b5]
pop  r12
jmp  0xba60
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rsp+0x5]
mov  r11, rdi
call 0x14ec0
movsx  ecx, BYTE PTR [rsp+0x5]
mov  rdx, r11
xor  eax, eax
movsx  r9d, BYTE PTR [rsp+0x7]
movsx  r8d, BYTE PTR [rsp+0x6]
mov  edi, 0x1
lea  rsi, [rip+0xf849]
call 0xba60
jmp  0x15082
endbr64
mov  rdi, QWORD PTR [rip+0x49ffd]
test rdi, rdi
je   0xe3b8
jmp  0xb750
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rip+0x4a019]
endbr64
movzx  eax, WORD PTR [rdi]
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
movzx  eax, WORD PTR [rdi]
endbr64
push rbp
xor  edx, edx
mov  rbp, rdi
mov  esi, 0x70
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
cmp  DWORD PTR [rbp+0x28], 0x1
movzx  edx, WORD PTR [rbx+0x58]
mov  rdi, rbp
sbb  eax, eax
mov  QWORD PTR [rbx], 0x0
and  eax, 0xfffffffc
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x8], 0x0
add  eax, 0x6
mov  DWORD PTR [rbx+0xc], eax
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
shl  eax, 0xd
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x14411]
mov  QWORD PTR [rbp+0x50], rax
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
push r13
xor  edx, edx
push r12
mov  r12, rsi
mov  esi, 0x100
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x118
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x108], rax
xor  eax, eax
mov  r13, rsp
mov  rdi, r13
call 0x1edc0
mov  rbx, QWORD PTR [rbp+0x48]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
xor  ecx, ecx
mov  QWORD PTR [rbx], r13
48 b8 04 00 00 00 03 00 00 00 movabs rax, 0x300000004
mov  rdi, rbp
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  BYTE PTR [rbx+0x5a], 0x1
shl  eax, 0xd
mov  WORD PTR [rbx+0x5e], cx
or   eax, 0x43
mov  BYTE PTR [rbx+0x60], 0x4
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x1169b]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0x11b93
mov  edx, DWORD PTR [rbp+0x2c]
test edx, edx
jne  0x11b30
movzx  ebx, WORD PTR [rsp]
rol  bx, 0x8
movzx  ebx, bx
add  ebx, 0x2
cmp  ebx, 0x100
ja   0x11b80
xor  r8d, r8d
xor  edx, edx
mov  r9d, 0x1
mov  ecx, ebx
mov  rsi, r13
mov  rdi, rbp
call 0xfb70
test eax, eax
js   0x11b93
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
jne  0x11b58
xor  r8d, r8d
test r12, r12
je   0x11b0c
mov  eax, DWORD PTR [rsp+0x8]
bswap  eax
mov  eax, eax
mov  QWORD PTR [r12], rax
mov  rax, QWORD PTR [rsp+0x108]
sub  rax, QWORD PTR fs:0x28
jne  0x11b9e
add  rsp, 0x118
mov  eax, r8d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  rdi, rbp
call 0x164f0
mov  edx, 0x4
mov  rsi, r13
lea  rdi, [rip+0x11860]
sub  edx, eax
call 0x16b90
jmp  0x11ab7
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x164f0
mov  edx, ebx
mov  rsi, r13
lea  rdi, [rip+0x1183b]
sub  edx, eax
call 0x16b90
jmp  0x11af8
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x1182c]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
mov  r8d, 0xffffffff
jmp  0x11b0c
endbr64
lea  rdi, [rip+0x226e5]
endbr64
push r15
mov  r15d, ecx
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, r8d
push r12
mov  r12, rsi
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r12
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x8], r14d
shl  eax, 0xd
mov  DWORD PTR [rbx+0xc], 0x2
or   eax, 0x15
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r15d, r15d
jne  0x109b0
test r13d, r13d
movzx  eax, BYTE PTR [rbx+0x59]
mov  BYTE PTR [rbx+0x5c], r14b
lea  rcx, [rip+0x12905]
setne  dl
shl  edx, 0x4
and  eax, 0xffffffe0
or   eax, edx
mov  edx, DWORD PTR [rbp+0x2c]
mov  BYTE PTR [rbx+0x59], al
test edx, edx
jne  0x109cf
lea  rax, [rip+0x12907]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x17650
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rbx+0x59]
mov  BYTE PTR [rbx+0x5c], r14b
and  eax, 0xffffffe0
or   eax, 0x1
mov  BYTE PTR [rbx+0x59], al
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
je   0x10985
lea  rcx, [rip+0x128ab]
mov  rdi, QWORD PTR [rip+0x4678a]
lea  rdx, [rip+0x128a2]
mov  esi, 0x1
xor  eax, eax
call 0xbb10
mov  edx, r14d
mov  rsi, r12
lea  rdi, [rip+0x1288d]
call 0x16b90
endbr64
sub  rsp, 0xd8
mov  r10d, edi
mov  r11, rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1eb50
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rcx, rsp
mov  rdx, r11
mov  QWORD PTR [rsp+0x8], rax
mov  esi, r10d
lea  rax, [rsp+0x20]
mov  edi, 0x1
mov  DWORD PTR [rsp], 0x10
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1e8e0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1ebb1
add  rsp, 0xd8
ret
endbr64
lea  rdi, [rip+0x1def5]
endbr64
push r15
mov  r15d, r8d
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, r9d
push r12
mov  r12d, ecx
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x18
mov  rbx, QWORD PTR [rdi+0x48]
mov  QWORD PTR [rsp+0x8], rsi
mov  esi, 0x70
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  r10, QWORD PTR [rsp+0x8]
48 b8 03 00 00 00 0a 00 00 00 movabs rax, 0xa00000003
mov  QWORD PTR [rbx+0xc], rax
48 b8 12 00 00 00 f0 00 00 00 movabs rax, 0xf000000012
mov  QWORD PTR [rbx+0x14], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  QWORD PTR [rbx], r10
shl  eax, 0xd
mov  DWORD PTR [rbx+0x8], r12d
or   eax, 0x43
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r15d, r15d
je   0xfcbc
movzx  eax, BYTE PTR [rbx+0x59]
and  eax, 0xffffffe1
or   eax, 0x2
mov  BYTE PTR [rbx+0x59], al
rol  r12w, 0x8
mov  BYTE PTR [rbx+0x5e], r14b
mov  WORD PTR [rbx+0x5f], r12w
test r13b, 0x1
je   0xfcd4
or   BYTE PTR [rbx+0x61], 0x40
and  r13d, 0x2
je   0xfcde
or   BYTE PTR [rbx+0x61], 0x80
lea  rax, [rip+0x13455]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
add  rsp, 0x18
pop  rbx
sar  eax, 0x1f
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
lea  rdi, [rip+0x23815]
endbr64
push r14
push r13
push r12
mov  r12, rdi
push rbp
mov  ebp, edx
sub  rsp, 0x8
mov  r14d, DWORD PTR [rip+0x37505]
test rdi, rdi
je   0x20fd0
test bpl, 0x8
jne  0x21020
and  ebp, 0x80
jne  0x21010
mov  esi, r14d
mov  rdi, r12
call 0x209a0
add  rsp, 0x8
mov  rax, r12
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
and  edx, 0xf
lea  rax, [rip+0x10a66]
mov  r13d, esi
mov  rsi, QWORD PTR [rax+rdx*8]
mov  edi, r13d
call 0xba50
mov  r12, rax
test rax, rax
jne  0x20fa0
and  ebp, 0x1000
je   0x20fb9
mov  edi, r13d
call 0xb880
add  rsp, 0x8
mov  rax, r12
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xor  esi, esi
mov  rdi, r12
or   r14d, 0x2
call 0xb7b0
jmp  0x20fae
xor  esi, esi
mov  edx, 0x2
mov  rdi, r12
call 0xb9f0
and  ebp, 0x80
je   0x20fae
endbr64
push rbx
mov  r11d, edi
mov  r10d, edx
mov  edi, esi
mov  rbx, r8
test rcx, rcx
je   0x19e20
mov  rax, QWORD PTR [rcx]
test rax, rax
jne  0x19d65
jmp  0x19d80
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rcx+0x8]
add  rcx, 0x8
test rax, rax
je   0x19d80
movzx  edx, BYTE PTR [rax]
cmp  edi, edx
jne  0x19d58
movzx  edx, BYTE PTR [rax+0x1]
cmp  r10d, edx
jne  0x19d58
add  rax, 0x2
pop  rbx
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rip+0x18499]
test rax, rax
je   0x19dc2
lea  rdx, [rip+0x1848d]
jmp  0x19da5
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rdx+0x8]
add  rdx, 0x8
test rax, rax
je   0x19dc2
movzx  ecx, BYTE PTR [rax]
cmp  edi, ecx
jne  0x19d98
movzx  ecx, BYTE PTR [rax+0x1]
cmp  r10d, ecx
je   0x19d75
mov  rax, QWORD PTR [rdx+0x8]
add  rdx, 0x8
test rax, rax
jne  0x19da5
cmp  edi, 0x40
je   0x19e71
cmp  edi, 0x4d
je   0x19e83
cmp  edi, 0x70
je   0x19e5e
test r10d, r10d
jne  0x19e6d
movsxd rsi, r9d
lea  r8, [rip+0xeb25]
mov  r9d, edi
cmp  edi, 0x7f
jle  0x19dff
lea  r8, [rip+0xeb2e]
mov  rdi, rbx
mov  rcx, 0xffffffffffffffff
mov  edx, 0x1
xor  eax, eax
call 0xb650
mov  rax, rbx
pop  rbx
ret
nop  WORD PTR [rax+rax*1+0x0]
cmp  r11d, 0x5
jle  0x19e44
cmp  r11d, 0x2bc
lea  rcx, [rip+0x183ec]
lea  rax, [rip+0x18365]
cmove  rcx, rax
jmp  0x19d49
test r11d, r11d
lea  rcx, [rip+0x183d2]
lea  rax, [rip+0x1932b]
cmovg  rcx, rax
jmp  0x19d49
movsxd rsi, r9d
lea  r8, [rip+0xb840]
mov  r9d, r10d
jmp  0x19dff
xor  eax, eax
pop  rbx
ret
movsxd rsi, r9d
lea  r8, [rip+0xb7d5]
mov  r9d, r10d
jmp  0x19dff
movsxd rsi, r9d
lea  r8, [rip+0xb7eb]
mov  r9d, r10d
endbr64
lea  rdi, [rip+0x24a45]
endbr64
cmp  rdx, 0x1fffff
jg   0xf6f8
jmp  0xf560
nop  WORD PTR [rax+rax*1+0x0]
endbr64
push r15
mov  r15d, ecx
push r14
mov  r14d, edx
xor  edx, edx
push r13
mov  r13d, r8d
push r12
mov  r12, rsi
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r12
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x8], r14d
shl  eax, 0xd
mov  DWORD PTR [rbx+0xc], 0x2
or   eax, 0x55
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
test r15d, r15d
jne  0x10aa0
test r13d, r13d
movzx  eax, BYTE PTR [rbx+0x59]
setne  dl
shl  edx, 0x4
and  eax, 0xffffffe0
or   eax, edx
mov  edx, DWORD PTR [rbp+0x2c]
mov  BYTE PTR [rbx+0x59], al
mov  eax, r14d
rol  ax, 0x8
mov  WORD PTR [rbx+0x5f], ax
test edx, edx
je   0x10aeb
lea  rdx, [rip+0x127d9]
jmp  0x10ac6
xchg ax, ax
movzx  eax, BYTE PTR [rbx+0x59]
and  eax, 0xffffffe0
or   eax, 0x1
mov  BYTE PTR [rbx+0x59], al
mov  eax, r14d
rol  ax, 0x8
mov  WORD PTR [rbx+0x5f], ax
mov  eax, DWORD PTR [rbp+0x2c]
test eax, eax
je   0x10aeb
lea  rdx, [rip+0x127b4]
lea  rsi, [rip+0x127b2]
mov  edi, 0x1
xor  eax, eax
call 0xba60
mov  edx, r14d
mov  rsi, r12
lea  rdi, [rip+0x1279d]
call 0x16b90
lea  rax, [rip+0x127b0]
mov  rdi, rbp
mov  QWORD PTR [rbp+0x50], rax
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
lea  rdi, [rip+0x25b75]
endbr64
cmp  rsi, 0x1fffff
jg   0xf8c8
jmp  0xf7c0
nop  WORD PTR [rax+rax*1+0x0]
endbr64
lea  rdi, [rip+0x26ba5]
endbr64
lea  rdi, [rip+0x27cd5]
endbr64
push r13
xor  eax, eax
lea  r8, [rip+0xe5bb]
mov  rcx, 0xffffffffffffffff
push r12
push rbp
mov  rbp, rsi
movsxd rsi, edx
mov  edx, 0x1
push rbx
mov  rbx, rsi
sub  rsp, 0x8
mov  r12, QWORD PTR [rdi+0x48]
mov  rdi, rbp
movzx  r9d, BYTE PTR [r12+0x2c]
call 0xb650
test eax, eax
js   0x16922
movsxd r13, eax
sub  ebx, eax
movzx  r9d, BYTE PTR [r12+0x2d]
add  r13, rbp
cmp  BYTE PTR [r12+0x2c], 0x0
js   0x16980
cmp  BYTE PTR [r12+0x2d], 0x0
js   0x169bc
movzx  eax, BYTE PTR [r12+0x2c]
and  eax, 0x1e
cmp  al, 0x18
ja   0x168c0
lea  rdx, [rip+0xe924]
movzx  eax, al
movsxd rax, DWORD PTR [rdx+rax*4]
add  rax, rdx
notrack jmp rax
nop  DWORD PTR [rax]
lea  r9, [rip+0xe50d]
nop  WORD PTR [rax+rax*1+0x0]
movzx  eax, WORD PTR [r12+0x2c]
lea  rdx, [rip+0xe500]
movsxd rsi, ebx
mov  rdi, r13
mov  rcx, 0xffffffffffffffff
lea  r8, [rip+0xe517]
and  ax, 0x180
cmp  ax, 0x180
lea  rax, [rip+0xe320]
cmove  rax, rdx
sub  rsp, 0x8
mov  edx, 0x1
push rax
xor  eax, eax
call 0xb650
pop  rdx
pop  rcx
lea  edx, [rax+r13*1]
sub  edx, ebp
test eax, eax
cmovns eax, edx
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax]
lea  r9, [rip+0xe488]
jmp  0x168d0
nop  DWORD PTR [rax+0x0]
lea  r9, [rip+0xe739]
jmp  0x168d0
nop  DWORD PTR [rax+0x0]
lea  r9, [rip+0xe44f]
jmp  0x168d0
nop  DWORD PTR [rax+0x0]
lea  r9, [rip+0xe43a]
jmp  0x168d0
nop  DWORD PTR [rax+0x0]
lea  r9, [rip+0xe417]
jmp  0x168d0
nop  DWORD PTR [rax+0x0]
xor  eax, eax
movsxd rsi, ebx
lea  r8, [rip+0xe476]
mov  rdi, r13
mov  rcx, 0xffffffffffffffff
mov  edx, 0x1
call 0xb650
test eax, eax
js   0x16922
movsxd rdx, eax
sub  ebx, eax
add  r13, rdx
cmp  BYTE PTR [r12+0x2d], 0x0
jns  0x1689c
movzx  r9d, BYTE PTR [r12+0x2e]
xor  eax, eax
movsxd rsi, ebx
mov  edx, 0x1
lea  r8, [rip+0xe42f]
mov  rcx, 0xffffffffffffffff
mov  rdi, r13
call 0xb650
test eax, eax
js   0x16922
movsxd rdx, eax
sub  ebx, eax
add  r13, rdx
jmp  0x1689c
nop  WORD PTR [rax+rax*1+0x0]
lea  r9, [rip+0xe3ac]
jmp  0x168d0
nop  DWORD PTR [rax+0x0]
lea  r9, [rip+0xe367]
endbr64
mov  rax, QWORD PTR [rdi+0x48]
mov  eax, DWORD PTR [rax+0x20]
endbr64
lea  rdi, [rip+0x28c05]
endbr64
push r13
push r12
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rip+0x38040]
test rbx, rbx
je   0x2044d
mov  r12, rsi
lea  r13, [rip+0xb383]
jmp  0x2042d
nop  DWORD PTR [rax+0x0]
mov  rcx, r12
mov  rdx, rbp
mov  rsi, r13
mov  rdi, rbx
call 0x20360
test eax, eax
jne  0x20442
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x2044d
mov  rcx, r12
mov  rdx, rbp
mov  rsi, rbp
mov  rdi, rbx
call 0x20360
test eax, eax
je   0x20410
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  edx, 0x16
lea  rsi, [rip+0xb33b]
mov  edi, 0x2
call 0xb720
mov  rdi, rbp
call 0xb780
mov  rsi, rbp
mov  edi, 0x2
mov  rdx, rax
call 0xb720
mov  edx, 0x2
mov  edi, 0x2
lea  rsi, [rip+0x4e92]
call 0xb720
endbr64
mov  eax, DWORD PTR [rdi+0x2c]
test eax, eax
jle  0x17040
jmp  0x16f70
xor  eax, eax
endbr64
mov  rax, QWORD PTR [rdi]
endbr64
lea  rdi, [rip+0x29a35]
endbr64
push r12
xor  r12d, r12d
push rbp
push rbx
test rsi, rsi
jle  0x1638f
mov  rax, QWORD PTR [rdi]
mov  rbx, rdi
mov  rbp, rsi
call QWORD PTR [rax+0x28]
mov  QWORD PTR [rbx+0x68], rax
cmp  rbp, rax
jg   0x163a0
mov  rax, QWORD PTR [rbx]
mov  QWORD PTR [rbx+0x70], rbp
mov  rsi, rbp
mov  rdi, rbx
call QWORD PTR [rax+0x30]
mov  QWORD PTR [rbx+0xa0], rax
mov  r12, rax
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  QWORD PTR [rbx+0x70], rax
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
endbr64
push r15
push r14
mov  r14, rdi
push r13
push r12
mov  r12d, esi
mov  esi, 0x100
push rbp
mov  rbp, rcx
push rbx
mov  rbx, rdx
xor  edx, edx
sub  rsp, 0x138
mov  rax, QWORD PTR [rsp+0x170]
mov  QWORD PTR [rsp+0x18], r8
lea  r13, [rsp+0x20]
mov  QWORD PTR [rsp+0x10], r9
mov  rdi, r13
mov  QWORD PTR [rsp+0x8], rax
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x128], rax
xor  eax, eax
call 0x1edc0
mov  r15, QWORD PTR [r14+0x48]
xor  edx, edx
mov  esi, 0x70
mov  rdi, r15
call 0x1edc0
movzx  edx, WORD PTR [r15+0x58]
mov  QWORD PTR [r15], r13
mov  rdi, r14
48 b8 0c 00 00 00 03 00 00 00 movabs rax, 0x30000000c
mov  esi, 0xc00
mov  QWORD PTR [r15+0x8], rax
and  dx, 0x1f00
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [r15+0x10], rax
movzx  eax, WORD PTR [r14+0x14]
mov  BYTE PTR [r15+0x5a], 0x0
shl  eax, 0xd
mov  BYTE PTR [r15+0x5e], r12b
or   eax, 0x43
mov  WORD PTR [r15+0x5f], si
or   eax, edx
mov  WORD PTR [r15+0x58], ax
lea  r15, [rip+0x11cd0]
mov  QWORD PTR [r14+0x50], r15
call 0x17650
test eax, eax
js   0x1169b
movzx  eax, WORD PTR [rsp+0x20]
mov  r9, QWORD PTR [rsp+0x10]
mov  r8, QWORD PTR [rsp+0x18]
rol  ax, 0x8
movzx  eax, ax
add  eax, 0x2
cmp  eax, 0xb
jbe  0x11690
test rbx, rbx
je   0x114ad
mov  eax, DWORD PTR [rsp+0x28]
bswap  eax
cdqe
mov  QWORD PTR [rbx], rax
test r8, r8
je   0x114c0
movzx  eax, BYTE PTR [rsp+0x25]
shr  al, 0x4
movzx  eax, al
mov  DWORD PTR [r8], eax
test r9, r9
je   0x114d0
movzx  eax, BYTE PTR [rsp+0x25]
and  eax, 0xf
mov  DWORD PTR [r9], eax
test rbp, rbp
je   0x11514
add  DWORD PTR [r14+0x28], 0x1
xor  r9d, r9d
mov  ecx, 0xc
mov  edx, r12d
mov  r8d, 0x1
mov  rsi, r13
mov  rdi, r14
call 0xfb70
test eax, eax
js   0x115b0
movzx  eax, WORD PTR [rsp+0x29]
mov  WORD PTR [rbp+0x0], ax
movzx  eax, BYTE PTR [rsp+0x2b]
mov  BYTE PTR [rbp+0x2], al
sub  DWORD PTR [r14+0x28], 0x1
cmp  QWORD PTR [rsp+0x8], 0x0
je   0x11678
cmp  r12d, 0xaa
je   0x115a0
xor  edx, edx
mov  esi, 0x100
mov  rdi, r13
call 0x1edc0
add  DWORD PTR [r14+0x28], 0x1
mov  rdx, QWORD PTR [rbx]
xor  r8d, r8d
mov  ecx, 0x8
mov  rsi, r13
mov  rdi, r14
call 0xfd10
test eax, eax
js   0x11640
movsx  eax, BYTE PTR [rsp+0x20]
mov  rbx, QWORD PTR [rsp+0x8]
xor  r12d, r12d
mov  DWORD PTR [rbx], eax
sub  DWORD PTR [r14+0x28], 0x1
mov  rax, QWORD PTR [rsp+0x128]
sub  rax, QWORD PTR fs:0x28
jne  0x116c5
add  rsp, 0x138
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x8]
xor  r12d, r12d
mov  DWORD PTR [rax], 0xffffffff
jmp  0x1156f
mov  rcx, QWORD PTR [r14+0x48]
xor  edx, edx
mov  esi, 0x70
mov  rdi, rcx
mov  QWORD PTR [rsp+0x10], rcx
call 0x1edc0
mov  rcx, QWORD PTR [rsp+0x10]
mov  rdi, r14
48 b8 0c 00 00 00 03 00 00 00 movabs rax, 0x30000000c
mov  QWORD PTR [rcx+0x8], rax
movzx  edx, WORD PTR [rcx+0x58]
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rcx+0x10], rax
movzx  eax, WORD PTR [r14+0x14]
and  dx, 0x1f00
mov  QWORD PTR [rcx], r13
shl  eax, 0xd
mov  BYTE PTR [rcx+0x5a], 0x0
or   eax, 0x43
mov  BYTE PTR [rcx+0x5e], r12b
or   eax, edx
mov  edx, 0xc00
mov  WORD PTR [rcx+0x58], ax
mov  WORD PTR [rcx+0x5f], dx
mov  QWORD PTR [r14+0x50], r15
call 0x17650
test eax, eax
js   0x11680
mov  edi, DWORD PTR [rsp+0x28]
mov  rsi, rbp
bswap  edi
movsxd rdi, edi
call 0x14ec0
jmp  0x1150f
nop  DWORD PTR [rax]
mov  ecx, 0xe
mov  edx, r12d
mov  rsi, r13
mov  rdi, r14
call 0x102a0
mov  r8d, eax
mov  eax, 0xffffffff
test r8d, r8d
js   0x11560
movzx  eax, BYTE PTR [rsp+0x2b]
and  eax, 0xf
jmp  0x11560
nop  DWORD PTR [rax+0x0]
xor  r12d, r12d
jmp  0x1156f
xor  eax, eax
mov  BYTE PTR [rbp+0x2], 0x0
mov  WORD PTR [rbp+0x0], ax
jmp  0x1150f
nop
mov  r12d, 0xffffffff
jmp  0x1156f
mov  ecx, DWORD PTR [r14+0x28]
mov  r12d, 0xffffffff
test ecx, ecx
jg   0x1156f
lea  rsi, [rip+0x11caf]
mov  edi, 0xffffffff
xor  eax, eax
call 0x1ec90
jmp  0x1156f
endbr64
push rbx
lea  rsi, [rip+0x1100a]
mov  rbx, rdi
xor  eax, eax
mov  edi, 0x1
call 0xba60
mov  edx, DWORD PTR [rbx+0x40]
cmp  edx, 0x2bc
jg   0x12590
cmp  edx, 0x1f3
jle  0x12540
lea  eax, [rdx-0x1f4]
cmp  eax, 0xc8
ja   0x12590
lea  rcx, [rip+0x11f3e]
movsxd rax, DWORD PTR [rcx+rax*4]
add  rax, rcx
notrack jmp rax
nop  DWORD PTR [rax+0x0]
cmp  edx, 0x65
jg   0x12568
test edx, edx
js   0x12590
cmp  edx, 0x65
ja   0x12590
lea  rcx, [rip+0x1223f]
mov  eax, edx
movsxd rax, DWORD PTR [rcx+rax*4]
add  rax, rcx
notrack jmp rax
nop  DWORD PTR [rax+0x0]
cmp  edx, 0x191
jne  0x12590
lea  rsi, [rip+0x11078]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rip+0x10190]
pop  rbx
jmp  0xb6e0
lea  rsi, [rip+0x11214]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x11035]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x11014]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10fe0]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10fb6]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f95]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f71]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f4c]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f26]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f01]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10edc]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10eb7]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e92]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e63]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e43]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10ed7]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f0a]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10ede]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x11060]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x11037]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x1100c]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10fe1]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10fbc]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f86]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f7d]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f48]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10f20]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10ef9]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10ed2]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10ea9]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e80]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e5a]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e32]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10e0a]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10dde]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10dac]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10d7f]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10d55]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10d2c]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10d01]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x12583
lea  rsi, [rip+0x10cda]
mov  edi, 0x1
xor  eax, eax
call 0xba60
endbr64
push r13
mov  r13d, esi
push r12
mov  r12d, edx
push rbp
mov  ebp, ecx
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rax, QWORD PTR [rdi]
test rax, rax
je   0x19cbd
call QWORD PTR [rax+0x48]
mov  DWORD PTR [rbx+0xc], r13d
mov  DWORD PTR [rbx+0x10], r12d
mov  DWORD PTR [rbx+0x14], ebp
mov  DWORD PTR [rbx+0x8], eax
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
mov  eax, 0xffffffff
endbr64
mov  rdi, QWORD PTR [rip+0x37a35]
test rdi, rdi
je   0x20d98
jmp  0xb7f0
nop  DWORD PTR [rax]
endbr64
push r15
mov  r15d, esi
mov  ecx, esi
mov  edx, edi
push r14
mov  r14d, 0x1
push r13
mov  r13d, 0x5f
push r12
lea  r12d, [r15+0x7ff]
push rbp
push rbx
mov  ebx, edi
mov  edi, 0x1
sub  rsp, 0x128
mov  DWORD PTR [rsp+0x4], esi
lea  rsi, [rip+0x15237]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x118], rax
xor  eax, eax
call 0xba60
mov  edi, r12d
and  edi, 0xfffff800
movsxd rdi, edi
call 0xb9c0
xor  edx, edx
test r15d, 0x7ff
setne  dl
test r15d, r15d
mov  rsi, rax
mov  rbp, rax
cmovns r12d, r15d
sub  ebx, DWORD PTR [rip+0x4ab57]
mov  edi, ebx
xor  ebx, ebx
sar  r12d, 0xb
add  edx, r12d
call 0xe0b0
lea  rax, [rsp+0x10]
mov  QWORD PTR [rsp+0x8], rax
test r15d, r15d
jle  0xcf43
nop  DWORD PTR [rax+0x0]
mov  eax, DWORD PTR [rip+0x4b4fa]
movsxd rdx, ebx
movzx  r12d, BYTE PTR [rbp+rdx*1+0x0]
mov  r8d, DWORD PTR [rbp+rdx*1+0x2]
movzx  r15d, WORD PTR [rbp+rdx*1+0x6]
test eax, eax
je   0xcf70
sub  eax, 0x1
cmp  eax, 0x2
ja   0xcf25
mov  r9d, r12d
mov  BYTE PTR [rsp+0x10], 0x0
sar  r9d, 1
je   0xcf02
lea  eax, [rbx+0x8]
lea  esi, [r9-0x1]
mov  r11, QWORD PTR [rip+0x4a2cf]
mov  rcx, QWORD PTR [rsp+0x8]
cdqe
lea  rdx, [rbp+rdx*1+0xa]
add  rax, rbp
lea  r10, [rdx+rsi*2]
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [r11+0x8]
movzx  edi, BYTE PTR [rax]
movzx  esi, BYTE PTR [rax+0x1]
mov  rdi, QWORD PTR [rdx+rdi*8]
mov  edx, 0x5f
test rdi, rdi
je   0xcef3
movzx  edx, BYTE PTR [rdi+rsi*1]
test dl, dl
cmove  edx, r13d
add  rax, 0x2
mov  BYTE PTR [rcx], dl
add  rcx, 0x1
cmp  r10, rax
jne  0xced0
sub  rsp, 0x8
push QWORD PTR [rsp+0x10]
mov  edx, r14d
mov  ecx, r15d
lea  rsi, [rip+0x157da]
xor  eax, eax
mov  edi, 0x1
call 0xba60
pop  rax
pop  rdx
lea  ebx, [rbx+r12*1+0x8]
add  r14d, 0x1
mov  eax, ebx
and  eax, 0x1
cmp  eax, 0x1
sbb  ebx, 0xffffffff
cmp  ebx, DWORD PTR [rsp+0x4]
jl   0xce70
mov  rax, QWORD PTR [rsp+0x118]
sub  rax, QWORD PTR fs:0x28
jne  0xcf7f
add  rsp, 0x128
mov  rdi, rbp
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xb660
nop
sub  rsp, 0x8
lea  rax, [rbp+rdx*1+0x8]
mov  r9d, r12d
push rax
jmp  0xcf0a
endbr64
lea  rdi, [rip+0x17ed5]
endbr64
mov  eax, DWORD PTR [rdi+0x2c]
mov  rsi, QWORD PTR [rdi+0xb8]
push rbx
mov  rbx, rdi
test eax, eax
jle  0x17086
mov  rax, rsi
mov  edx, 0x1000
sub  rax, QWORD PTR [rdi+0xa8]
sub  edx, eax
call 0x16f70
movsxd rsi, eax
add  rsi, QWORD PTR [rbx+0xb8]
mov  QWORD PTR [rbx+0xb8], rsi
pop  rbx
endbr64
mov  rax, QWORD PTR [rip+0x3771d]
test rax, rax
je   0x210d1
cmp  rdi, rax
jne  0x210c5
jmp  0x210ee
nop  WORD PTR [rax+rax*1+0x0]
cmp  rdi, rax
je   0x210e0
mov  rdx, rax
mov  rax, QWORD PTR [rax+0x18]
test rax, rax
jne  0x210c0
mov  eax, 0xffffffea
ret
nop  WORD PTR [rax+rax*1+0x0]
add  rdx, 0x18
mov  rax, QWORD PTR [rdi+0x18]
mov  QWORD PTR [rdx], rax
xor  eax, eax
ret
lea  rdx, [rip+0x376d3]
endbr64
lea  r8, [rip+0x38445]
xor  ecx, ecx
endbr64
mov  rdx, QWORD PTR [rdi+0x48]
mov  eax, DWORD PTR [rdx+0x24]
test eax, eax
jne  0x17c08
mov  eax, DWORD PTR [rdx+0x28]
test eax, eax
jne  0x17c08
cmp  BYTE PTR [rdx+0x2c], 0x0
jne  0x17c08
cmp  BYTE PTR [rdx+0x2f], 0x0
jne  0x17c08
ret
nop  DWORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rdx+0x2f]
mov  ecx, eax
and  eax, 0x7f
and  ecx, 0x7f
cmp  cl, 0x6f
jbe  0x17c02
movzx  eax, BYTE PTR [rdx+0x3b]
endbr64
push r12
lea  r12, [rip+0x37ed3]
push rbp
mov  rbp, rdi
mov  rdi, QWORD PTR [rip+0x37f08]
push rbx
cmp  rdi, r12
je   0x20588
test rdi, rdi
je   0x20588
call 0xb660
mov  rdi, rbp
call 0xb780
lea  edi, [rax+0x1]
mov  rbx, rax
cmp  edi, 0x20
ja   0x205c0
mov  QWORD PTR [rip+0x37ede], r12
lea  rdi, [rip+0x37e97]
lea  rdx, [rbx+0x1]
mov  rsi, rbp
pop  rbx
pop  rbp
pop  r12
jmp  0xb960
nop  DWORD PTR [rax+0x0]
movsxd rdi, edi
call 0xb9c0
mov  QWORD PTR [rip+0x37eb1], rax
mov  rdi, rax
test rax, rax
jne  0x205a9
pop  rbx
pop  rbp
pop  r12
endbr64
lea  rdi, [rip+0x1c095]
endbr64
lea  rax, [rip+0x125b5]
endbr64
push r12
xor  edx, edx
mov  r12, rsi
mov  esi, 0x70
push rbp
mov  rbp, rdi
bswap  r12d
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
mov  rdi, rbp
48 b8 0a 00 00 00 12 00 00 00 movabs rax, 0x120000000a
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  DWORD PTR [rbx+0x5d], r12d
shl  eax, 0xd
or   eax, 0x53
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x131fe]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
endbr64
push rbp
xor  esi, esi
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rdi+0x80]
mov  rdi, rbx
call 0xb830
mov  rcx, QWORD PTR [rbp+0x78]
mov  rdx, QWORD PTR [rbx]
mov  rax, QWORD PTR [rbx+0x8]
sub  rdx, QWORD PTR [rcx]
sub  rax, QWORD PTR [rcx+0x8]
mov  QWORD PTR [rbx], rdx
mov  QWORD PTR [rbx+0x8], rax
jns  0x19d26
sub  rdx, 0x1
nop  DWORD PTR [rax]
mov  rcx, rdx
sub  rdx, 0x1
add  rax, 0xf4240
js   0x19d10
mov  QWORD PTR [rbx], rcx
mov  QWORD PTR [rbx+0x8], rax
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
sub  rsp, 0xd8
mov  r10d, edi
mov  r11, rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1ecf0
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rdx, r11
xor  edi, edi
mov  QWORD PTR [rsp+0x8], rax
mov  rcx, rsp
mov  esi, r10d
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp], 0x10
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1e8e0
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x1ed4e
add  rsp, 0xd8
ret
endbr64
mov  rax, QWORD PTR [rdi+0xd8]
movzx  eax, BYTE PTR [rax]
and  eax, 0x1e
cmp  al, 0x4
sete al
movzx  eax, al
endbr64
mov  eax, DWORD PTR [rdi]
endbr64
mov  eax, DWORD PTR [rdi]
bswap  eax
endbr64
mov  eax, DWORD PTR [rdi]
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x228
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x218], rax
mov  rax, QWORD PTR [rdi+0xd8]
movzx  eax, BYTE PTR [rax]
and  eax, 0x1f
cmp  al, 0x5
je   0x142f0
mov  rax, QWORD PTR [rsp+0x218]
sub  rax, QWORD PTR fs:0x28
jne  0x14dfe
add  rsp, 0x228
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
lea  r13, [rsp+0x10]
mov  rbp, rdi
xor  edx, edx
mov  esi, 0x100
mov  rdi, r13
call 0x1edc0
mov  r12d, DWORD PTR [rip+0x440d2]
cmp  r12d, 0x1
je   0x14be0
add  DWORD PTR [rbp+0x28], 0x1
mov  rdi, rbp
call 0xec00
mov  edx, 0x8
xor  r8d, r8d
mov  rdi, rbp
lea  rsi, [rsp+0x110]
mov  ecx, 0x3f
call 0x10d20
mov  edx, DWORD PTR [rbp+0x28]
not  eax
shr  eax, 0x1f
mov  DWORD PTR [rip+0x44091], eax
mov  DWORD PTR [rbp+0x28], edx
mov  rsi, r13
mov  rdi, rbp
call 0x12c00
sub  DWORD PTR [rbp+0x28], 0x1
cmp  DWORD PTR [rip+0x44078], r12d
mov  rbx, rax
je   0x14378
mov  esi, r12d
mov  rdi, rbp
call 0x10e10
test rbx, rbx
je   0x142c7
lea  rsi, [rip+0xf7fa]
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  eax, BYTE PTR [rbx+0x1]
cmp  al, 0x1b
ja   0x14bc8
cmp  al, 0x17
jbe  0x14c50
lea  rsi, [rip+0xf7f3]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  r13, [rip+0xf7bb]
lea  rdi, [rip+0xf7e5]
lea  r12, [rip+0x10850]
lea  rbp, [rip+0xf7f2]
call 0xb6e0
test BYTE PTR [rbx+0x2], 0x1
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf7c8]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x3], 0x1
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf7c4]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x2], 0x2
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf7b4]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x3], 0x2
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf7a4]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x2], 0x8
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf795]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x2], 0x10
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf787]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x3], 0x10
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf777]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x2], 0x20
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf768]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x3], 0x20
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf75a]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x3], 0x4
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf74d]
mov  edi, 0x1
xor  eax, eax
call 0xba60
mov  edi, 0xa
call 0xb670
test BYTE PTR [rbx+0x4], 0x10
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf737]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x4], 0x20
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf730]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x5], 0x1
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf729]
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  eax, BYTE PTR [rbx+0x5]
test al, 0x1
je   0x145ba
test al, 0x2
mov  rdx, r13
lea  rcx, [rip+0xfb11]
mov  rsi, rbp
cmovne rdx, r12
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  r13, [rip+0xf5bc]
cmp  BYTE PTR [rbx+0x4], 0x0
mov  rsi, rbp
mov  edi, 0x1
lea  r12, [rip+0x1064c]
mov  rdx, r13
lea  rcx, [rip+0xfb12]
cmovs  rdx, r12
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x4], 0x40
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf6cc]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x2], 0x4
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfaf9]
mov  edi, 0x1
xor  eax, eax
call 0xba60
cmp  BYTE PTR [rbx+0x5], 0x0
mov  rdx, r13
mov  rsi, rbp
cmovs  rdx, r12
lea  rcx, [rip+0xf6a1]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x5], 0x4
mov  rdx, r13
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf691]
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  eax, BYTE PTR [rbx+0x5]
test al, 0x4
je   0x14694
test al, 0x8
mov  rdx, r13
lea  rcx, [rip+0xfac7]
mov  rsi, rbp
cmovne rdx, r12
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  r15, [rip+0xf4e2]
test BYTE PTR [rbx+0x7], 0x20
mov  rsi, rbp
mov  edi, 0x1
lea  r12, [rip+0x10572]
mov  rdx, r15
lea  rcx, [rip+0xfac8]
cmovne rdx, r12
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x5], 0x40
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfad0]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x5], 0x20
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf616]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x5], 0x10
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf610]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x4], 0x2
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf609]
mov  edi, 0x1
xor  eax, eax
call 0xba60
mov  edi, 0xa
call 0xb670
test BYTE PTR [rbx+0x4], 0x1
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf5f9]
xor  eax, eax
mov  edi, 0x1
call 0xba60
test BYTE PTR [rbx+0x4], 0x1
jne  0x14ca8
lea  rax, [rip+0xf629]
lea  r13, [rip+0xf5e4]
mov  QWORD PTR [rsp], rax
mov  edi, 0xa
lea  r15, [rip+0xf3e3]
lea  r12, [rip+0x1047f]
call 0xb670
movzx  eax, BYTE PTR [rbx+0x6]
mov  rsi, QWORD PTR [rsp]
lea  rdx, [rip+0x1d1ab]
mov  edi, 0x1
lea  r14, [rip+0xf649]
shr  al, 0x5
and  eax, 0x7
mov  rcx, QWORD PTR [rdx+rax*8]
lea  rdx, [rip+0xf5e4]
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x6], 0x8
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfb1a]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x6], 0x4
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfb29]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x6], 0x1
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfb38]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x6], 0x2
mov  rdx, r15
lea  rcx, [rip+0xfb5e]
cmovne rdx, r12
lea  rsi, [rip+0xf578]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x7], 0x10
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf562]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x7], 0x8
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfb39]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x7], 0x4
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xfb40]
xor  eax, eax
mov  edi, 0x1
mov  r15d, 0xba2e8ba3
lea  rbp, [rip+0xf54d]
call 0xba60
mov  edi, 0xa
call 0xb670
movzx  r12d, WORD PTR [rbx+0x8]
mov  rsi, r14
xor  eax, eax
lea  rdx, [rip+0xf50a]
mov  edi, 0x1
rol  r12w, 0x8
movzx  r12d, r12w
mov  ecx, r12d
call 0xba60
mov  rdx, r12
mov  rsi, rbp
mov  edi, 0x1
imul rdx, r15
xor  eax, eax
shr  rdx, 0x27
call 0xba60
imul rdx, r12, 0x5ea306d7
lea  r12, [rip+0xf4fa]
xor  eax, eax
mov  rsi, r12
mov  edi, 0x1
shr  rdx, 0x29
call 0xba60
movzx  ecx, WORD PTR [rbx+0xe]
mov  rsi, r14
xor  eax, eax
lea  rdx, [rip+0xf4e3]
mov  edi, 0x1
rol  cx, 0x8
movzx  ecx, cx
mov  DWORD PTR [rsp+0x8], ecx
call 0xba60
mov  ecx, DWORD PTR [rsp+0x8]
mov  rsi, rbp
xor  eax, eax
mov  edi, 0x1
mov  rdx, rcx
mov  QWORD PTR [rsp+0x8], rcx
imul rdx, r15
shr  rdx, 0x27
call 0xba60
mov  rcx, QWORD PTR [rsp+0x8]
mov  rsi, r12
xor  eax, eax
mov  edi, 0x1
imul rdx, rcx, 0x5ea306d7
shr  rdx, 0x29
call 0xba60
movzx  ecx, WORD PTR [rbx+0x12]
mov  rsi, r14
xor  eax, eax
lea  rdx, [rip+0xf490]
mov  edi, 0x1
rol  cx, 0x8
movzx  ecx, cx
mov  DWORD PTR [rsp+0x8], ecx
call 0xba60
mov  ecx, DWORD PTR [rsp+0x8]
mov  rsi, rbp
xor  eax, eax
mov  edi, 0x1
mov  rdx, rcx
mov  QWORD PTR [rsp+0x8], rcx
imul rdx, r15
shr  rdx, 0x27
call 0xba60
mov  rcx, QWORD PTR [rsp+0x8]
mov  rsi, r12
mov  edi, 0x1
imul rdx, rcx, 0x5ea306d7
xor  eax, eax
shr  rdx, 0x29
call 0xba60
cmp  BYTE PTR [rbx+0x1], 0x1b
jbe  0x14bf0
movzx  ecx, WORD PTR [rbx+0x1c]
mov  rsi, r14
lea  rdx, [rip+0xf435]
xor  eax, eax
mov  edi, 0x1
rol  cx, 0x8
movzx  ecx, cx
mov  DWORD PTR [rsp+0x8], ecx
call 0xba60
mov  r14d, DWORD PTR [rsp+0x8]
mov  rdx, r15
mov  rsi, rbp
mov  edi, 0x1
xor  eax, eax
imul rdx, r14
shr  rdx, 0x27
call 0xba60
imul rdx, r14, 0x5ea306d7
shr  rdx, 0x29
xor  eax, eax
mov  rsi, r12
mov  edi, 0x1
call 0xba60
cmp  BYTE PTR [rbx+0x1], 0x1b
ja   0x14c70
movzx  ecx, BYTE PTR [rbx+0xc]
movzx  eax, BYTE PTR [rbx+0xd]
mov  rsi, r13
mov  edi, 0x1
lea  rdx, [rip+0xf3f4]
shl  ecx, 0x8
add  ecx, eax
xor  eax, eax
call 0xba60
cmp  BYTE PTR [rbx+0x1], 0x17
jbe  0x142c7
movzx  ecx, BYTE PTR [rbx+0x16]
movzx  eax, BYTE PTR [rbx+0x17]
mov  rsi, r13
mov  edi, 0x1
lea  rdx, [rip+0xf95f]
shl  ecx, 0x8
add  ecx, eax
xor  eax, eax
call 0xba60
cmp  BYTE PTR [rbx+0x1], 0x1b
jbe  0x142c7
movzx  eax, WORD PTR [rbx+0x1e]
lea  rsi, [rip+0xf966]
mov  edi, 0x1
add  rbx, 0x20
rol  ax, 0x8
movzx  eax, ax
mov  r14d, eax
mov  DWORD PTR [rsp], eax
mov  edx, eax
xor  eax, eax
call 0xba60
test r14d, r14d
je   0x142c7
lea  rax, [rip+0x1ce2f]
xor  r13d, r13d
lea  r15, [rip+0xf37f]
mov  QWORD PTR [rsp+0x8], rax
mov  edx, r13d
mov  rsi, r15
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  ecx, WORD PTR [rbx+0x2]
mov  edi, 0x1
xor  eax, eax
lea  rsi, [rip+0xf2cb]
add  r13d, 0x1
add  rbx, 0x4
rol  cx, 0x8
movzx  r14d, cx
mov  edx, r14d
call 0xba60
movzx  eax, BYTE PTR [rbx-0x3]
mov  rsi, QWORD PTR [rsp+0x8]
mov  edi, 0x1
and  eax, 0x3
mov  rdx, QWORD PTR [rsi+rax*8]
lea  rsi, [rip+0xf336]
xor  eax, eax
call 0xba60
mov  edx, 0xba2e8ba3
mov  rsi, rbp
xor  eax, eax
imul rdx, r14
mov  edi, 0x1
shr  rdx, 0x27
call 0xba60
mov  rsi, r12
mov  edi, 0x1
xor  eax, eax
imul rdx, r14, 0x5ea306d7
shr  rdx, 0x29
call 0xba60
cmp  DWORD PTR [rsp], r13d
jne  0x14b20
jmp  0x142c7
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0xefcc]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x143bb
mov  eax, DWORD PTR [rbp+0x28]
lea  edx, [rax+0x1]
jmp  0x1434f
nop  DWORD PTR [rax+rax*1+0x0]
movzx  ecx, WORD PTR [rbx+0x14]
lea  rdx, [rip+0xf25d]
mov  rsi, r14
xor  eax, eax
mov  edi, 0x1
rol  cx, 0x8
movzx  ecx, cx
mov  DWORD PTR [rsp+0x8], ecx
call 0xba60
mov  ecx, DWORD PTR [rsp+0x8]
mov  rdx, r15
mov  rsi, rbp
mov  edi, 0x1
xor  eax, eax
imul rdx, rcx
mov  QWORD PTR [rsp+0x8], rcx
shr  rdx, 0x27
call 0xba60
mov  rcx, QWORD PTR [rsp+0x8]
imul rdx, rcx, 0x5ea306d7
jmp  0x14a60
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0xef52]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0x143bb
nop  DWORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rbx+0x1b]
lea  rsi, [rip+0x1ccc5]
mov  edi, 0x1
lea  rdx, [rip+0xf1e5]
shr  al, 0x6
and  eax, 0x3
mov  rcx, QWORD PTR [rsi+rax*8]
mov  rsi, QWORD PTR [rsp]
xor  eax, eax
call 0xba60
jmp  0x14a7d
nop  DWORD PTR [rax+0x0]
movzx  ecx, BYTE PTR [rbx+0xa]
movzx  eax, BYTE PTR [rbx+0xb]
lea  r13, [rip+0xf0b7]
lea  rdx, [rip+0xf50a]
mov  rsi, r13
mov  edi, 0x1
lea  r14, [rip+0xf0df]
shl  ecx, 0x8
add  ecx, eax
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x7], 0x1
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf4fa]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x7], 0x2
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf519]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x4], 0x8
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf530]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x4], 0x4
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf537]
mov  edi, 0x1
xor  eax, eax
call 0xba60
mov  QWORD PTR [rsp], r14
test BYTE PTR [rbx+0x4], 0xc
je   0x1478e
test BYTE PTR [rbx+0x11], 0x8
mov  rdx, r15
mov  rsi, rbp
mov  edi, 0x1
cmovne rdx, r12
lea  rcx, [rip+0xeff3]
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x11], 0x4
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf50f]
mov  edi, 0x1
xor  eax, eax
call 0xba60
test BYTE PTR [rbx+0x11], 0x2
mov  rdx, r15
mov  rsi, rbp
cmovne rdx, r12
lea  rcx, [rip+0xf516]
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  eax, BYTE PTR [rbx+0x11]
mov  rsi, r14
lea  rdx, [rip+0x1cbc4]
mov  edi, 0x1
shr  al, 0x4
and  eax, 0x3
mov  rcx, QWORD PTR [rdx+rax*8]
lea  rdx, [rip+0xefa2]
xor  eax, eax
call 0xba60
jmp  0x1478e
endbr64
mov  r8, rdi
sub  rsp, 0x8
mov  rdi, rsi
mov  esi, edx
mov  rax, QWORD PTR [r8+0x48]
lea  rdx, [rip+0xe02a]
mov  r8d, DWORD PTR [rax+0x10]
lea  rcx, [rax+0x58]
call 0x16c30
xor  edx, edx
test eax, eax
cmovs  eax, edx
add  rsp, 0x8
endbr64
push r12
xor  edx, edx
mov  r12d, esi
mov  esi, 0x70
push rbp
mov  rbp, rdi
and  r12d, 0x1
push rbx
mov  rbx, QWORD PTR [rdi+0x48]
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  DWORD PTR [rbx+0xc], 0x2
mov  rdi, rbp
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
and  dx, 0x1f00
mov  BYTE PTR [rbx+0x5c], r12b
shl  eax, 0xd
or   eax, 0x1e
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x13db6]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
pop  rbx
pop  rbp
sar  eax, 0x1f
pop  r12
endbr64
lea  rdi, [rip+0x13915]
endbr64
push r12
push rbp
push rbx
sub  rsp, 0x810
mov  ebx, DWORD PTR [rdi+0xa]
mov  ebp, DWORD PTR [rdi+0x2]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x808], rax
xor  eax, eax
test ebx, ebx
jle  0xd936
mov  r12, rsp
nop
mov  edi, ebp
mov  edx, 0x1
sub  edi, DWORD PTR [rip+0x4a093]
mov  rsi, r12
call 0xe0b0
mov  edx, 0x800
mov  rsi, r12
mov  edi, 0x1
cmp  ebx, edx
cmovbe rdx, rbx
add  ebp, 0x1
sub  ebx, edx
call 0xb720
test ebx, ebx
jg   0xd900
mov  rax, QWORD PTR [rsp+0x808]
sub  rax, QWORD PTR fs:0x28
jne  0xd955
add  rsp, 0x810
pop  rbx
pop  rbp
pop  r12
ret
endbr64
push r12
xor  edx, edx
mov  esi, 0x70
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x20
mov  rbx, QWORD PTR [rdi+0x48]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  r12, rsp
mov  rdi, rbx
call 0x1edc0
movzx  edx, WORD PTR [rbx+0x58]
mov  QWORD PTR [rbx], r12
mov  rdi, rbp
48 b8 12 00 00 00 03 00 00 00 movabs rax, 0x300000012
mov  QWORD PTR [rbx+0x8], rax
and  dx, 0x1f00
48 b8 06 00 00 00 12 00 00 00 movabs rax, 0x1200000006
mov  QWORD PTR [rbx+0x10], rax
movzx  eax, WORD PTR [rbp+0x14]
mov  BYTE PTR [rbx+0x5c], 0x12
shl  eax, 0xd
or   eax, 0x3
or   eax, edx
mov  WORD PTR [rbx+0x58], ax
lea  rax, [rip+0x1414d]
mov  QWORD PTR [rbp+0x50], rax
call 0x17650
test eax, eax
js   0xef10
mov  rdi, rbp
call 0x164f0
mov  esi, 0x12
mov  rdi, r12
sub  esi, eax
call 0x17aa0
xor  eax, eax
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0xef17
add  rsp, 0x20
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, 0xffffffff
jmp  0xeef1
endbr64
lea  rdi, [rip+0x19205]
endbr64
mov  rdx, QWORD PTR [rdi+0x48]
mov  eax, DWORD PTR [rdx+0x24]
test eax, eax
jne  0x17b88
mov  eax, DWORD PTR [rdx+0x28]
test eax, eax
jne  0x17b88
cmp  BYTE PTR [rdx+0x2c], 0x0
jne  0x17b88
cmp  BYTE PTR [rdx+0x2f], 0x0
jne  0x17b88
ret
nop  DWORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rdx+0x2f]
and  eax, 0x7f
cmp  al, 0x6f
jbe  0x17ba0
movzx  eax, BYTE PTR [rdx+0x31]
and  eax, 0xf
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, 0xffffffff
endbr64
lea  rdi, [rip+0x2a765]
endbr64
mov  rax, QWORD PTR [rip+0x39b65]
push rbp
mov  ebp, edi
test rax, rax
je   0x1e8d7
nop  DWORD PTR [rax+rax*1+0x0]
mov  rsi, QWORD PTR [rax+0x10]
mov  edi, ebp
call QWORD PTR [rax+0x8]
mov  rax, QWORD PTR [rip+0x39b48]
mov  rax, QWORD PTR [rax]
mov  QWORD PTR [rip+0x39b3e], rax
test rax, rax
jne  0x1e8b8
mov  edi, ebp
endbr64
push r12
lea  rax, [rdi+0xe]
lea  r12, [rip+0x4b63f]
mov  r8, rdi
lea  r9, [rdi+0x4]
mov  edx, 0x1e
mov  esi, 0x1
lea  rcx, [rip+0x1527f]
sub  rsp, 0x8
push rax
lea  rax, [rdi+0xc]
push rax
lea  rax, [rdi+0xa]
push rax
lea  rax, [rdi+0x8]
push rax
lea  rax, [rdi+0x6]
mov  rdi, r12
push rax
xor  eax, eax
call 0xbc00
add  rsp, 0x30
mov  rax, r12
pop  r12
endbr64
push r15
xor  r15d, r15d
push r14
push r13
push r12
mov  r12d, edi
push rbp
mov  rbp, rsi
push rbx
mov  ebx, edx
sub  rsp, 0x18
call 0x1fff0
mov  DWORD PTR [rsp+0xc], 0x0
test ebx, ebx
jle  0x20b23
mov  r13d, eax
movsxd r14, ebx
mov  rdx, r14
mov  rsi, rbp
mov  edi, r12d
call 0xb720
mov  r15d, eax
test eax, eax
jns  0x20b48
call 0x1fff0
cmp  eax, 0x4
je   0x20b38
add  rsp, 0x18
mov  eax, r15d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
mov  edi, r13d
call 0x20610
jmp  0x20b04
nop  WORD PTR [rax+rax*1+0x0]
test eax, eax
je   0x20b5c
movsxd r8, eax
sub  ebx, eax
add  DWORD PTR [rsp+0xc], eax
add  rbp, r8
test ebx, ebx
jg   0x20b01
mov  r15d, DWORD PTR [rsp+0xc]
endbr64
push rbp
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rip+0x37667]
test rbx, rbx
je   0x21192
lea  rbp, [rip+0xa416]
nop  DWORD PTR [rax]
mov  rcx, QWORD PTR [rbx]
mov  rdi, QWORD PTR [rip+0x35fe6]
mov  rdx, rbp
xor  eax, eax
mov  esi, 0x1
call 0xbb10
mov  rbx, QWORD PTR [rbx+0x18]
test rbx, rbx
jne  0x21170
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
push rbx
xor  edx, edx
mov  rbx, rsi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  rsi, rsp
call 0x1e5c0
mov  rdx, QWORD PTR [rsp]
mov  DWORD PTR [rbx], edx
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0x1e722
add  rsp, 0x10
pop  rbx
ret
endbr64
push r15
mov  r15, rdi
push r14
push r13
push r12
mov  r12, rsi
push rbp
push rbx
mov  rbx, rcx
sub  rsp, 0xa8
mov  DWORD PTR [rsp+0x4], edx
movzx  edx, BYTE PTR [r8]
and  edx, 0x2
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x98], rax
xor  eax, eax
movzx  eax, BYTE PTR [rcx]
mov  ecx, eax
and  ecx, 0x7f
cmp  cl, 0x6f
jbe  0x1a1b0
mov  ebp, r9d
test r9d, r9d
js   0x1a300
movzx  edi, BYTE PTR [rbx+0xd]
movzx  ecx, BYTE PTR [rbx+0xf]
movzx  r11d, BYTE PTR [rbx+0x1]
mov  DWORD PTR [rsp+0x8], edi
movzx  edi, BYTE PTR [rbx+0xe]
shr  cl, 0x7
mov  DWORD PTR [rsp+0x10], edi
movzx  edi, cl
mov  DWORD PTR [rsp+0x38], edi
test dl, dl
jne  0x1a1f0
mov  DWORD PTR [rsp+0x24], 0x0
xor  r14d, r14d
xor  r15d, r15d
lea  r10, [rip+0xea12]
mov  DWORD PTR [rsp+0x20], 0x0
lea  r13, [rip+0xea06]
mov  DWORD PTR [rsp+0x1c], 0x0
mov  DWORD PTR [rsp+0x18], 0x0
mov  DWORD PTR [rsp+0x14], 0x0
and  eax, 0x7f
movsxd rsi, DWORD PTR [rsp+0x4]
push r11
mov  edx, 0x1
cmp  al, 0x71
lea  r9, [rip+0xaca8]
lea  rax, [rip+0xe9d8]
mov  rcx, 0xffffffffffffffff
cmovne rax, r9
lea  r8, [rip+0xb74f]
mov  rdi, r12
push rax
xor  eax, eax
push r10
push r14
call 0xb650
add  rsp, 0x20
lea  r9, [rip+0xac75]
test eax, eax
mov  r10d, eax
jle  0x1a390
movsxd rdi, eax
lea  rdx, [rip+0x9f05]
lea  rcx, [rip+0xe9ba]
add  rdi, r12
mov  r12d, DWORD PTR [rsp+0x4]
sub  r12d, eax
test r15d, r15d
lea  rax, [rip+0xe98c]
cmove  rax, r9
cmp  BYTE PTR [r13+0x0], 0x0
je   0x1a1e0
mov  r11d, DWORD PTR [rsp+0x10]
mov  DWORD PTR [rsp+0x28], r10d
movsxd rsi, r12d
mov  r9d, ebp
lea  r8, [rip+0xb706]
push r11
push rax
push rdx
mov  edx, 0x1
push r13
push rcx
mov  eax, DWORD PTR [rsp+0x30]
mov  rcx, 0xffffffffffffffff
push rax
xor  eax, eax
mov  QWORD PTR [rsp+0x38], rdi
call 0xb650
add  rsp, 0x30
mov  rdi, QWORD PTR [rsp+0x8]
mov  r10d, DWORD PTR [rsp+0x28]
test eax, eax
jle  0x1a3a0
mov  edx, DWORD PTR [rsp+0x24]
mov  ecx, DWORD PTR [rsp+0x20]
movsxd rbp, eax
sub  r12d, eax
mov  esi, DWORD PTR [rsp+0x1c]
lea  rax, [rip+0xabcb]
add  rbp, rdi
lea  rdi, [rip+0xe924]
test edx, edx
mov  r8d, DWORD PTR [rsp+0x18]
lea  rdx, [rip+0xe93b]
cmove  rdi, rax
test ecx, ecx
lea  rcx, [rip+0xe91f]
cmove  rcx, rax
test esi, esi
cmove  rdx, rax
lea  rsi, [rip+0xe93a]
test r8d, r8d
push rdi
lea  rax, [rip+0xe926]
push rcx
lea  r8, [rip+0xe950]
mov  rdi, rbp
cmove  rax, rsi
push rdx
movsxd rsi, r12d
mov  rcx, 0xffffffffffffffff
mov  edx, 0x1
push rax
mov  r9d, DWORD PTR [rsp+0x34]
xor  eax, eax
call 0xb650
add  rsp, 0x20
test eax, eax
jle  0x1a16f
movsxd rdx, eax
sub  r12d, eax
mov  eax, DWORD PTR [rsp+0x38]
add  rbp, rdx
movsxd rsi, r12d
test eax, eax
je   0x1a3b0
cmp  r14d, 0x4
jg   0x1a310
cmp  r14d, 0x2
jg   0x1a430
cmp  r14d, 0x1
je   0x1a430
cmp  r14d, 0x2
jne  0x1a14d
movzx  r9d, WORD PTR [rbx+0x10]
xor  eax, eax
mov  edx, 0x1
mov  rdi, rbp
lea  r8, [rip+0xe901]
mov  rcx, 0xffffffffffffffff
rol  r9w, 0x8
movzx  r9d, r9w
imul r9d, r9d, 0x64
shr  r9d, 0x10
call 0xb650
test eax, eax
js   0x1a16f
movsxd rdx, eax
sub  r12d, eax
add  rbp, rdx
movsxd rsi, r12d
lea  rdx, [rip+0xaacb]
mov  rdi, rbp
xor  eax, eax
call 0xb800
mov  r10d, DWORD PTR [rsp+0x4]
mov  edx, r12d
sub  edx, eax
sub  r10d, edx
test eax, eax
jg   0x1a17b
mov  BYTE PTR [rbp+0x0], 0x0
mov  r10d, DWORD PTR [rsp+0x4]
sub  r10d, r12d
mov  rax, QWORD PTR [rsp+0x98]
sub  rax, QWORD PTR fs:0x28
jne  0x1a468
add  rsp, 0xa8
mov  eax, r10d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
movzx  ebp, cl
test dl, dl
jne  0x1a2a0
mov  DWORD PTR [rsp+0x38], 0x0
xor  r11d, r11d
mov  DWORD PTR [rsp+0x10], 0x0
mov  DWORD PTR [rsp+0x8], 0x0
jmp  0x19f24
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, r9
mov  rcx, r9
jmp  0x19feb
nop  DWORD PTR [rax+rax*1+0x0]
movzx  edx, BYTE PTR [rbx+0x2]
lea  rcx, [rip+0x177c5]
mov  rsi, rdx
mov  r14d, edx
and  esi, 0xf
and  r14d, 0xf
mov  r10, QWORD PTR [rcx+rsi*8]
mov  ecx, DWORD PTR [rbx+0x3]
bswap  ecx
mov  DWORD PTR [rsp+0x14], ecx
mov  ecx, edx
shr  cl, 0x7
movzx  esi, cl
mov  ecx, edx
shr  dl, 0x5
shr  cl, 0x6
mov  DWORD PTR [rsp+0x1c], esi
mov  edi, ecx
and  edi, 0x1
mov  DWORD PTR [rsp+0x20], edi
mov  edi, edx
and  edi, 0x1
mov  DWORD PTR [rsp+0x24], edi
shr  al, 0x7
mov  rcx, QWORD PTR [r15+0x88]
mov  edi, DWORD PTR [r15+0x40]
mov  esi, ebp
mov  edx, DWORD PTR [rsp+0x8]
lea  r8, [rsp+0x40]
movzx  eax, al
mov  r9d, 0x50
mov  DWORD PTR [rsp+0x3c], r11d
mov  QWORD PTR [rsp+0x30], r10
mov  QWORD PTR [rsp+0x28], r8
mov  DWORD PTR [rsp+0x18], eax
call 0x19d30
mov  r8, QWORD PTR [rsp+0x28]
mov  r10, QWORD PTR [rsp+0x30]
test rax, rax
mov  r11d, DWORD PTR [rsp+0x3c]
mov  r13, rax
je   0x1a3f0
movzx  eax, BYTE PTR [rbx]
xor  r15d, r15d
jmp  0x19f60
nop  DWORD PTR [rax+rax*1+0x0]
movzx  edx, BYTE PTR [rbx+0x1]
movzx  ecx, BYTE PTR [rbx+0x2]
mov  DWORD PTR [rsp+0x38], 0x0
xor  r11d, r11d
mov  DWORD PTR [rsp+0x10], 0x0
mov  r14d, 0xffffffff
lea  r10, [rip+0xe683]
shl  ecx, 0x8
shl  edx, 0x10
mov  DWORD PTR [rsp+0x8], 0x0
or   edx, ecx
movzx  ecx, BYTE PTR [rbx+0x3]
mov  DWORD PTR [rsp+0x24], 0x0
mov  DWORD PTR [rsp+0x20], 0x0
or   edx, ecx
mov  DWORD PTR [rsp+0x1c], 0x0
mov  DWORD PTR [rsp+0x14], edx
jmp  0x1a23b
nop
movzx  ebp, BYTE PTR [rbx+0xc]
jmp  0x19ef9
nop  DWORD PTR [rax+0x0]
cmp  r14d, 0x5
jne  0x1a14d
movzx  ecx, BYTE PTR [rbx+0xf]
movzx  eax, WORD PTR [rbx+0x10]
lea  rdi, [rip+0xe6b1]
lea  rdx, [rip+0xe6a2]
lea  r9, [rip+0xe6af]
lea  r8, [rip+0xb402]
rol  ax, 0x8
test cl, 0x8
cmove  rdx, rdi
mov  edi, ecx
movzx  eax, ax
and  edi, 0x7
and  ecx, 0x40
lea  rcx, [rip+0x99ff]
cmove  r9, rcx
sub  rsp, 0x8
mov  rcx, 0xffffffffffffffff
push rax
xor  eax, eax
push rdx
mov  edx, 0x1
push rdi
mov  rdi, rbp
call 0xb650
add  rsp, 0x20
test eax, eax
jg   0x1a141
jmp  0x1a16f
nop  DWORD PTR [rax]
mov  BYTE PTR [r12], 0x0
xor  r10d, r10d
jmp  0x1a17b
nop  DWORD PTR [rax]
mov  BYTE PTR [rdi], 0x0
jmp  0x1a17b
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xa868]
mov  rdi, rbp
xor  eax, eax
call 0xb800
mov  ebx, DWORD PTR [rsp+0x4]
mov  edx, r12d
sub  edx, eax
mov  r10d, ebx
sub  r10d, edx
test eax, eax
jg   0x1a17b
sub  ebx, r12d
mov  BYTE PTR [rbp+0x0], 0x0
mov  r10d, ebx
jmp  0x1a17b
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, QWORD PTR [r15+0x88]
mov  edi, DWORD PTR [r15+0x40]
xor  edx, edx
mov  esi, ebp
mov  r9d, 0x50
mov  DWORD PTR [rsp+0x30], r11d
mov  r15d, 0x1
mov  QWORD PTR [rsp+0x28], r10
call 0x19d30
mov  r10, QWORD PTR [rsp+0x28]
mov  r11d, DWORD PTR [rsp+0x30]
mov  r13, rax
movzx  eax, BYTE PTR [rbx]
jmp  0x19f60
nop
movzx  r9d, WORD PTR [rbx+0x10]
xor  eax, eax
mov  edx, 0x1
mov  rdi, rbp
lea  r8, [rip+0xe5c5]
mov  rcx, 0xffffffffffffffff
rol  r9w, 0x8
movzx  r9d, r9w
call 0xb650
test eax, eax
jg   0x1a141
jmp  0x1a16f
endbr64
push rbp
mov  rbp, rdi
call 0xb980
cmp  DWORD PTR [rip+0x12bf5], eax
jle  0x208b8
cdqe
lea  rdx, [rax+rax*2]
mov  rax, QWORD PTR [rip+0x12bee]
lea  rax, [rax+rdx*8]
mov  rdx, QWORD PTR [rax]
test rdx, rdx
je   0x208b0
cmp  rdx, rbp
jne  0x2089d
jmp  0x208b0
nop  DWORD PTR [rax]
cmp  QWORD PTR [rax], rbp
je   0x208b0
mov  rax, QWORD PTR [rax+0x8]
test rax, rax
jne  0x20898
xor  eax, eax
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rax+0x10]
pop  rbp
ret
nop  DWORD PTR [rax]
mov  rdi, rbp
pop  rbp
endbr64
lea  rdi, [rip+0x14a45]
endbr64
push r15
push r14
push r13
mov  r13, rsi
push r12
lea  r12, [rip+0xdd83]
push rbp
mov  rbp, rdi
push rbx
mov  ebx, edx
sub  rsp, 0x58
mov  r15, QWORD PTR [rdi+0x48]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x48], rax
xor  eax, eax
mov  r9d, DWORD PTR [r15+0x24]
cmp  r9d, 0x2
je   0x170f2
jg   0x171c8
lea  r12, [rip+0xdd34]
test r9d, r9d
je   0x170f2
cmp  r9d, 0x1
jne  0x17240
lea  r12, [rip+0xdd27]
mov  r14, QWORD PTR [rbp+0x50]
test r14, r14
je   0x17230
cmp  BYTE PTR [r14], 0x0
lea  rax, [rip+0xdfde]
cmove  r14, rax
mov  edi, DWORD PTR [r15+0x28]
call 0xbb70
sub  rsp, 0x8
mov  r9d, DWORD PTR [r15+0x28]
movsxd rsi, ebx
push r12
lea  r8, [rip+0xe00d]
mov  edx, 0x1
mov  rdi, r13
push r14
mov  rcx, 0xffffffffffffffff
push rax
xor  eax, eax
call 0xb650
add  rsp, 0x20
cmp  ebx, eax
jle  0x171a0
test eax, eax
js   0x171a0
sub  ebx, eax
movsxd r14, eax
mov  rax, QWORD PTR [rbp+0x48]
lea  rdx, [rip+0xdbf5]
add  r14, r13
mov  esi, ebx
mov  r8d, DWORD PTR [rax+0x10]
lea  rcx, [rax+0x58]
mov  rdi, r14
call 0x16c30
xor  edx, edx
test eax, eax
cmovs  eax, edx
movsxd r12, eax
sub  ebx, eax
add  r12, r14
cmp  DWORD PTR [r15+0x24], 0x1
jle  0x172d0
test BYTE PTR [r15+0x2c], 0x2
jne  0x17270
mov  eax, r12d
sub  eax, r13d
mov  rdx, QWORD PTR [rsp+0x48]
sub  rdx, QWORD PTR fs:0x28
jne  0x172f2
add  rsp, 0x58
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
cmp  r9d, 0x3
jne  0x17240
mov  rsi, QWORD PTR [rdi+0x80]
mov  eax, DWORD PTR [r15+0x18]
mov  r12, rsp
48 ba cf f7 53 e3 a5 9b c4 20 movabs rdx, 0x20c49ba5e353f7cf
lea  r8, [rip+0xdf23]
mov  rdi, r12
mov  rcx, QWORD PTR [rsi+0x8]
push rax
mov  rax, rcx
sar  rcx, 0x3f
imul rdx
xor  eax, eax
sar  rdx, 0x7
sub  rdx, rcx
mov  ecx, 0x40
push rdx
mov  r9, QWORD PTR [rsi]
mov  edx, 0x1
mov  esi, 0x40
call 0xb650
mov  r14, QWORD PTR [rbp+0x50]
mov  rsp, r12
test r14, r14
jne  0x170ff
lea  r14, [rip+0xdeb1]
jmp  0x1710e
nop  DWORD PTR [rax+0x0]
mov  r12, rsp
mov  ecx, 0x40
mov  edx, 0x1
xor  eax, eax
lea  r8, [rip+0xdbdf]
mov  esi, 0x40
mov  rdi, r12
call 0xb650
jmp  0x170f2
nop  DWORD PTR [rax+rax*1+0x0]
lea  r14, [r15+0x2f]
mov  r8d, DWORD PTR [r15+0x50]
mov  esi, ebx
mov  rdi, r12
mov  rcx, r14
lea  rdx, [rip+0xdbb8]
call 0x16c30
test eax, eax
js   0x171a0
movsxd rdx, eax
sub  ebx, eax
mov  r9d, 0xffffffff
mov  rcx, r14
add  r12, rdx
lea  r8, [r15+0x2c]
mov  edx, ebx
mov  rdi, rbp
mov  rsi, r12
call 0x19ea0
test eax, eax
js   0x171a0
cdqe
add  r12, rax
jmp  0x1719a
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, ebx
mov  rsi, r12
mov  rdi, rbp
call 0x16830
test eax, eax
js   0x171a0
movsxd rdx, eax
sub  ebx, eax
add  r12, rdx
jmp  0x1718f
endbr64
mov  r8, rdi
mov  edi, edx
movzx  eax, BYTE PTR [r8]
cmp  al, 0x20
jne  0x1e5e5
nop  DWORD PTR [rax+0x0]
movzx  eax, BYTE PTR [r8+0x1]
add  r8, 0x1
cmp  al, 0x20
je   0x1e5d8
cmp  al, 0x9
je   0x1e5d8
cmp  al, 0x2b
je   0x1e690
xor  r9d, r9d
cmp  al, 0x2d
je   0x1e680
movsx  edx, BYTE PTR [r8]
test edi, edi
jne  0x1e612
mov  edi, 0xa
cmp  dl, 0x30
je   0x1e6a0
xor  ecx, ecx
movsxd r10, edi
test dl, dl
jne  0x1e63d
jmp  0x1e667
nop  DWORD PTR [rax]
movsx  eax, al
cmp  eax, edi
jge  0x1e667
imul rcx, r10
movsx  edx, BYTE PTR [r8+0x1]
cdqe
add  r8, 0x1
add  rcx, rax
test dl, dl
je   0x1e667
lea  eax, [rdx-0x30]
cmp  al, 0x9
jbe  0x1e620
mov  eax, edx
lea  r11d, [rdx-0x41]
and  eax, 0xffffffdf
sub  eax, 0x41
cmp  al, 0x5
ja   0x1e667
lea  eax, [rdx-0x57]
cmp  r11b, 0x19
ja   0x1e623
sub  edx, 0x37
movsx  eax, dl
cmp  eax, edi
jl   0x1e627
mov  rax, rcx
neg  rax
test r9d, r9d
cmovne rcx, rax
mov  rax, r8
mov  QWORD PTR [rsi], rcx
ret
nop  DWORD PTR [rax+rax*1+0x0]
add  r8, 0x1
mov  r9d, 0x1
jmp  0x1e5fc
nop
add  r8, 0x1
xor  r9d, r9d
jmp  0x1e5fc
nop  DWORD PTR [rax+0x0]
movsx  edx, BYTE PTR [r8+0x1]
mov  eax, edx
and  eax, 0xffffffdf
cmp  al, 0x58
je   0x1e6bc
add  r8, 0x1
mov  edi, 0x8
jmp  0x1e612
movsx  edx, BYTE PTR [r8+0x2]
mov  edi, 0x10
add  r8, 0x2
endbr64
xor  edx, edx
endbr64
mov  rax, QWORD PTR [rip+0x37f2d]
endbr64
lea  rdi, [rip+0x15a75]
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x848
lea  r15, [rip+0x167a8]
mov  ebp, edi
mov  rbx, rsi
lea  r14, [rsp+0x10]
mov  r12, rsp
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1838], rax
xor  eax, eax
sub  ebp, 0x1
add  rbx, 0x8
mov  QWORD PTR [rsp+0x18], 0x0
mov  QWORD PTR [rsp+0x20], 0x0
mov  DWORD PTR [rsp+0x4], 0x0
mov  QWORD PTR [rsp+0x28], 0x0
mov  DWORD PTR [rsp+0x8], 0x0
mov  DWORD PTR [rsp+0xc], 0x0
call 0x204a0
lea  rax, [rsp+0x28]
mov  DWORD PTR [rsp], ebp
mov  rdx, r15
lea  rcx, [rsp+0x8]
mov  QWORD PTR [rsp+0x10], rbx
mov  rsi, r14
mov  rdi, r12
push rax
mov  r8, rcx
lea  rax, [rsp+0xc]
push rax
lea  rax, [rip+0x4bccd]
push rax
lea  rax, [rip+0x4c6b9]
push rax
lea  rax, [rip+0x4c6b5]
push rax
lea  rax, [rip+0x4c695]
push rax
lea  rax, [rip+0x4c6a9]
push rax
lea  rax, [rip+0x4c6a9]
push rax
lea  rax, [rip+0x4c69d]
push rax
lea  r13, [rsp+0x68]
push r13
lea  rax, [rsp+0x68]
push rax
lea  rax, [rip+0x4c678]
push rax
lea  rax, [rip+0x4c66c]
push rax
lea  rax, [rip+0x4c660]
push rax
xor  eax, eax
lea  r9, [rsp+0x7c]
call 0x1fee0
mov  rsp, r12
test eax, eax
js   0xcb0b
mov  r11d, DWORD PTR [rsp+0x8]
test r11d, r11d
jne  0xcb42
mov  r10d, DWORD PTR [rsp+0xc]
lea  rcx, [rip+0x16b10]
lea  rdx, [rip+0x16b0f]
lea  rsi, [rip+0x16b0f]
test r10d, r10d
jne  0xbfc7
mov  rdi, r12
mov  rdx, r15
mov  rsi, r14
mov  DWORD PTR [rsp], ebp
mov  QWORD PTR [rsp+0x10], rbx
call 0x1ffd0
mov  r12d, eax
test eax, eax
jne  0xcb49
call 0x21210
mov  rdi, QWORD PTR [rsp+0x28]
call 0x214b0
mov  rbp, QWORD PTR [rsp+0x28]
test rbp, rbp
je   0xc9f8
lea  rsi, [rip+0x16af0]
mov  rdi, rbp
call 0xb8d0
test eax, eax
jne  0xc776
call 0x21200
mov  QWORD PTR [rip+0x4b3b6], rax
test rax, rax
je   0xcb5a
mov  rdi, QWORD PTR [rsp+0x18]
mov  rax, QWORD PTR [rsp+0x20]
test rdi, rdi
je   0xc9aa
lea  rsi, [rip+0x1666b]
test rax, rax
jne  0xcaed
lea  rsi, [rip+0x16ac7]
call 0xb930
mov  QWORD PTR [rip+0x4c597], rax
cmp  QWORD PTR [rip+0x4c58f], 0x0
je   0xc9ce
mov  eax, DWORD PTR [rsp+0x4]
lea  r14, [rsp+0x30]
mov  edx, 0x1
mov  rsi, r14
lea  edi, [rax+0x10]
call 0xe0b0
cmp  DWORD PTR [rip+0x4c54d], 0x0
jne  0xc2f4
xor  r13d, r13d
cmp  BYTE PTR [rsp+0x30], 0x1
jne  0xcb2c
lea  rdi, [rsp+0x31]
mov  edx, 0x5
lea  rsi, [rip+0x16a84]
call 0xb6c0
test eax, eax
jne  0xcb2c
cmp  BYTE PTR [rsp+0x36], 0x1
jne  0xcb2c
mov  eax, DWORD PTR [rip+0x4c51e]
or   eax, DWORD PTR [rip+0x4c504]
jne  0xbfda
mov  eax, DWORD PTR [rip+0x4c4fc]
test eax, eax
je   0xbebb
lea  rdi, [rsp+0xb4]
call 0xcca0
lea  rdi, [rsp+0xbc]
mov  esi, eax
call 0xcca0
mov  edi, eax
call 0xcdc0
lea  rcx, [rsp+0xcc]
lea  rdi, [rcx+0xa]
call 0xcca0
lea  rdi, [rcx+0x2]
mov  edx, eax
call 0xcca0
lea  rdi, [rip+0x1f4dc]
mov  esi, eax
call 0xd960
mov  rbx, QWORD PTR [rip+0x4b294]
test rbx, rbx
je   0xbf0f
nop  DWORD PTR [rax+0x0]
mov  edx, DWORD PTR [rbx+0x14]
mov  esi, DWORD PTR [rbx+0x10]
mov  rdi, QWORD PTR [rbx+0x8]
call 0xd960
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
jne  0xbef8
mov  rdi, QWORD PTR [rip+0x4c492]
test rdi, rdi
je   0xbf20
call 0xb750
mov  rax, QWORD PTR [rsp+0x1838]
sub  rax, QWORD PTR fs:0x28
jne  0xcb86
add  rsp, 0x1848
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
lea  rcx, [rip+0x168b8]
mov  edx, r8d
lea  rsi, [rip+0x16c60]
mov  edi, 0x1
xor  eax, eax
call 0xba60
0f bf 15 53 b2 04 00  movsx  edx, WORD PTR [rip+0x4b253]
lea  rsi, [rip+0x16c62]
xor  eax, eax
mov  edi, 0x1
call 0xba60
0f b6 15 3b b2 04 00  movzx  edx, BYTE PTR [rip+0x4b23b]
lea  rsi, [rip+0x16c61]
xor  eax, eax
mov  edi, 0x1
call 0xba60
0f bf 15 23 b2 04 00  movsx  edx, WORD PTR [rip+0x4b223]
lea  rsi, [rip+0x16c5c]
xor  eax, eax
mov  edi, 0x1
call 0xba60
48 63 15 0b b2 04 00  movsxd rdx, DWORD PTR [rip+0x4b20b]
lea  rsi, [rip+0x16c54]
mov  rcx, rdx
mov  edi, 0x1
xor  eax, eax
call 0xba60
xor  edi, edi
call 0xbae0
lea  rbx, [rsp+0x830]
mov  edx, 0x800
mov  rdi, r14
mov  rsi, rbx
call 0x20010
movzx  eax, BYTE PTR [rsp+0x830]
cmp  al, 0xff
je   0xc0e4
mov  ebp, 0x10
lea  r14, [rip+0x1650a]
jmp  0xc036
mov  edi, DWORD PTR [rsp+0x4]
add  ebp, 0x1
mov  edx, 0x1
mov  rsi, rbx
add  edi, ebp
call 0xe0b0
movzx  eax, BYTE PTR [rsp+0x830]
cmp  al, 0xff
je   0xc0e4
mov  ecx, DWORD PTR [rip+0x4c34c]
test ecx, ecx
je   0xc044
cmp  al, 0x2
je   0xc0a0
cmp  BYTE PTR [rsp+0x888], 0x25
jne  0xc010
cmp  BYTE PTR [rsp+0x889], 0x2f
jne  0xc010
test BYTE PTR [rsp+0x88b], 0xdf
jne  0xc010
movzx  eax, BYTE PTR [rsp+0x88a]
lea  edx, [rax-0x43]
and  dl, 0xfd
je   0xc076
cmp  al, 0x40
jne  0xc010
cmp  DWORD PTR [rip+0x4c323], 0x0
je   0xc0f5
cmp  BYTE PTR [rsp+0x830], 0xff
jne  0xc0f5
lea  rsi, [rip+0x16a78]
or   edi, 0xffffffff
xor  eax, eax
call 0x1eaf0
jmp  0xc0ed
nop  DWORD PTR [rax+0x0]
movsx  ecx, BYTE PTR [rsp+0x888]
sub  rsp, 0x8
mov  rdx, r14
mov  esi, 0x1
movsx  eax, BYTE PTR [rsp+0x893]
mov  rdi, QWORD PTR [rip+0x4b09d]
push rax
xor  eax, eax
movsx  r9d, BYTE PTR [rsp+0x89a]
movsx  r8d, BYTE PTR [rsp+0x899]
call 0xbb10
pop  rax
pop  rdx
jmp  0xc044
cmp  DWORD PTR [rip+0x4c2b5], 0x0
jne  0xc089
movzx  eax, BYTE PTR [rsp+0x88a]
cmp  al, 0x43
je   0xca18
cmp  al, 0x45
je   0xca09
cmp  al, 0x40
je   0xca27
mov  edx, DWORD PTR [rip+0x4c25d]
cmp  edx, 0x3
jle  0xc129
lea  rsi, [rip+0x164a1]
or   edi, 0xffffffff
xor  eax, eax
call 0x1eaf0
cmp  BYTE PTR [rsp+0x88b], 0x20
je   0xca58
cmp  DWORD PTR [rip+0x4c24e], 0x0
je   0xc957
mov  edx, DWORD PTR [rip+0x4c226]
test edx, edx
jle  0xc783
lea  rsi, [rip+0x164cf]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xce]
lea  rbp, [rip+0x4b02c]
mov  edx, 0x1
call 0xcca0
sub  eax, DWORD PTR [rip+0x4b81c]
mov  rsi, rbp
mov  edi, eax
call 0xe0b0
mov  rdi, rbp
call 0xd540
mov  ebx, eax
test eax, eax
je   0xca47
test ah, 0x4
je   0xca36
mov  edx, DWORD PTR [rip+0x4c1c9]
lea  rsi, [rip+0x16492]
mov  edi, 0x1
xor  eax, eax
call 0xba60
and  bh, 0x8
jne  0xca6e
test r13d, r13d
je   0xbfd3
mov  edx, 0x1
mov  rsi, rbp
mov  edi, r12d
call 0xe0b0
lea  rdi, [rip+0x16960]
call 0xb6e0
0f b6 15 a9 af 04 00  movzx  edx, BYTE PTR [rip+0x4afa9]
lea  rsi, [rip+0x16969]
xor  eax, eax
mov  edi, 0x1
call 0xba60
0f b6 15 90 af 04 00  movzx  edx, BYTE PTR [rip+0x4af90]
lea  rcx, [rip+0x165b6]
cmp  dl, 0x1
je   0xc23d
lea  rcx, [rip+0x165ae]
cmp  dl, 0x2
je   0xc23d
test dl, dl
lea  rcx, [rip+0x165a4]
lea  rax, [rip+0x16591]
cmove  rcx, rax
lea  rsi, [rip+0x1692f]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdx, [rip+0x4af4d]
lea  rsi, [rip+0x16927]
xor  eax, eax
mov  edi, 0x1
call 0xba60
0f b6 0d 4e af 04 00  movzx  ecx, BYTE PTR [rip+0x4af4e]
mov  edi, 0x1
xor  eax, eax
0f b6 15 3f af 04 00  movzx  edx, BYTE PTR [rip+0x4af3f]
lea  rsi, [rip+0x1690f]
call 0xba60
lea  rdi, [rip+0x1643e]
call 0xb6e0
0f b6 15 22 af 04 00  movzx  edx, BYTE PTR [rip+0x4af22]
lea  rcx, [rip+0x1653e]
test dl, dl
je   0xc2be
cmp  dl, 0x88
lea  rcx, [rip+0x16534]
lea  rax, [rip+0x16536]
cmovne rcx, rax
lea  rsi, [rip+0x168df]
mov  edi, 0x1
xor  eax, eax
call 0xba60
movzx  r8d, BYTE PTR [rip+0x4aee8]
cmp  r8b, 0x4
ja   0xcaff
lea  rdx, [rip+0x169fe]
movsxd rax, DWORD PTR [rdx+r8*4]
add  rax, rdx
notrack jmp rax
cmp  BYTE PTR [rsp+0x38], 0x1
je   0xc794
cmp  BYTE PTR [rsp+0x30], 0x1
jne  0xcb2c
lea  rdi, [rsp+0x31]
mov  edx, 0x5
lea  rsi, [rip+0x165cd]
call 0xb6c0
mov  r13d, eax
test eax, eax
jne  0xcb2c
cmp  BYTE PTR [rsp+0x36], 0x1
jne  0xcb2c
lea  rdi, [rip+0x165b1]
call 0xb6e0
lea  rsi, [rip+0x165c2]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x38]
mov  esi, 0x20
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4add5]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x1659b]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x58]
mov  esi, 0x20
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ada2]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x16574]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xee]
mov  esi, 0x80
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ad6c]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x1654e]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x16e]
mov  esi, 0x80
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ad36]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x16527]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x1ee]
mov  esi, 0x80
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ad00]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x16504]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x26e]
mov  esi, 0x80
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4acca]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x164df]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x2ee]
mov  esi, 0x25
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ac94]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x164bd]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x313]
mov  esi, 0x25
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ac5e]
mov  edi, 0xa
call 0xb8e0
lea  rsi, [rip+0x1649a]
mov  edi, 0x1
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x338]
mov  esi, 0x25
call 0xccd0
mov  rsi, QWORD PTR [rip+0x4ac28]
mov  edi, 0xa
call 0xb8e0
movzx  edx, WORD PTR [rsp+0xa8]
lea  rsi, [rip+0x16474]
xor  eax, eax
mov  edi, 0x1
call 0xba60
movzx  edx, WORD PTR [rsp+0xac]
lea  rsi, [rip+0x15f7c]
xor  eax, eax
mov  edi, 0x1
call 0xba60
movzx  edx, WORD PTR [rsp+0xb0]
lea  rsi, [rip+0x16456]
xor  eax, eax
mov  edi, 0x1
call 0xba60
lea  rdi, [rsp+0x80]
lea  rsi, [rip+0x16456]
call 0xcca0
mov  edi, 0x1
mov  edx, eax
xor  eax, eax
call 0xba60
cmp  DWORD PTR [rip+0x4bdec], 0x0
jne  0xc7d0
lea  rbx, [rsp+0x830]
mov  edx, 0x800
mov  rdi, r14
mov  rsi, rbx
call 0x20010
movzx  eax, BYTE PTR [rsp+0x830]
cmp  al, 0xff
je   0xbe45
xor  r12d, r12d
mov  ebp, 0x10
49 bf 45 4c 20 54 4f 52 49 54 movabs r15, 0x5449524f54204c45
jmp  0xc622
xchg ax, ax
cmp  BYTE PTR [rsp+0x830], 0x0
je   0xc680
cmp  BYTE PTR [rsp+0x836], 0x2
je   0xc9bd
mov  edi, DWORD PTR [rsp+0x4]
add  ebp, 0x1
mov  edx, 0x1
mov  rsi, rbx
add  edi, ebp
call 0xe0b0
movzx  eax, BYTE PTR [rsp+0x830]
cmp  al, 0xff
je   0xbe48
mov  r9d, DWORD PTR [rip+0x4bd5f]
test r9d, r9d
je   0xc636
cmp  al, 0x2
je   0xc730
cmp  BYTE PTR [rsp+0x888], 0x25
jne  0xc5e0
cmp  BYTE PTR [rsp+0x889], 0x2f
jne  0xc5e0
test BYTE PTR [rsp+0x88b], 0xdf
jne  0xc5e0
movzx  eax, BYTE PTR [rsp+0x88a]
lea  edx, [rax-0x43]
and  dl, 0xfd
je   0xc66c
cmp  al, 0x40
jne  0xc5e0
cmp  BYTE PTR [rsp+0x836], 0x1
jne  0xc5e0
jmp  0xc5fc
nop  DWORD PTR [rax+0x0]
mov  edx, 0x800
lea  rsi, [rsp+0x1030]
mov  rdi, rbx
call 0x20010
mov  rdx, QWORD PTR [rsp+0x1037]
48 b8 4f 20 53 50 45 43 49 46 movabs rax, 0x464943455053204f
xor  rax, QWORD PTR [rsp+0x103f]
xor  rdx, r15
or   rax, rdx
jne  0xc5ee
48 b8 49 43 41 54 49 4f 4e 00 movabs rax, 0x4e4f4954414349
cmp  QWORD PTR [rsp+0x1047], rax
jne  0xc5ee
movzx  r12d, BYTE PTR [rsp+0x1078]
movzx  eax, BYTE PTR [rsp+0x1077]
lea  rsi, [rip+0x15e65]
mov  edi, 0x1
movsx  edx, BYTE PTR [rsp+0x1036]
mov  r13d, 0x1
shl  r12d, 0x8
add  r12d, eax
movzx  eax, BYTE PTR [rsp+0x1079]
shl  eax, 0x10
add  r12d, eax
movzx  eax, BYTE PTR [rsp+0x107a]
shl  eax, 0x18
add  r12d, eax
xor  eax, eax
mov  ecx, r12d
call 0xba60
jmp  0xc5ee
movsx  ecx, BYTE PTR [rsp+0x888]
push rsi
lea  rdx, [rip+0x15dd8]
mov  esi, 0x1
movsx  eax, BYTE PTR [rsp+0x893]
mov  rdi, QWORD PTR [rip+0x4aa0c]
push rax
xor  eax, eax
movsx  r9d, BYTE PTR [rsp+0x89a]
movsx  r8d, BYTE PTR [rsp+0x899]
call 0xbb10
pop  rdi
pop  r8
jmp  0xc636
mov  rdi, rbp
call 0x211a0
jmp  0xbdcb
lea  rdi, [rip+0x16399]
call 0xb6e0
jmp  0xc165
lea  rdi, [rsp+0x39]
mov  edx, 0x5
lea  rsi, [rip+0x1613d]
call 0xb6c0
test eax, eax
jne  0xc2ff
cmp  BYTE PTR [rsp+0x3e], 0x1
jne  0xc2ff
lea  rdi, [rip+0x15cbc]
call 0xb6e0
xor  edi, edi
call 0xbae0
lea  rdi, [rsp+0xce]
lea  rsi, [rip+0x15d11]
call 0xcca0
lea  rdi, [rsp+0xd6]
mov  edx, eax
call 0xcca0
mov  edi, 0x1
mov  ecx, eax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xb4]
lea  rsi, [rip+0x161dc]
call 0xcca0
mov  edi, 0x1
mov  edx, eax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xbc]
lea  rsi, [rip+0x161d6]
call 0xcca0
mov  edi, 0x1
mov  edx, eax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xc0]
lea  rsi, [rip+0x161d0]
call 0xcca0
mov  edi, 0x1
mov  edx, eax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xc4]
lea  rsi, [rip+0x161ca]
call 0xccb0
mov  edi, 0x1
mov  edx, eax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0xc8]
lea  rsi, [rip+0x161c4]
call 0xccb0
mov  edi, 0x1
mov  edx, eax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x35d]
call 0xcd60
lea  rsi, [rip+0x161b9]
mov  edi, 0x1
mov  rdx, rax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x36e]
call 0xcd60
lea  rsi, [rip+0x161ad]
mov  edi, 0x1
mov  rdx, rax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x37f]
call 0xcd60
lea  rsi, [rip+0x161a1]
mov  edi, 0x1
mov  rdx, rax
xor  eax, eax
call 0xba60
lea  rdi, [rsp+0x390]
call 0xcd60
lea  rsi, [rip+0x16195]
mov  edi, 0x1
mov  rdx, rax
xor  eax, eax
call 0xba60
movsx  edx, BYTE PTR [rsp+0x3a1]
lea  rsi, [rip+0x1618e]
xor  eax, eax
mov  edi, 0x1
call 0xba60
jmp  0xc5a2
cmp  DWORD PTR [rip+0x4ba42], 0x0
mov  eax, DWORD PTR [rip+0x4ba2c]
je   0xbe94
lea  rcx, [rsp+0x8cc]
test eax, eax
je   0xbec3
lea  rdi, [rsp+0x8b4]
call 0xcca0
lea  rdi, [rsp+0x8bc]
mov  esi, eax
call 0xcca0
mov  edi, eax
call 0xcdc0
lea  rcx, [rsp+0x8cc]
jmp  0xbec3
test rax, rax
je   0xcabc
mov  QWORD PTR [rsp+0x18], rax
jmp  0xbe11
lea  rdi, [rip+0x15bcc]
call 0xb6e0
jmp  0xbe48
mov  rdi, QWORD PTR [rsp+0x18]
call 0xe210
test eax, eax
jns  0xbe1f
mov  rsi, QWORD PTR [rsp+0x18]
lea  rdi, [rip+0x15ee3]
xor  eax, eax
call 0x1ea20
jmp  0xbe1f
lea  rdi, [rip+0x15e9d]
call 0x211a0
jmp  0xbdcb
mov  DWORD PTR [rip+0x4b95d], 0x3
jmp  0xc129
mov  DWORD PTR [rip+0x4b94e], 0x2
jmp  0xc129
mov  DWORD PTR [rip+0x4b93f], 0x1
jmp  0xc129
lea  rdi, [rip+0x15c33]
call 0xb6e0
jmp  0xc1c2
lea  rdi, [rip+0x160e7]
call 0xb6e0
jmp  0xc1cb
lea  rsi, [rip+0x15b89]
or   edi, 0xffffffff
xor  eax, eax
call 0x1ec90
jmp  0xc137
mov  edx, DWORD PTR [rip+0x4b900]
lea  rsi, [rip+0x15c2d]
mov  edi, 0x1
xor  eax, eax
call 0xba60
jmp  0xc1cb
lea  rcx, [rip+0x15d65]
jmp  0xbf52
lea  rcx, [rip+0x15d77]
jmp  0xbf52
lea  rcx, [rip+0x15d87]
jmp  0xbf52
lea  rcx, [rip+0x15d6d]
jmp  0xbf52
mov  rdi, r13
xor  ecx, ecx
xor  edx, edx
xor  esi, esi
call 0xe3d0
mov  rdi, QWORD PTR [rsp+0x18]
test rdi, rdi
jne  0xbdfe
mov  rax, QWORD PTR [rsp+0x20]
test rax, rax
jne  0xc9b3
lea  rsi, [rip+0x15dc1]
or   edi, 0xffffffff
xor  eax, eax
call 0x1ec90
or   edi, 0xffffffff
call 0xde90
lea  rcx, [rip+0x15d40]
jmp  0xbf52
mov  rax, QWORD PTR [rsp+0x10]
lea  rsi, [rip+0x15d41]
mov  rdx, QWORD PTR [rax]
or   edi, 0xffffffff
xor  eax, eax
call 0x1ec90
or   edi, 0xffffffff
call 0xde90
lea  rdi, [rip+0x1596d]
call 0xb6e0
mov  edi, 0x1
call 0xbae0
xor  edi, edi
call 0xde90
mov  rax, QWORD PTR [rsp+0x10]
lea  rsi, [rip+0x15d33]
mov  rdx, QWORD PTR [rax]
jmp  0xcb1a
mov  rdi, QWORD PTR [rip+0x4a5ff]
mov  rcx, QWORD PTR [rsp+0x28]
mov  esi, 0x1
lea  rdx, [rip+0x158be]
call 0xbb10
call 0x21150
mov  edi, 0x1
call 0xbae0
endbr64
mov  eax, DWORD PTR [rip+0x473e6]
test eax, eax
jne  0x11008
jmp  0x10c30
nop  DWORD PTR [rax+rax*1+0x0]
jmp  0x10ea0
endbr64
push r15
push r14
push r13
push r12
push rbp
mov  ebp, edi
mov  edi, 0x6
push rbx
mov  rbx, rsi
lea  rsi, [rip+0x42fc]
sub  rsp, 0x1c8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1b8], rax
xor  eax, eax
mov  DWORD PTR [rsp+0x14], 0x1
mov  QWORD PTR [rsp+0x18], 0x0
call 0x3e60
lea  rsi, [rip+0x42c6]
lea  rdi, [rip+0x408f]
call 0x3930
mov  rdi, QWORD PTR [rbx]
call 0x3b40
lea  rsi, [rip+0x42bd]
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x3b60
test rax, rax
je   0x4704
mov  edx, 0x5
lea  rsi, [rip+0x48ed]
lea  rdi, [rip+0x4052]
mov  DWORD PTR [rip+0x9038], 0x1
mov  BYTE PTR [rip+0x9041], 0x0
call 0x3c90
mov  QWORD PTR [rip+0x9071], rax
lea  r14, [rip+0x85e2]
lea  r13, [rip+0x4322]
call 0x3e80
mov  QWORD PTR [rsp], 0x0
lea  r12, [rip+0x5857]
mov  QWORD PTR [rip+0x9128], rax
xor  r8d, r8d
mov  rcx, r14
mov  rdx, r13
mov  rsi, rbx
mov  edi, ebp
call 0x3c00
cmp  eax, 0xffffffff
je   0x47d1
sub  eax, 0x64
cmp  eax, 0xb1
ja   0x4090
movsxd rax, DWORD PTR [r12+rax*4]
add  rax, r12
notrack jmp rax
mov  edx, 0x5
lea  rsi, [rip+0x431d]
lea  rdi, [rip+0x3fc9]
call 0x3c90
lea  rcx, [rip+0x5ace]
mov  edx, 0x43a
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3f84]
xor  eax, eax
call 0x3a00
nop  WORD PTR [rax+rax*1+0x0]
xor  ebp, ebp
xor  r15d, r15d
mov  rdi, QWORD PTR [rip+0x910c]
test rdi, rdi
je   0x40a6
call 0x3af0
mov  rdi, QWORD PTR [rip+0x910b]
test rdi, rdi
je   0x40b7
call 0x3a90
mov  rdi, QWORD PTR [rip+0x90da]
test rdi, rdi
je   0x40d6
mov  rax, QWORD PTR [rip+0x90f6]
test rax, rax
je   0x4aaf
call QWORD PTR [rax+0x18]
test rbp, rbp
je   0x40f1
mov  rax, QWORD PTR [rip+0x90de]
test rax, rax
je   0x4af1
mov  rdi, rbp
call QWORD PTR [rax+0x38]
test r15, r15
je   0x4103
call 0x3ef0
mov  rdi, r15
call 0x3b70
mov  rdi, QWORD PTR [rip+0x9056]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x905a]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x8f4e]
call 0x3b20
mov  rdi, QWORD PTR [rsp]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x8f49]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x905d]
test rdi, rdi
je   0x414d
call 0x3d60
mov  rdi, QWORD PTR [rip+0x8ff4]
test rdi, rdi
je   0x415e
call 0x38e0
mov  eax, DWORD PTR [rsp+0x14]
mov  rdx, QWORD PTR [rsp+0x1b8]
sub  rdx, QWORD PTR fs:0x28
jne  0x533f
add  rsp, 0x1c8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rax, QWORD PTR [rip+0x8e3e]
lea  rsi, [rip+0x8e7b]
mov  rdi, QWORD PTR [rax]
call 0x3bd0
test eax, eax
jns  0x4020
mov  edx, 0x5
lea  rsi, [rip+0x545b]
lea  rdi, [rip+0x3e70]
call 0x3c90
lea  rcx, [rip+0x5975]
mov  edx, 0x3e8
mov  r8, rax
jmp  0x4b7c
mov  r15, QWORD PTR [rip+0x8df4]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
mov  DWORD PTR [rip+0x8ea7], eax
test eax, eax
jg   0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x53e0]
lea  rdi, [rip+0x3e1d]
call 0x3c90
lea  rcx, [rip+0x5922]
mov  edx, 0x3ba
mov  r8, rax
mov  r9, rbx
lea  rsi, [rip+0x3dd7]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
xor  r15d, r15d
jmp  0x4095
mov  r15, QWORD PTR [rip+0x8d89]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
mov  DWORD PTR [rip+0x8e4c], eax
test eax, eax
jg   0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x534d]
lea  rdi, [rip+0x3db2]
call 0x3c90
lea  rcx, [rip+0x58b7]
mov  edx, 0x3b3
mov  r8, rax
mov  r9, rbx
jmp  0x4226
call 0x3870
xor  ebp, ebp
xor  r15d, r15d
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  r15, QWORD PTR [rip+0x8d1f]
mov  rdi, QWORD PTR [r15]
test rdi, rdi
je   0x42cc
call 0x3c10
mov  DWORD PTR [rip+0x8d4c], eax
test eax, eax
js   0x4d73
mov  BYTE PTR [rip+0x8d59], 0x0
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8cf1]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x4d32
mov  rdi, QWORD PTR [rip+0x8e4e]
mov  rsi, rax
call 0x3c20
test eax, eax
js   0x4d32
mov  rdi, r15
call 0x3b20
jmp  0x4020
or   DWORD PTR [rip+0x8e67], 0x80000
jmp  0x4020
mov  BYTE PTR [rip+0x8cff], 0x1
jmp  0x4020
mov  r15, QWORD PTR [rip+0x8c97]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
cdqe
mov  QWORD PTR [rip+0x8d3f], rax
test rax, rax
jne  0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x527f]
lea  rdi, [rip+0x3cbc]
call 0x3c90
lea  rcx, [rip+0x57c1]
mov  edx, 0x3ac
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  r15, QWORD PTR [rip+0x8c3d]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
cdqe
mov  QWORD PTR [rip+0x8cf5], rax
test rax, rax
jne  0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x51fd]
lea  rdi, [rip+0x3c62]
call 0x3c90
lea  rcx, [rip+0x5767]
mov  edx, 0x3a5
mov  r8, rax
mov  r9, rbx
jmp  0x4226
or   DWORD PTR [rip+0x8d9b], 0x20
jmp  0x4020
or   DWORD PTR [rip+0x8d8f], 0x10
jmp  0x4020
or   DWORD PTR [rip+0x8d80], 0x100
jmp  0x4020
or   DWORD PTR [rip+0x8d71], 0x80
jmp  0x4020
or   DWORD PTR [rip+0x8d65], 0x40
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8ba1]
lea  rdi, [rip+0x8c8a]
mov  rsi, QWORD PTR [rax]
call 0x3d30
test rax, rax
je   0x507f
mov  BYTE PTR [rip+0x8c12], 0x1
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b76]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
mov  BYTE PTR [rip+0x8bf1], 0x1
mov  BYTE PTR [rip+0x8bb2], al
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b4e]
mov  rdi, QWORD PTR [rax]
call 0x39a0
mov  BYTE PTR [rip+0x8bd0], 0x1
mov  DWORD PTR [rip+0x8b89], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b2d]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
mov  BYTE PTR [rip+0x8ba8], 0x1
mov  DWORD PTR [rip+0x8b65], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b05]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
xor  edx, edx
mov  BYTE PTR [rip+0x8ba5], 0x1
test eax, eax
cmovs  eax, edx
mov  DWORD PTR [rip+0x8b2a], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8ad6]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x5258
mov  rdi, QWORD PTR [rip+0x8c33]
mov  rdx, rax
lea  rsi, [rip+0x3d9d]
call 0x3a40
test eax, eax
jns  0x430a
mov  r10, r15
mov  rbx, r15
mov  edx, 0x5
lea  rsi, [rip+0x3d89]
mov  QWORD PTR [rsp+0x8], r10
lea  rdi, [rip+0x3ae2]
call 0x3c90
mov  r9, rbx
mov  edx, 0x363
lea  rcx, [rip+0x55df]
mov  r8, rax
lea  rsi, [rip+0x3a9c]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
mov  rdi, QWORD PTR [rsp+0x8]
xor  r15d, r15d
call 0x3b20
jmp  0x4095
call 0x3880
mov  edx, 0x5
xor  ebp, ebp
xor  r15d, r15d
lea  rsi, [rip+0x4fe5]
lea  rdi, [rip+0x3a8a]
mov  rbx, rax
call 0x3c90
mov  r8, rbx
mov  edi, 0x1
lea  rcx, [rip+0x3cc9]
mov  rsi, rax
lea  rdx, [rip+0x3cc7]
xor  eax, eax
call 0x3920
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  BYTE PTR [rip+0x8bd2], 0x1
jmp  0x4020
mov  rdi, QWORD PTR [rsp]
call 0x3b20
mov  rax, QWORD PTR [rip+0x89dd]
mov  rdi, QWORD PTR [rax]
call 0x3a80
mov  QWORD PTR [rsp], rax
jmp  0x4020
mov  DWORD PTR [rip+0x8a0e], 0x0
jmp  0x4020
mov  DWORD PTR [rip+0x89ff], 0x1
jmp  0x4020
mov  rax, QWORD PTR [rip+0x89a7]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x526a
mov  rdi, QWORD PTR [rip+0x8b04]
mov  rdx, rax
lea  rsi, [rip+0x3c44]
call 0x3a40
test eax, eax
jns  0x430a
mov  r10, r15
mov  rbx, r15
mov  edx, 0x5
lea  rsi, [rip+0x3c36]
mov  QWORD PTR [rsp+0x8], r10
lea  rdi, [rip+0x39b3]
call 0x3c90
mov  r9, rbx
mov  edx, 0x354
lea  rcx, [rip+0x54b0]
mov  r8, rax
jmp  0x4561
mov  r12, QWORD PTR [rip+0x89cc]
mov  edx, 0x5
xor  ebp, ebp
xor  r15d, r15d
lea  rsi, [rip+0x435b]
lea  rdi, [rip+0x3978]
call 0x3c90
mov  rdx, QWORD PTR [rsp+0x8]
mov  rcx, r12
mov  edi, 0x1
mov  rsi, rax
xor  eax, eax
call 0x3920
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  rdi, QWORD PTR [rip+0x899c]
call 0x3b20
mov  rax, QWORD PTR [rip+0x88e0]
mov  rdi, QWORD PTR [rax]
call 0x3a80
mov  QWORD PTR [rip+0x8981], rax
jmp  0x4020
mov  rdi, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3b63]
call 0x3b60
test rax, rax
je   0x4748
mov  edx, 0x5
lea  rsi, [rip+0x41da]
lea  rdi, [rip+0x38ff]
mov  DWORD PTR [rip+0x88e5], 0x0
mov  BYTE PTR [rip+0x88ee], 0x0
call 0x3c90
jmp  0x3ff0
mov  r14, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3b26]
mov  rdi, r14
call 0x3b60
test rax, rax
je   0x478f
mov  edx, 0x5
lea  rsi, [rip+0x41e3]
lea  rdi, [rip+0x38b8]
mov  DWORD PTR [rip+0x889e], 0x0
mov  BYTE PTR [rip+0x88a7], 0x1
call 0x3c90
jmp  0x3ff0
lea  rsi, [rip+0x3ae8]
mov  rdi, r14
call 0x3b60
test rax, rax
jne  0x4761
mov  edx, 0x5
lea  rsi, [rip+0x4201]
lea  rdi, [rip+0x3876]
mov  DWORD PTR [rip+0x885c], 0x1
mov  BYTE PTR [rip+0x8865], 0x1
call 0x3c90
jmp  0x3ff0
lea  r12, [rip+0x8848]
mov  rdi, r12
call 0x3820
test eax, eax
je   0x4df9
mov  rax, QWORD PTR [rip+0x87c9]
movsxd rax, DWORD PTR [rax]
lea  edx, [rax+0x1]
cmp  edx, ebp
je   0x4da5
xor  r13d, r13d
cmp  eax, ebp
jl   0x4e51
cmp  BYTE PTR [rip+0x881d], 0x0
lea  r14, [rip+0x88aa]
je   0x4b96
cmp  BYTE PTR [rip+0x883d], 0x0
je   0x4c52
mov  rsi, r12
mov  rdi, r14
call 0x3b30
test eax, eax
je   0x4e25
cmp  BYTE PTR [rip+0x87e9], 0x0
jne  0x48ab
cmp  DWORD PTR [rip+0x87d0], 0x1
je   0x4f1b
mov  rdi, QWORD PTR [rip+0x8947]
mov  rsi, r14
call 0x3a50
test eax, eax
js   0x5043
mov  rdi, r12
call 0x3e50
mov  QWORD PTR [rip+0x88e0], rax
call 0x3e80
mov  rdi, QWORD PTR [rip+0x891c]
mov  rsi, rax
mov  rbp, rax
call 0x3a20
mov  rdi, QWORD PTR [rip+0x88b2]
mov  rdx, rbp
mov  esi, 0x1
call 0x3ee0
mov  rdi, rbp
call 0x38e0
cmp  BYTE PTR [rip+0x88fe], 0x0
jne  0x4c68
lea  rbp, [rip+0x39d3]
mov  rdi, QWORD PTR [rip+0x8882]
mov  rsi, rbp
call 0x38b0
test eax, eax
je   0x4cfd
lea  r14, [rip+0x39df]
mov  rdi, QWORD PTR [rip+0x8864]
mov  rsi, r14
call 0x38b0
test eax, eax
je   0x4b23
cmp  BYTE PTR [rip+0x8731], 0x0
je   0x490a
cmp  DWORD PTR [rip+0x8718], 0x1
je   0x5027
call 0x38f0
mov  r15, rax
test rax, rax
je   0x4ec2
mov  rdi, rax
call 0x3ab0
mov  rdi, rax
mov  QWORD PTR [rip+0x8893], rax
call 0x3bb0
test eax, eax
jne  0x510f
lea  rbp, [rip+0xe9f]
xor  edx, edx
mov  edi, 0x2
mov  rsi, rbp
call 0x3f00
xor  edx, edx
mov  rsi, rbp
mov  edi, 0xf
call 0x3f00
xor  edx, edx
mov  edi, 0xa
lea  rsi, [rip+0x3083]
call 0x3f00
call 0x3be0
cmp  BYTE PTR [rip+0x86ae], 0x0
je   0x49cf
cmp  DWORD PTR [rip+0x8695], 0x1
lea  rdx, [rip+0x2c02]
lea  rcx, [rip+0x281b]
mov  rax, QWORD PTR [rip+0x8824]
cmovne rcx, rdx
setne  dl
lea  r8, [rsp+0x18]
setne  sil
movzx  edx, dl
movzx  esi, sil
mov  rdi, rax
add  edx, 0x1
call QWORD PTR [rax+0x8]
mov  QWORD PTR [rip+0x87d5], rax
mov  rbp, rax
test rax, rax
je   0x5162
mov  rdx, QWORD PTR [rip+0x8772]
mov  rdi, QWORD PTR [rip+0x87e3]
xor  esi, esi
call 0x3cf0
mov  QWORD PTR [rip+0x87cd], rax
mov  rbp, rax
test rax, rax
je   0x4feb
xor  edx, edx
lea  rsi, [rip+0x21c0]
mov  rdi, rax
call 0x3d40
mov  rsi, QWORD PTR [rsp]
xor  ecx, ecx
xor  edx, edx
mov  rdi, QWORD PTR [rip+0x87a1]
call 0x39d0
test eax, eax
js   0x50cd
cmp  BYTE PTR [rip+0x8785], 0x0
je   0x4e7d
call 0x3d50
mov  rdi, QWORD PTR [rip+0x877b]
xor  ecx, ecx
lea  rdx, [rip+0x2fea]
lea  rsi, [rax+0xc350]
call 0x3e30
mov  rbp, rax
test rax, rax
je   0x5303
lea  rsi, [rsp+0x14]
mov  rdi, r15
call 0x3c30
test eax, eax
jns  0x4095
mov  edx, 0x5
lea  rsi, [rip+0x3986]
lea  rdi, [rip+0x35a6]
call 0x3c90
lea  rcx, [rip+0x50ab]
mov  edx, 0x4c7
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3561]
xor  eax, eax
call 0x3a00
jmp  0x4095
lea  rax, [rip+0x5082]
lea  rsi, [rip+0x3547]
push rdx
mov  edx, 0x4d3
push rax
lea  r9, [rip+0x371b]
lea  r8, [rip+0x3a4e]
push 0x4d3
lea  rcx, [rip+0x505f]
push rsi
xor  edi, edi
xor  eax, eax
call 0x3a00
add  rsp, 0x20
call 0x38c0
lea  rsi, [rip+0x350c]
push rax
lea  rax, [rip+0x5038]
mov  edx, 0x4d8
push rax
lea  r9, [rip+0x36d9]
lea  r8, [rip+0x3a0c]
push 0x4d8
lea  rcx, [rip+0x501d]
push rsi
jmp  0x4adf
mov  rdi, QWORD PTR [rip+0x861e]
test r13, r13
je   0x4f2f
mov  rdx, r13
mov  rsi, r14
call 0x3a40
mov  rdi, QWORD PTR [rip+0x8603]
mov  rsi, r14
call 0x38b0
test eax, eax
jne  0x48f4
mov  edx, 0x5
lea  rsi, [rip+0x3846]
lea  rdi, [rip+0x34c4]
call 0x3c90
lea  rcx, [rip+0x4fc9]
mov  edx, 0x48a
mov  r8, rax
lea  rsi, [rip+0x3481]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
xor  r15d, r15d
jmp  0x4095
lea  r14, [rsp+0x20]
xor  eax, eax
mov  ecx, 0x8
mov  esi, 0x10
mov  rdi, r14
rep stos DWORD PTR es:[rdi], eax
mov  eax, DWORD PTR [rip+0x846a]
test eax, eax
je   0x4f4f
xor  edi, edi
test eax, eax
mov  rdx, r14
sete dil
xor  ecx, ecx
call 0x39c0
mov  QWORD PTR [rip+0x85cd], rax
test rax, rax
je   0x4050
cmp  DWORD PTR [rip+0x8439], 0x1
lea  r14, [rip+0x84d6]
jne  0x481c
cmp  BYTE PTR [rip+0x846a], 0x0
jne  0x521c
mov  rdi, QWORD PTR [rip+0x859c]
mov  rsi, r12
call 0x3970
test eax, eax
js   0x52c7
cmp  BYTE PTR [rip+0x8445], 0x0
mov  BYTE PTR [rip+0x843f], 0x1
lea  r14, [rip+0x8497]
jne  0x481c
mov  rdi, QWORD PTR [rip+0x856a]
mov  rsi, r14
call 0x3f20
test eax, eax
js   0x5344
mov  BYTE PTR [rip+0x8413], 0x1
jmp  0x481c
0f b6 35 cf 83 00 00  movzx  esi, BYTE PTR [rip+0x83cf]
xor  edx, edx
mov  rdi, r14
call 0x3d70
jmp  0x4829
lea  rdi, [rsp+0x60]
mov  rdx, r14
mov  esi, 0x150
call 0x3ca0
mov  rdx, r12
lea  rdi, [rsp+0x40]
mov  esi, 0x20
mov  rbx, rax
call 0x3d10
cmp  DWORD PTR [rip+0x8386], 0x0
mov  edx, 0x5
mov  rbp, rax
jne  0x4f00
lea  rsi, [rip+0x36e9]
lea  rdi, [rip+0x337a]
call 0x3c90
mov  r14, rax
mov  edx, 0x5
lea  rsi, [rip+0x4aea]
lea  rdi, [rip+0x335f]
call 0x3c90
push rbx
lea  rsi, [rip+0x332a]
xor  edi, edi
push rbp
mov  r8, rax
mov  r9, r14
lea  rcx, [rip+0x4e53]
mov  edx, 0x471
xor  eax, eax
call 0x3a00
pop  rsi
pop  rdi
jmp  0x48b8
mov  rdi, QWORD PTR [rsp+0x8]
call 0x3c60
mov  r14, rax
test rax, rax
je   0x48d6
mov  rdi, QWORD PTR [rip+0x842e]
mov  rdx, rax
mov  rsi, rbp
call 0x3a40
mov  rdi, r14
call 0x3b20
jmp  0x48d6
mov  rdi, r15
call 0x3b20
mov  rax, QWORD PTR [rip+0x828f]
mov  edx, 0x5
lea  rsi, [rip+0x35ac]
lea  rdi, [rip+0x32d8]
mov  rbx, QWORD PTR [rax]
call 0x3c90
lea  rcx, [rip+0x4dda]
mov  edx, 0x3c6
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x358d]
lea  rdi, [rip+0x32a3]
call 0x3c90
lea  rcx, [rip+0x4da8]
mov  edx, 0x3d9
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  r13, QWORD PTR [rbx+rax*8]
xor  esi, esi
mov  eax, 0x241
mov  edx, 0x1b6
cmp  DWORD PTR [rip+0x8260], 0x1
cmovne esi, eax
mov  rdi, r13
call 0x3cd0
mov  ebp, eax
test eax, eax
js   0x4e84
xor  esi, esi
cmp  DWORD PTR [rip+0x8242], 0x1
mov  edi, eax
setne  sil
call 0x3810
test eax, eax
js   0x4fad
mov  edi, ebp
call 0x3c50
jmp  0x4808
mov  edx, 0x5
lea  rsi, [rip+0x352d]
lea  rdi, [rip+0x3220]
call 0x3c90
lea  rcx, [rip+0x4d25]
mov  edx, 0x3f3
mov  r8, rax
jmp  0x4b7c
mov  edx, 0x5
lea  rsi, [rip+0x491f]
lea  rdi, [rip+0x31f4]
call 0x3c90
lea  rcx, [rip+0x4cf9]
mov  edx, 0x457
mov  r8, rax
jmp  0x4b7c
mov  edx, 0x5
lea  rsi, [rip+0x3508]
lea  rdi, [rip+0x31c8]
call 0x3c90
lea  rcx, [rip+0x4ccd]
mov  edx, 0x409
mov  r8, rax
jmp  0x4b7c
xor  ebp, ebp
jmp  0x4a5e
call 0x3c70
mov  edi, DWORD PTR [rax]
call 0x3b50
mov  edx, 0x5
lea  rsi, [rip+0x34b3]
lea  rdi, [rip+0x3189]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x3fd
lea  rcx, [rip+0x4c83]
mov  r8, rax
jmp  0x4226
mov  edx, 0x5
lea  rsi, [rip+0x34f3]
lea  rdi, [rip+0x3157]
xor  ebp, ebp
call 0x3c90
lea  rcx, [rip+0x4c5a]
mov  edx, 0x494
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3110]
xor  eax, eax
call 0x3a00
jmp  0x4095
lea  rsi, [rip+0x3497]
lea  rdi, [rip+0x311e]
call 0x3c90
mov  r14, rax
jmp  0x4cba
mov  rdi, r12
call 0x3ed0
mov  QWORD PTR [rip+0x8266], rax
jmp  0x4878
mov  rsi, rbp
call 0x3df0
mov  r13, rax
test rax, rax
je   0x4b3e
mov  rdi, QWORD PTR [rip+0x81fe]
jmp  0x4b33
mov  rsi, r12
mov  rdi, r14
call 0x3d20
test eax, eax
js   0x528b
cmp  DWORD PTR [rip+0x80a7], 0x0
jle  0x519e
mov  edx, DWORD PTR [rip+0x809b]
mov  eax, DWORD PTR [rsp+0x30]
or   eax, edx
cmp  edx, 0x200000
je   0x5144
cmp  edx, 0x170000
je   0x5144
mov  DWORD PTR [rsp+0x30], eax
mov  eax, DWORD PTR [rip+0x807f]
cmp  eax, 0x1
sbb  esi, esi
and  esi, 0x10
add  esi, 0x10
jmp  0x4bba
call 0x3c70
mov  edi, DWORD PTR [rax]
call 0x3b50
mov  edx, 0x5
lea  rsi, [rip+0x3395]
lea  rdi, [rip+0x3060]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x402
lea  rcx, [rip+0x4b5a]
mov  r8, rax
jmp  0x4226
mov  edx, 0x5
lea  rsi, [rip+0x33f5]
lea  rdi, [rip+0x302e]
call 0x3c90
lea  rcx, [rip+0x4b33]
mov  edx, 0x4b2
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2fe9]
xor  eax, eax
call 0x3a00
jmp  0x4095
mov  rdi, r12
call 0x3a70
mov  rdi, rax
call 0x37d0
mov  QWORD PTR [rip+0x8032], rax
jmp  0x490a
mov  edx, 0x5
lea  rsi, [rip+0x4731]
lea  rdi, [rip+0x2fd6]
call 0x3c90
lea  rcx, [rip+0x4adb]
mov  edx, 0x462
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2f91]
xor  eax, eax
call 0x3a00
jmp  0x4869
mov  r15, rax
mov  rax, QWORD PTR [rip+0x7f47]
mov  edx, 0x5
lea  rsi, [rip+0x324b]
lea  rdi, [rip+0x2f90]
mov  rbx, QWORD PTR [rax]
call 0x3c90
lea  rcx, [rip+0x4a92]
mov  edx, 0x388
mov  r8, rax
mov  r9, rbx
lea  rsi, [rip+0x2f47]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
jmp  0x4095
mov  rdi, QWORD PTR [rip+0x80e4]
call 0x3aa0
mov  edi, eax
call 0x3850
mov  edx, 0x5
lea  rsi, [rip+0x473c]
lea  rdi, [rip+0x2f39]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x4ba
lea  rcx, [rip+0x4a33]
mov  r8, rax
jmp  0x50b6
lea  rax, [rip+0x4a22]
lea  rsi, [rip+0x2ee7]
push rcx
mov  edx, 0x49a
push rax
lea  r9, [rip+0x46d5]
lea  r8, [rip+0x33ee]
push 0x49a
lea  rcx, [rip+0x49ff]
push rsi
jmp  0x4adf
mov  ecx, eax
and  eax, 0xcfff0000
and  ecx, 0xcfffffff
or   eax, 0x60
cmp  edx, 0x200000
cmovne eax, ecx
jmp  0x4f93
mov  edx, 0x5
lea  rsi, [rip+0x326d]
lea  rdi, [rip+0x2eb7]
call 0x3c90
lea  rcx, [rip+0x49bc]
mov  edx, 0x4ab
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2e72]
xor  eax, eax
call 0x3a00
jmp  0x4095
test r13, r13
je   0x527c
mov  esi, 0x2e
mov  rdi, r13
call 0x3ae0
test rax, rax
je   0x527c
lea  rdi, [rax+0x1]
call 0x3c10
mov  DWORD PTR [rip+0x7e44], eax
test eax, eax
jle  0x527c
cmp  eax, 0x10000
jne  0x4f6f
0f b6 05 42 7e 00 00  movzx  eax, BYTE PTR [rip+0x7e42]
cmp  al, 0x2
ja   0x5203
cmp  BYTE PTR [rip+0x7e6f], 0x0
je   0x520d
cmp  al, 0x1
je   0x538d
cmp  al, 0x2
je   0x539f
mov  DWORD PTR [rip+0x7e03], 0x130000
mov  eax, DWORD PTR [rip+0x7dfd]
or   DWORD PTR [rsp+0x30], eax
jmp  0x4f97
mov  edx, 0x5
lea  rsi, [rip+0x4458]
lea  rdi, [rip+0x2dfd]
call 0x3c90
lea  rcx, [rip+0x4902]
mov  edx, 0x440
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2db8]
xor  eax, eax
call 0x3a00
jmp  0x4bfd
mov  r10, rax
mov  rax, QWORD PTR [rip+0x7d6e]
mov  rbx, QWORD PTR [rax]
jmp  0x4532
mov  r10, rax
mov  rax, QWORD PTR [rip+0x7d5c]
mov  rbx, QWORD PTR [rax]
jmp  0x4661
mov  DWORD PTR [rip+0x7d8a], 0x10000
jmp  0x51df
mov  edx, 0x5
lea  rsi, [rip+0x43b1]
lea  rdi, [rip+0x2d8e]
call 0x3c90
lea  rcx, [rip+0x4893]
mov  edx, 0x414
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2d49]
xor  eax, eax
call 0x3a00
jmp  0x4090
mov  edx, 0x5
lea  rsi, [rip+0x440d]
lea  rdi, [rip+0x2d52]
call 0x3c90
lea  rcx, [rip+0x4857]
mov  edx, 0x443
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2d0d]
xor  eax, eax
call 0x3a00
jmp  0x4090
mov  edx, 0x5
lea  rsi, [rip+0x4539]
lea  rdi, [rip+0x2d16]
call 0x3c90
lea  rcx, [rip+0x481b]
mov  edx, 0x4c0
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2cd1]
xor  eax, eax
call 0x3a00
jmp  0x4095
call 0x3cb0
cmp  BYTE PTR [rip+0x7cdd], 0x2
jbe  0x481c
mov  edx, 0x5
lea  rsi, [rip+0x43bb]
lea  rdi, [rip+0x2cc8]
call 0x3c90
lea  rcx, [rip+0x47cd]
mov  edx, 0x44c
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2c83]
xor  eax, eax
call 0x3a00
jmp  0x481c
cmp  DWORD PTR [rip+0x7d30], 0x0
jne  0x5203
jmp  0x520d
cmp  DWORD PTR [rip+0x7d1e], 0x1
jne  0x5203
cmp  DWORD PTR [rip+0x7d15], 0x2
jne  0x5203
jmp  0x520d
endbr64
push r12
mov  r12, rsi
mov  esi, DWORD PTR [rip+0x1c6e5]
push rbp
mov  rbp, rdi
add  DWORD PTR [rip+0x1c6a6], 0x1
push rbx
test esi, esi
je   0x16490
mov  ecx, DWORD PTR [rip+0x1af7b]
test ecx, ecx
je   0x16490
mov  edx, DWORD PTR [rip+0x1aee1]
test edx, edx
je   0x164e0
call 0x98d0
call 0x9970
mov  edi, 0x408
call 0x97e0
mov  rsi, r12
mov  ebx, DWORD PTR [rip+0x1b4a0]
mov  rdi, rbp
call 0x14a40
lea  rdi, [rip+0x1a6d5]
add  ebx, eax
call 0x14980
call 0x98d0
mov  eax, DWORD PTR [rip+0x1b47b]
lea  ebx, [rbx+rax*1+0x11]
call 0x19c80
mov  rdi, QWORD PTR [rip+0x1aeab]
xor  eax, eax
mov  esi, 0x1
call 0x15810
mov  rdi, QWORD PTR [rip+0x1b470]
xor  eax, eax
mov  esi, 0x1
call 0x15810
cmp  DWORD PTR [rip+0x1c5de], ebx
jg   0x1646e
mov  DWORD PTR [rip+0x1c5ce], 0x1
mov  rax, QWORD PTR [rip+0x197db]
lea  rsi, [rip+0x1b004]
mov  rdx, rax
sub  rdx, rsi
cmp  eax, esi
jne  0x164b0
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
mov  rsi, r12
call 0x14a40
pop  rbx
mov  edi, 0xa
pop  rbp
pop  r12
jmp  0x13de0
nop  DWORD PTR [rax+0x0]
movsxd rbx, edx
mov  edi, DWORD PTR [rip+0x18e43]
mov  QWORD PTR [rip+0x19790], rsi
mov  rdx, rbx
call 0x55e0
cmp  rax, rbx
je   0x16486
mov  DWORD PTR [rip+0x1c565], 0x1
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  eax, DWORD PTR [rip+0x1acd2]
test eax, eax
je   0x163ef
mov  DWORD PTR [rip+0x1acc0], 0x0
call 0x162e0
jmp  0x163ef
endbr64
push rbp
mov  r10, rsi
mov  ebp, edi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x23b0
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rcx, rsp
mov  rdx, r10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  esi, 0x1
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rip+0x5c0f]
mov  DWORD PTR [rsp], 0x10
mov  rdi, QWORD PTR [rax]
mov  DWORD PTR [rsp+0x4], 0x30
call 0x1270
test ebp, ebp
jne  0x241d
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x2424
add  rsp, 0xd0
pop  rbp
ret
mov  edi, ebp
call 0x13f0
call 0x12e0
endbr64
push r14
mov  r14, rsi
push r13
mov  r13, rdi
xor  edi, edi
push r12
push rbp
mov  ebp, edx
push rbx
mov  rbx, rcx
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x13e70
mov  edi, ebp
call 0x62f0
mov  r12d, eax
test r12, r12
je   0x13fd0
xor  edx, edx
mov  rdi, rsp
mov  esi, ebp
call 0x5de0
test ax, ax
jne  0x13ff0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x13ff8
mov  rdx, r14
mov  rsi, r13
call 0x5af0
mov  rdi, QWORD PTR [rsp]
xor  esi, esi
call 0x5bd0
mov  rdi, rax
test rax, rax
je   0x13ff0
mov  rsi, r12
call 0x5da0
test rax, rax
je   0x14000
mov  QWORD PTR [rbx], rax
xor  r12d, r12d
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x13fae
call 0x6300
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x14008
add  rsp, 0x10
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xchg ax, ax
lea  rcx, [rip+0x76c1]
mov  edx, 0x1f
lea  rsi, [rip+0x441f]
lea  rdi, [rip+0x444c]
call 0x5b90
nop
mov  r12d, 0xfffffffb
jmp  0x13fa0
mov  r12d, 0xfffffffb
jmp  0x13fae
mov  r12d, 0xfffffff4
jmp  0x13fa0
endbr64
push rbx
xor  eax, eax
mov  ebx, edi
mov  edi, 0x27
call 0x63f0
test eax, eax
je   0x13e90
pop  rbx
ret
nop  DWORD PTR [rax+0x0]
lea  rdi, [rip+0x4562]
call 0x6370
test rax, rax
je   0x13ed8
test bl, bl
je   0x13eb8
xor  esi, esi
mov  edi, 0x26
xor  eax, eax
pop  rbx
jmp  0x63f0
nop  DWORD PTR [rax+0x0]
mov  edi, 0x25
xor  eax, eax
call 0x63f0
xor  esi, esi
mov  edi, 0x26
xor  eax, eax
pop  rbx
jmp  0x63f0
nop  DWORD PTR [rax+rax*1+0x0]
lea  rcx, [rip+0x77d1]
mov  edx, 0xc
lea  rsi, [rip+0x4517]
lea  rdi, [rip+0x4528]
call 0x5b90
endbr64
push r12
lea  rsi, [rip+0x35a2]
push rbp
push rbx
mov  rbp, QWORD PTR [rdi]
mov  rbx, rdi
mov  rdi, rbp
call 0x6440
mov  r8d, eax
xor  eax, eax
test r8d, r8d
je   0x9db0
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x98]
lea  r12, [rip+0x3577]
mov  ecx, 0x5
mov  rsi, rbp
mov  rdx, r12
call 0x66c0
lea  edx, [rax-0x3]
cmp  edx, 0xc
jbe  0x9da7
test eax, eax
je   0x9da7
push 0x5
mov  r8, QWORD PTR [rbx]
mov  r9, r12
lea  rdx, [rip+0x459f]
push rax
lea  rcx, [rip+0x550f]
xor  eax, eax
mov  esi, 0x10
lea  rdi, [rip+0x3205]
call 0x6700
pop  rax
mov  eax, 0x5
pop  rdx
pop  rbx
pop  rbp
pop  r12
endbr64
push r15
push r14
push r13
push r12
push rbp
mov  rbp, rdi
lea  rdi, [rip+0x3fb1]
push rbx
sub  rsp, 0x18
call 0x5de0
mov  QWORD PTR [rsp+0x8], rax
call 0x6640
mov  rdi, QWORD PTR [rbp+0x38]
mov  r12, rax
test rdi, rdi
je   0xaa30
mov  esi, 0x4
call 0x6720
test eax, eax
je   0xaae0
mov  rdi, QWORD PTR [rbp+0x38]
mov  esi, 0x4
call 0x6720
test eax, eax
jne  0xaa6f
mov  rdi, QWORD PTR [rbp+0x40]
test rdi, rdi
je   0xaa8c
mov  esi, 0x4
call 0x6720
cmp  QWORD PTR [rbp+0x60], 0x0
je   0xaa08
test eax, eax
jne  0xaa10
call 0x6640
lea  r13, [rbp+0x70]
xor  ebx, ebx
lea  r14, [rip+0x2735]
mov  QWORD PTR [rbp+0x48], rax
mov  edx, DWORD PTR [r12+0x8]
test edx, edx
jne  0xa942
jmp  0xa988
nop  DWORD PTR [rax+0x0]
mov  eax, DWORD PTR [rbp+0x84]
test eax, eax
jne  0xaac0
mov  rdi, QWORD PTR [r15+0x8]
add  ebx, 0x1
call 0x6140
mov  rdi, QWORD PTR [rbp+0x48]
mov  rsi, r15
call 0x5fc0
mov  rax, QWORD PTR [r15+0x18]
xor  edx, edx
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x5e20
mov  rax, QWORD PTR [r15+0x18]
mov  esi, 0x20
mov  rdi, r14
lea  rdx, [rip+0x2b8d]
mov  rcx, QWORD PTR [rax]
xor  eax, eax
call 0x6700
cmp  DWORD PTR [r12+0x8], ebx
jbe  0xa988
mov  rdx, QWORD PTR [r12]
mov  eax, ebx
mov  rdi, r13
mov  r15, QWORD PTR [rdx+rax*8]
call QWORD PTR [r15+0x10]
mov  QWORD PTR [r15+0x18], rax
test rax, rax
jne  0xa8e8
mov  rcx, QWORD PTR [r15]
lea  rdx, [rip+0x3f1a]
mov  rdi, r14
add  ebx, 0x1
mov  esi, 0x40
call 0x6700
mov  rdi, r15
call 0x7b70
cmp  DWORD PTR [r12+0x8], ebx
ja   0xa942
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rbp+0x68]
mov  r13d, 0x1
test rax, rax
je   0xa9dc
mov  rax, QWORD PTR [rax+0x10]
mov  rbx, QWORD PTR [rax+0x20]
test rbx, rbx
je   0xa9dc
mov  edi, 0x20
call 0x5ef0
xor  esi, esi
xor  edx, edx
mov  QWORD PTR [rax], 0x0
mov  r14, rax
mov  QWORD PTR [rax+0x8], 0x0
mov  QWORD PTR [rax+0x18], rbx
mov  rdi, QWORD PTR [rbx]
call 0x5e20
mov  rdi, QWORD PTR [rbp+0x48]
mov  rsi, r14
call 0x5fc0
mov  esi, 0x1
mov  rdi, r12
call 0x60b0
mov  rdi, QWORD PTR [rsp+0x8]
call 0x5bd0
add  rsp, 0x18
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
test eax, eax
je   0xab10
mov  rdi, QWORD PTR [rbp+0x40]
mov  rsi, r12
call 0x9850
test eax, eax
jne  0xa8bd
xor  r13d, r13d
test r12, r12
je   0xa9e9
jmp  0xa9dc
xchg ax, ax
mov  rsi, QWORD PTR [rsp+0x8]
lea  rdi, [rip+0x2a79]
xor  eax, eax
lea  r8, [rip+0x2a69]
mov  ecx, 0x2f
lea  rdx, [rip+0x2a5c]
call 0x6040
mov  esi, 0x4
mov  QWORD PTR [rbp+0x38], rax
mov  rdi, rax
call 0x6720
test eax, eax
je   0xa893
mov  rdi, QWORD PTR [rbp+0x38]
mov  rsi, r12
call 0x9850
test eax, eax
je   0xaa24
mov  rdi, QWORD PTR [rbp+0x40]
test rdi, rdi
jne  0xa8a0
mov  r8, QWORD PTR [rbp+0x0]
mov  rsi, QWORD PTR [rsp+0x8]
mov  ecx, 0x2f
xor  eax, eax
lea  rdi, [rip+0x2a12]
lea  rdx, [rip+0x2a03]
call 0x6040
mov  QWORD PTR [rbp+0x40], rax
mov  rdi, rax
jmp  0xa8a0
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, r15
mov  r13d, 0x1
call 0x7b70
mov  rax, QWORD PTR [rbp+0x68]
test rax, rax
jne  0xa997
jmp  0xa9dc
mov  rcx, QWORD PTR [rbp+0x38]
mov  esi, 0x10
xor  r13d, r13d
lea  rdx, [rip+0x3d35]
lea  rdi, [rip+0x250a]
call 0x6700
test r12, r12
je   0xa9e9
jmp  0xa9dc
nop  DWORD PTR [rax]
mov  rcx, QWORD PTR [rbp+0x40]
lea  rdx, [rip+0x3d3d]
mov  esi, 0x10
lea  rdi, [rip+0x24dd]
call 0x6700
endbr64
push r13
push r12
lea  r12, [rip+0x8241]
push rbp
push rbx
mov  rbx, rdi
mov  rdi, r12
sub  rsp, 0x8
call 0x64f0
mov  rdi, r12
mov  DWORD PTR [rip+0x81fb], 0x0
call 0x6110
mov  rdx, QWORD PTR [rip+0x820f]
mov  esi, DWORD PTR [rdx+0x8]
test esi, esi
je   0xb0c0
xor  ebp, ebp
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rcx, QWORD PTR [rdx]
mov  eax, ebp
mov  rax, QWORD PTR [rcx+rax*8]
mov  ecx, DWORD PTR [rax]
test ecx, ecx
je   0xafac
mov  rcx, QWORD PTR [rax+0x10]
test rcx, rcx
je   0xafac
mov  rsi, QWORD PTR [rax+0x18]
mov  rdi, QWORD PTR [rip+0x81bd]
call rcx
mov  rdx, QWORD PTR [rip+0x81cc]
mov  ecx, DWORD PTR [rdx+0x8]
add  ebp, 0x1
mov  rax, rdx
cmp  ecx, ebp
ja   0xaf80
mov  rdi, QWORD PTR [rip+0x81a8]
test rdi, rdi
je   0xafde
mov  edx, 0x1
mov  esi, 0x1
call 0x6360
mov  rax, QWORD PTR [rip+0x819d]
mov  ecx, DWORD PTR [rax+0x8]
xor  r13d, r13d
test ecx, ecx
je   0xb03f
nop  DWORD PTR [rax]
mov  rcx, QWORD PTR [rax]
mov  edx, r13d
mov  rbp, QWORD PTR [rcx+rdx*8]
mov  rdi, QWORD PTR [rbp+0x20]
call 0x6740
mov  rax, QWORD PTR [rbp+0x28]
test rax, rax
je   0xb00a
mov  rdi, QWORD PTR [rbp+0x18]
call rax
mov  rdi, rbp
add  r13d, 0x1
call 0x5bd0
mov  rax, QWORD PTR [rip+0x815b]
cmp  DWORD PTR [rax+0x8], r13d
ja   0xafe8
jmp  0xb03f
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rax+0x18]
test rax, rax
je   0xb037
mov  rdi, QWORD PTR [rbp+0x10]
call rax
mov  rdi, rbp
call 0x5bd0
mov  rdi, QWORD PTR [rip+0x812a]
call 0x6120
mov  rbp, rax
test rax, rax
jne  0xb028
mov  rdi, QWORD PTR [rip+0x811e]
mov  esi, 0x1
call 0x60b0
mov  rdi, QWORD PTR [rip+0x8105]
call 0x5f30
mov  rdi, r12
call 0x6630
pxor xmm0, xmm0
xor  ecx, ecx
xor  edx, edx
0f 29 05 b9 80 00 00  movaps XMMWORD PTR [rip+0x80b9], xmm0
lea  rsi, [rip+0x244a]
xor  eax, eax
0f 29 05 b9 80 00 00  movaps XMMWORD PTR [rip+0x80b9], xmm0
0f 29 05 c2 80 00 00  movaps XMMWORD PTR [rip+0x80c2], xmm0
0f 29 05 cb 80 00 00  movaps XMMWORD PTR [rip+0x80cb], xmm0
0f 29 05 d4 80 00 00  movaps XMMWORD PTR [rip+0x80d4], xmm0
mov  rdi, QWORD PTR [rbx+0x40]
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
jmp  0x6230
nop
mov  rdi, QWORD PTR [rip+0x80a1]
test rdi, rdi
jne  0xafc5
endbr64
cmp  QWORD PTR [rdi+0x48], 0x0
je   0xa820
jmp  0x7d70
endbr64
mov  rax, QWORD PTR [rip+0x8aa5]
test rax, rax
je   0xa7d8
ret
nop  DWORD PTR [rax+0x0]
sub  rsp, 0x8
xor  ecx, ecx
lea  rdx, [rip+0x7f7b]
mov  edi, 0x50
lea  rsi, [rip+0x28fa]
call 0x6210
mov  QWORD PTR [rip+0x8a73], rax
add  rsp, 0x8
endbr64
push r14
push r13
push r12
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x20
mov  rdi, QWORD PTR [rdi+0x88]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
lea  rax, [rip+0x3788]
mov  QWORD PTR [rsp], rax
lea  rax, [rip+0x3782]
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rip+0x377d]
mov  QWORD PTR [rsp+0x10], rax
call 0x6270
test eax, eax
je   0x9c50
mov  rdx, QWORD PTR [rbp+0x0]
lea  rsi, [rip+0x3766]
xor  edi, edi
xor  eax, eax
lea  r13, [rbp+0x70]
xor  r14d, r14d
lea  r12, [rip+0x377d]
call 0x72f0
mov  rdx, QWORD PTR [rbp+0x40]
xor  eax, eax
mov  edi, 0x1
lea  rsi, [rip+0x3755]
call 0x72f0
mov  rax, QWORD PTR [rbp+0xc0]
mov  edx, DWORD PTR [rax+0x8]
test edx, edx
je   0x9bfa
nop
mov  ebx, r14d
mov  rsi, r12
mov  edi, 0x1
shl  rbx, 0x4
add  rbx, QWORD PTR [rax]
mov  eax, DWORD PTR [rbx+0x8]
mov  rcx, QWORD PTR [rsp+rax*8]
mov  rax, QWORD PTR [rbx]
mov  rdx, QWORD PTR [rax]
xor  eax, eax
call 0x72f0
mov  rsi, QWORD PTR [rbx]
mov  rax, QWORD PTR [rsi+0x30]
test rax, rax
je   0x9be9
xor  edx, edx
mov  rdi, r13
call rax
mov  rax, QWORD PTR [rbp+0xc0]
add  r14d, 0x1
cmp  DWORD PTR [rax+0x8], r14d
ja   0x9bb0
cmp  QWORD PTR [rbp+0x48], 0x0
je   0x9c80
lea  rdx, [rip+0xffffffffffffd7d8]
lea  rsi, [rip+0xffffffffffffd841]
mov  rdi, rbp
call 0x70f0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x9c9f
mov  rdi, QWORD PTR [rbp+0xb0]
add  rsp, 0x20
mov  rdx, r13
lea  rsi, [rip+0x34e1]
pop  rbx
xor  eax, eax
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x5d70
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x9c9f
mov  rdx, QWORD PTR [rbp+0x0]
add  rsp, 0x20
xor  edi, edi
xor  eax, eax
pop  rbx
lea  rsi, [rip+0x46bc]
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x72f0
lea  rdx, [rip+0x3692]
mov  esi, 0x20
lea  rdi, [rip+0x3371]
xor  eax, eax
call 0x6700
jmp  0x9c17
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
mov  eax, DWORD PTR [rsi+0x8]
test eax, eax
je   0xb458
mov  r13, rdi
mov  r15, rsi
mov  ebx, edx
xor  ebp, ebp
xor  r14d, r14d
mov  eax, r14d
lea  rdx, [rax+rax*2]
mov  rax, QWORD PTR [r15]
lea  r9, [rax+rdx*8]
mov  edx, DWORD PTR [r9]
cmp  edx, 0x1
je   0xb4b7
cmp  edx, 0x2
je   0xb480
test edx, edx
je   0xb340
mov  ecx, edx
mov  esi, 0x4
lea  rdx, [rip+0x22a3]
xor  eax, eax
lea  rdi, [rip+0x1ccc]
call 0x6700
jmp  0xb33d
nop
mov  QWORD PTR [rsp+0x20], 0x0
test ebx, ebx
jne  0xb4ee
mov  rsi, QWORD PTR [r9+0x8]
lea  rdi, [rip+0x2227]
xor  eax, eax
mov  QWORD PTR [rsp+0x8], r9
call 0x6040
mov  rdi, rax
mov  r12, rax
call 0x6010
lea  rcx, [rsp+0x20]
lea  rdx, [rax+0x1]
lea  r8, [rsp+0x18]
mov  rsi, r12
mov  rdi, r13
call 0x5ce0
test eax, eax
jne  0xb3c6
mov  r8, QWORD PTR [rsp+0x20]
mov  r9, QWORD PTR [rsp+0x8]
lea  rax, [rip+0x21db]
lea  rdx, [rip+0x3610]
mov  esi, 0x10
lea  rdi, [rip+0x1c50]
test r8, r8
mov  rcx, QWORD PTR [r9+0x8]
cmove  r8, rax
xor  eax, eax
call 0x6700
mov  rdi, QWORD PTR [rsp+0x20]
call 0x6050
mov  rdi, r12
call 0x5bd0
add  r14d, 0x1
cmp  DWORD PTR [r15+0x8], r14d
ja   0xb2fa
test rbp, rbp
je   0xb458
mov  QWORD PTR [rsp+0x20], 0x0
mov  rdi, rbp
call 0x6010
lea  rcx, [rsp+0x20]
mov  rsi, rbp
mov  rdi, r13
lea  rdx, [rax+0x1]
lea  r8, [rsp+0x18]
call 0x5ce0
test eax, eax
jne  0xb446
mov  rcx, QWORD PTR [rsp+0x20]
lea  rax, [rip+0x2157]
lea  rdx, [rip+0x35b4]
mov  esi, 0x10
lea  rdi, [rip+0x1bcc]
test rcx, rcx
cmove  rcx, rax
xor  eax, eax
call 0x6700
mov  rdi, QWORD PTR [rsp+0x20]
call 0x6050
mov  rdi, rbp
call 0x5bd0
mov  rax, QWORD PTR [rsp+0x28]
sub  rax, QWORD PTR fs:0x28
jne  0xb515
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
test rbp, rbp
je   0xb4f7
xor  ecx, ecx
test ebx, ebx
je   0xb48f
mov  ecx, DWORD PTR [r9+0x14]
mov  edx, DWORD PTR [r9+0x10]
mov  rsi, rbp
lea  rdi, [rip+0x212c]
xor  eax, eax
call 0x6040
mov  rdi, rbp
mov  r12, rax
call 0x5bd0
mov  rbp, r12
jmp  0xb3d8
test ebx, ebx
je   0xb3d8
mov  rsi, QWORD PTR [r9+0x8]
lea  rdi, [rip+0x20d0]
xor  eax, eax
mov  QWORD PTR [rsp+0x8], r9
call 0x6040
mov  rdi, rax
mov  r12, rax
call 0x6010
lea  rcx, [rsp+0x20]
mov  rdx, rax
jmp  0xb37c
mov  edx, DWORD PTR [r9+0x14]
jmp  0xb351
lea  rdi, [rip+0x20b1]
mov  QWORD PTR [rsp+0x8], r9
call 0x5de0
mov  r9, QWORD PTR [rsp+0x8]
mov  rbp, rax
jmp  0xb485
endbr64
cmp  QWORD PTR [rdi+0x48], 0x0
je   0x9d60
lea  rdx, [rip+0xffffffffffffd68e]
lea  rsi, [rip+0xffffffffffffd6f7]
jmp  0x70f0
xchg ax, ax
lea  rdx, [rip+0x35b2]
mov  esi, 0x20
lea  rdi, [rip+0x3291]
xor  eax, eax
endbr64
push r15
mov  ecx, 0x4e
push r14
push r13
push r12
lea  r12, [rip+0x2fdc]
push rbp
lea  rbp, [rip+0x3370]
push rbx
mov  rbx, rdi
sub  rsp, 0x2c8
mov  QWORD PTR [rsp+0x20], rdx
mov  QWORD PTR [rsp], rdi
lea  rdi, [rsp+0x40]
mov  DWORD PTR [rsp+0x2c], esi
lea  rsi, [rip+0x438c]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x2b8], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x8], rdi
mov  DWORD PTR [rsp+0x34], 0x0
rep stos QWORD PTR es:[rdi], rax
lea  rax, [rip+0x3311]
mov  rdi, r12
mov  BYTE PTR [rsp+0x48], 0x6e
mov  QWORD PTR [rsp+0x40], rax
mov  DWORD PTR [rsp+0x50], 0x1
mov  QWORD PTR [rsp+0x58], rbx
call 0x5f80
lea  rsi, [rip+0x4374]
mov  rdi, r12
mov  QWORD PTR [rsp+0x60], rax
call 0x5f80
lea  rsi, [rip+0x4388]
mov  rdi, r12
mov  DWORD PTR [rsp+0x80], 0x4
mov  QWORD PTR [rsp+0x68], rax
lea  rax, [rip+0x32c2]
mov  QWORD PTR [rsp+0x70], rax
lea  rax, [rbx+0x38]
mov  QWORD PTR [rsp+0x88], rax
call 0x5f80
mov  rsi, rbp
mov  rdi, r12
mov  QWORD PTR [rsp+0x90], rax
call 0x5f80
lea  rsi, [rip+0x437e]
mov  rdi, r12
mov  BYTE PTR [rsp+0xa8], 0x70
mov  QWORD PTR [rsp+0x98], rax
lea  rax, [rip+0x329e]
mov  QWORD PTR [rsp+0xa0], rax
lea  rax, [rbx+0x40]
mov  DWORD PTR [rsp+0xb0], 0x4
mov  QWORD PTR [rsp+0xb8], rax
call 0x5f80
mov  rsi, rbp
mov  rdi, r12
mov  QWORD PTR [rsp+0xc0], rax
call 0x5f80
lea  rsi, [rip+0x4366]
mov  rdi, r12
mov  DWORD PTR [rsp+0xe0], 0x3
mov  QWORD PTR [rsp+0xc8], rax
lea  rax, [rip+0x324f]
mov  QWORD PTR [rsp+0xd0], rax
lea  rax, [rip+0xffffffffffffcb6a]
mov  QWORD PTR [rsp+0xe8], rax
call 0x5f80
lea  rsi, [rip+0x4366]
mov  rdi, r12
mov  QWORD PTR [rsp+0xf0], rax
call 0x5f80
lea  rsi, [rip+0x4377]
mov  rdi, r12
mov  DWORD PTR [rsp+0x110], 0x3
mov  QWORD PTR [rsp+0xf8], rax
lea  rax, [rip+0x31fc]
mov  QWORD PTR [rsp+0x100], rax
lea  rax, [rip+0xffffffffffffcc43]
mov  QWORD PTR [rsp+0x118], rax
call 0x5f80
lea  rsi, [rip+0x4387]
mov  rdi, r12
mov  QWORD PTR [rsp+0x120], rax
call 0x5f80
lea  rsi, [rip+0x43a0]
mov  rdi, r12
mov  BYTE PTR [rsp+0x138], 0x62
mov  QWORD PTR [rsp+0x128], rax
lea  rax, [rip+0x359c]
mov  QWORD PTR [rsp+0x130], rax
lea  rax, [rbx+0x50]
mov  DWORD PTR [rsp+0x140], 0x4
mov  QWORD PTR [rsp+0x148], rax
call 0x5f80
lea  rsi, [rip+0x43ab]
mov  rdi, r12
mov  QWORD PTR [rsp+0x150], rax
call 0x5f80
lea  rsi, [rip+0x43c4]
mov  rdi, r12
mov  DWORD PTR [rsp+0x170], 0x2
mov  QWORD PTR [rsp+0x158], rax
lea  rax, [rip+0x3151]
mov  QWORD PTR [rsp+0x160], rax
lea  rax, [rbx+0xa0]
mov  QWORD PTR [rsp+0x178], rax
call 0x5f80
lea  rsi, [rip+0x3136]
mov  rdi, r12
mov  QWORD PTR [rsp+0x180], rax
call 0x5f80
lea  rsi, [rip+0x43b5]
mov  rdi, r12
mov  DWORD PTR [rsp+0x1a0], 0x2
mov  QWORD PTR [rsp+0x188], rax
lea  rax, [rip+0x3120]
mov  QWORD PTR [rsp+0x190], rax
lea  rax, [rbx+0xa4]
mov  QWORD PTR [rsp+0x1a8], rax
call 0x5f80
lea  rsi, [rip+0x43b5]
mov  rdi, r12
mov  QWORD PTR [rsp+0x1b0], rax
call 0x5f80
lea  rsi, [rip+0x43be]
mov  rdi, r12
mov  BYTE PTR [rsp+0x1c8], 0x63
mov  QWORD PTR [rsp+0x1b8], rax
lea  rax, [rip+0x30d5]
mov  QWORD PTR [rsp+0x1c0], rax
lea  rax, [rbx+0x8]
mov  DWORD PTR [rsp+0x1d0], 0x4
mov  QWORD PTR [rsp+0x1d8], rax
call 0x5f80
mov  rsi, rbp
mov  rdi, r12
mov  QWORD PTR [rsp+0x1e0], rax
call 0x5f80
lea  rsi, [rip+0x43a6]
mov  rdi, r12
mov  BYTE PTR [rsp+0x1f8], 0x67
mov  QWORD PTR [rsp+0x1e8], rax
lea  rax, [rip+0x3084]
mov  QWORD PTR [rsp+0x1f0], rax
lea  rax, [rbx+0x60]
mov  DWORD PTR [rsp+0x200], 0x4
mov  QWORD PTR [rsp+0x208], rax
call 0x5f80
mov  rsi, rbp
mov  rdi, r12
mov  QWORD PTR [rsp+0x210], rax
call 0x5f80
lea  rsi, [rip+0x4396]
mov  rdi, r12
mov  BYTE PTR [rsp+0x228], 0x6c
mov  QWORD PTR [rsp+0x218], rax
lea  rax, [rip+0x3032]
mov  QWORD PTR [rsp+0x220], rax
lea  rax, [rsp+0x30]
mov  QWORD PTR [rsp+0x238], rax
call 0x5f80
lea  rsi, [rip+0x439b]
mov  rdi, r12
mov  BYTE PTR [rsp+0x258], 0x76
mov  QWORD PTR [rsp+0x240], rax
lea  rax, [rip+0x3052]
mov  QWORD PTR [rsp+0x250], rax
lea  rax, [rsp+0x34]
mov  QWORD PTR [rsp+0x268], rax
call 0x5f80
xor  edi, edi
lea  rsi, [rip+0x3339]
mov  QWORD PTR [rbx+0xa0], 0xffffffffffffffff
mov  QWORD PTR [rsp+0x270], rax
mov  rax, QWORD PTR [rsp+0x20]
mov  QWORD PTR [rsp+0x38], 0x0
mov  rdx, QWORD PTR [rax]
xor  eax, eax
call 0x5fe0
cmp  DWORD PTR [rsp+0x2c], 0x1
mov  rbp, rax
jle  0xa4bb
mov  r15d, 0x8
mov  ebx, 0x1
lea  r14, [rip+0x2db7]
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rsp+0x20]
mov  rdx, rbp
mov  r13, rbp
mov  rsi, r14
xor  edi, edi
add  ebx, 0x1
mov  rcx, QWORD PTR [rax+r15*1]
xor  eax, eax
add  r15, 0x8
call 0x5fe0
mov  rdi, r13
mov  rbp, rax
call 0x6000
cmp  DWORD PTR [rsp+0x2c], ebx
jg   0xa488
xor  edi, edi
lea  rbx, [rsp+0x38]
call 0x65b0
lea  rsi, [rip+0x2f44]
mov  rdi, rax
mov  r14, rax
call 0x60d0
mov  rsi, QWORD PTR [rsp+0x8]
xor  edx, edx
mov  rdi, r14
call 0x5f20
mov  rdi, r14
call 0x6600
lea  rsi, [rip+0xffffffffffffc7a9]
mov  rdi, rax
call 0x6590
lea  rdx, [rsp+0x20]
mov  rcx, rbx
mov  rdi, r14
lea  rsi, [rsp+0x2c]
call 0x6160
mov  r15d, eax
test eax, eax
je   0xa6a0
mov  r15d, DWORD PTR [rsp+0x34]
test r15d, r15d
jne  0xa660
mov  rax, QWORD PTR [rsp]
mov  r8, QWORD PTR [rax]
test r8, r8
je   0xa6f0
lea  r9, [rip+0x2deb]
mov  rdi, r8
mov  QWORD PTR [rsp+0x10], r8
mov  rsi, r9
mov  QWORD PTR [rsp+0x18], r9
call 0x6440
mov  rdi, QWORD PTR [rsp+0x10]
lea  rsi, [rip+0x2f34]
mov  DWORD PTR [rsp+0x8], eax
call 0x6440
mov  edx, DWORD PTR [rsp+0x8]
lea  r9, [rip+0x2db6]
test edx, edx
jne  0xa6c8
test eax, eax
sete al
movzx  eax, al
mov  r15, QWORD PTR [rsp]
mov  esi, 0x1
mov  QWORD PTR [rsp+0x8], r9
mov  DWORD PTR [r15+0x2c], eax
mov  rdi, r15
call 0x9e50
mov  rdi, r12
mov  rcx, rbp
mov  esi, 0x40
lea  rdx, [rip+0x2eea]
xor  eax, eax
mov  r12, r15
call 0x6700
mov  rdi, QWORD PTR [r15]
mov  rsi, QWORD PTR [rsp+0x8]
mov  r15d, 0x1
call 0x6440
test eax, eax
je   0xa616
mov  edi, DWORD PTR [r12+0xa0]
test edi, edi
jns  0xa710
mov  rax, QWORD PTR [rsp]
mov  DWORD PTR [rax+0xa0], 0xffffffff
mov  edi, DWORD PTR [rax+0xa4]
test edi, edi
jns  0xa720
mov  rax, QWORD PTR [rsp]
mov  r15d, 0x1
mov  DWORD PTR [rax+0xa4], 0xffffffff
mov  rdi, rbp
call 0x6000
mov  rdi, rbx
call 0x5df0
mov  rdi, r14
call 0x5d10
mov  rax, QWORD PTR [rsp+0x2b8]
sub  rax, QWORD PTR fs:0x28
jne  0xa72a
add  rsp, 0x2c8
mov  eax, r15d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0x2de8]
xor  edi, edi
call 0x63a0
lea  rdi, [rip+0x2e13]
lea  rcx, [rip+0x2df0]
mov  rsi, rax
lea  rdx, [rip+0x2df5]
xor  eax, eax
call 0x5d00
xor  edi, edi
call 0x5dd0
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rsp+0x38]
lea  rsi, [rip+0x2d84]
lea  rdi, [rip+0x2d99]
mov  rdx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x5e90
jmp  0xa616
nop  DWORD PTR [rax+rax*1+0x0]
test eax, eax
mov  r8, QWORD PTR [rsp+0x10]
je   0xa581
mov  rsi, r8
lea  rdi, [rip+0x40f9]
xor  eax, eax
call 0x5e90
jmp  0xa616
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x2da2]
lea  r9, [rip+0x2c31]
mov  QWORD PTR [rax], rdx
mov  eax, 0x1
jmp  0xa589
nop  DWORD PTR [rax+rax*1+0x0]
call 0x5c90
jmp  0xa5e6
nop  WORD PTR [rax+rax*1+0x0]
call 0x5c90
jmp  0xa602
endbr64
test rsi, rsi
je   0x8598
cmp  edx, 0x4
je   0x8520
lea  rdx, [rip+0x4c7d]
lea  rsi, [rip+0x6c90]
xor  edi, edi
jmp  0x61f0
nop  WORD PTR [rax+rax*1+0x0]
push r14
push r13
mov  r13, rsi
push r12
mov  r12, r9
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rcx
test BYTE PTR [rdi+0x3], 0x20
jne  0x8578
mov  rdi, rbx
call 0x5f50
mov  r8, QWORD PTR [rbp+0x10]
mov  r14, rax
test r12, r12
je   0x858c
mov  rsi, QWORD PTR [rbx+0x20]
mov  rdi, r14
mov  rcx, QWORD PTR [rbx+0x50]
mov  rdx, QWORD PTR [rbx+0x38]
call r12
pop  rbx
mov  rdi, r13
pop  rbp
mov  esi, eax
pop  r12
pop  r13
pop  r14
jmp  0x5e00
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbx
mov  r14, QWORD PTR [rbp+0x10]
call 0x5f50
mov  r8, rax
test r12, r12
jne  0x854e
mov  r12, QWORD PTR [rbp+0x20]
jmp  0x854e
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x4bd2]
lea  rsi, [rip+0x6bfa]
xor  edi, edi
endbr64
mov  r8d, DWORD PTR [rdi+0xcc]
test r8d, r8d
js   0xbcb8
push rbx
mov  ecx, DWORD PTR [rdi+0xc8]
mov  rbx, rdi
test ecx, ecx
jns  0xbc80
pop  rbx
ret
lea  rdi, [rip+0x137d]
lea  rdx, [rip+0x2eca]
mov  esi, 0x80
xor  eax, eax
call 0x6700
mov  edi, DWORD PTR [rbx+0xc8]
test edi, edi
jns  0xbcc0
mov  QWORD PTR [rbx+0xc8], 0xffffffffffffffff
pop  rbx
ret
nop  DWORD PTR [rax+0x0]
ret
nop  DWORD PTR [rax+0x0]
call 0x5c90
mov  QWORD PTR [rbx+0xc8], 0xffffffffffffffff
endbr64
test rsi, rsi
je   0xbf00
cmp  edx, 0x6
je   0xbe80
lea  rdx, [rip+0x186c]
lea  rsi, [rip+0x32f0]
xor  edi, edi
jmp  0x61f0
nop  WORD PTR [rax+rax*1+0x0]
push r14
push r13
mov  r13, rsi
push r12
mov  r12, r9
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rcx
test BYTE PTR [rdi+0x3], 0x20
jne  0xbee8
mov  rdi, rbx
call 0x5f50
mov  r14, rax
mov  rax, QWORD PTR [rbp+0x10]
test r12, r12
je   0xbef9
sub  rsp, 0x8
mov  rdx, QWORD PTR [rbx+0x38]
mov  rsi, QWORD PTR [rbx+0x20]
mov  rdi, r14
mov  ecx, DWORD PTR [rbx+0x50]
push rax
mov  r9, QWORD PTR [rbx+0x80]
mov  r8d, DWORD PTR [rbx+0x68]
call r12
mov  rdi, r13
mov  esi, eax
pop  rax
pop  rdx
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x6570
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbx
mov  r14, QWORD PTR [rbp+0x10]
call 0x5f50
test r12, r12
jne  0xbeae
mov  r12, QWORD PTR [rbp+0x20]
jmp  0xbeae
nop
lea  rdx, [rip+0x126a]
lea  rsi, [rip+0x3252]
xor  edi, edi
endbr64
push r12
mov  r12, rsi
push rbp
mov  rbp, rdi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x8af0]
test rdi, rdi
je   0xa7a0
add  rsp, 0x8
mov  rdx, r12
mov  rsi, rbp
pop  rbp
pop  r12
jmp  0x92d0
nop
call 0x9250
mov  QWORD PTR [rip+0x8acc], rax
mov  rdi, rax
test rax, rax
jne  0xa78d
add  rsp, 0x8
xor  eax, eax
pop  rbp
pop  r12
endbr64
push r14
mov  ecx, 0x3
push r13
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
lea  r13, [rbx+0x18]
sub  rsp, 0x20
mov  r14, QWORD PTR [rdi]
mov  rdi, QWORD PTR [rsi]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  rdx, rdi
mov  rsi, rdi
call 0x60f0
mov  rdi, r13
mov  r12, rax
call 0x64f0
mov  eax, DWORD PTR [rip+0xb6df]
mov  rdi, QWORD PTR [rbp+0x0]
add  eax, 0x1
mov  DWORD PTR [rip+0xb6d2], eax
mov  DWORD PTR [rsp], eax
call 0x5de0
mov  rdi, QWORD PTR [rbx+0x20]
mov  edx, 0x1
mov  rsi, rsp
mov  QWORD PTR [rsp+0x8], rax
mov  QWORD PTR [rsp+0x10], 0x0
call 0x66e0
mov  ebp, DWORD PTR [rsp]
mov  esi, 0x50
mov  rdi, r14
call 0x6090
mov  rdx, r12
mov  rdi, rax
mov  esi, ebp
call 0x5ec0
mov  rdi, r13
call 0x6110
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x7b27
add  rsp, 0x20
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
endbr64
mov  eax, DWORD PTR [rip+0x9426]
push r14
push r13
push r12
mov  r12d, esi
push rbp
push rbx
mov  rbx, rdi
mov  r13, QWORD PTR [rdi+0x98]
test eax, eax
jne  0x9ec0
mov  rdi, QWORD PTR [rbx+0x8]
lea  rcx, [rbx+0x10]
xor  esi, esi
mov  r14d, r12d
lea  rdx, [rbx+0x98]
call 0x64e0
mov  ebp, eax
test eax, eax
jne  0x9f22
cmp  QWORD PTR [rbx+0x98], 0x0
je   0x9fc8
test r14d, r14d
jne  0x9f94
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x93b1]
test rdi, rdi
je   0x9fe0
lea  rdx, [rbx+0x20]
lea  rsi, [rbx+0x18]
call 0x92d0
test eax, eax
je   0x9e73
lea  rcx, [rip+0x53f8]
lea  rdx, [rip+0x346d]
mov  esi, 0x40
xor  eax, eax
lea  rdi, [rip+0x3107]
call 0x6700
mov  rdi, QWORD PTR [rbx+0x8]
lea  rcx, [rbx+0x10]
xor  esi, esi
mov  QWORD PTR [rbx+0x10], 0x0
lea  rdx, [rbx+0x98]
call 0x64e0
mov  ebp, eax
mov  rsi, QWORD PTR [rbx+0x98]
mov  rdi, QWORD PTR [rbx+0x18]
call 0x62b0
or   eax, ebp
setne  r14b
setne  al
movzx  r14d, r14b
test r13, r13
je   0x9ffd
test al, al
je   0x9ffd
xor  eax, eax
mov  esi, 0x40
mov  r14d, r12d
lea  rdx, [rip+0x3417]
lea  rdi, [rip+0x309c]
or   r14d, 0x1
call 0x6700
mov  rdi, QWORD PTR [rbx+0xb0]
xor  eax, eax
lea  rdx, [rbx+0x70]
lea  rsi, [rip+0x3188]
call 0x5d70
cmp  QWORD PTR [rbx+0x98], 0x0
je   0x9fc8
mov  rsi, QWORD PTR [rbx+0x98]
mov  rdi, QWORD PTR [rbx]
mov  ecx, r12d
mov  edx, 0x1
call 0x6690
mov  rsi, QWORD PTR [rbx+0x98]
xor  edx, edx
pop  rbx
xor  edi, edi
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x61b0
nop  DWORD PTR [rax+rax*1+0x0]
call 0x5db0
mov  QWORD PTR [rbx+0x98], rax
jmp  0x9ea4
nop  DWORD PTR [rax+0x0]
call 0x9250
mov  QWORD PTR [rip+0x928c], rax
mov  rdi, rax
test rax, rax
je   0x9e73
jmp  0x9ed0
or   r14d, r12d
endbr64
test rsi, rsi
je   0x84d0
cmp  edx, 0x3
je   0x8460
lea  rdx, [rip+0x4d14]
lea  rsi, [rip+0x6d90]
xor  edi, edi
jmp  0x61f0
nop  WORD PTR [rax+rax*1+0x0]
push r14
push r13
mov  r13, rsi
push r12
mov  r12, r9
push rbp
mov  rbp, rdi
push rbx
mov  rbx, rcx
test BYTE PTR [rdi+0x3], 0x20
jne  0x84b0
mov  rdi, rbx
call 0x5f50
mov  rcx, QWORD PTR [rbp+0x10]
mov  r14, rax
test r12, r12
je   0x84c4
mov  rsi, QWORD PTR [rbx+0x20]
mov  rdi, r14
mov  edx, DWORD PTR [rbx+0x38]
call r12
pop  rbx
mov  rdi, r13
pop  rbp
mov  rsi, rax
pop  r12
pop  r13
pop  r14
jmp  0x5d40
xchg ax, ax
mov  rdi, rbx
mov  r14, QWORD PTR [rbp+0x10]
call 0x5f50
mov  rcx, rax
test r12, r12
jne  0x848e
mov  r12, QWORD PTR [rbp+0x20]
jmp  0x848e
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x4c9a]
lea  rsi, [rip+0x6d02]
xor  edi, edi
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
cmp  QWORD PTR [rdi+0x48], 0x0
je   0xb6e4
mov  edx, DWORD PTR [rdi+0x30]
mov  rbx, rdi
lea  r12, [rdi+0x70]
test edx, edx
jne  0xb730
mov  rax, QWORD PTR [rbx+0xc0]
xor  r13d, r13d
test rax, rax
jne  0xb580
jmp  0xb5d0
mov  rax, QWORD PTR [rbx+0xc0]
add  r13d, 0x1
test rax, rax
je   0xb5d0
cmp  DWORD PTR [rax+0x8], r13d
jbe  0xb5d0
mov  ebp, r13d
shl  rbp, 0x4
add  rbp, QWORD PTR [rax]
mov  rdi, QWORD PTR [rbp+0x0]
mov  rax, QWORD PTR [rdi+0x28]
test rax, rax
je   0xb5af
cmp  DWORD PTR [rbp+0x8], 0x1
jne  0xb5af
mov  rsi, rdi
mov  rdi, r12
call rax
mov  rdi, QWORD PTR [rbp+0x0]
mov  eax, DWORD PTR [rdi+0x8]
sub  eax, 0x1
cmp  eax, 0x3
ja   0xb570
call 0x5bd0
mov  rax, QWORD PTR [rbx+0xc0]
add  r13d, 0x1
test rax, rax
jne  0xb580
nop
mov  rdi, QWORD PTR [rbx+0xb0]
mov  rdx, r12
xor  eax, eax
lea  rsi, [rip+0x1b6d]
lea  r13, [rip+0x200d]
lea  r12, [rip+0x1a13]
call 0x5d70
mov  rdi, QWORD PTR [rbx+0x48]
mov  eax, DWORD PTR [rdi+0x8]
test eax, eax
je   0xb6aa
nop  DWORD PTR [rax]
lea  edx, [rax-0x1]
mov  rax, QWORD PTR [rdi]
mov  rbp, QWORD PTR [rax+rdx*8]
mov  rax, QWORD PTR [rbp+0x18]
test rax, rax
je   0xb710
mov  r14, QWORD PTR [rax+0x8]
mov  rcx, QWORD PTR [rax]
mov  rdx, r13
xor  eax, eax
mov  esi, 0x20
mov  rdi, r12
call 0x6700
test r14, r14
je   0xb684
mov  eax, DWORD PTR [r14+0x8]
xor  r15d, r15d
test eax, eax
je   0xb677
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, r15d
shl  rax, 0x4
add  rax, QWORD PTR [r14]
mov  rdi, QWORD PTR [rax+0x8]
test rdi, rdi
je   0xb66d
mov  esi, 0x1
call 0x5ed0
add  r15d, 0x1
cmp  DWORD PTR [r14+0x8], r15d
ja   0xb650
mov  esi, 0x1
mov  rdi, r14
call 0x5ed0
mov  rdi, QWORD PTR [rbx+0x48]
mov  eax, DWORD PTR [rdi+0x8]
lea  esi, [rax-0x1]
call 0x5e40
mov  rdi, rbp
call 0x7b70
mov  rdi, QWORD PTR [rbx+0x48]
mov  eax, DWORD PTR [rdi+0x8]
test eax, eax
jne  0xb608
mov  r8, QWORD PTR [rbx+0xc0]
test r8, r8
je   0xb6d2
mov  rdi, r8
mov  esi, 0x1
call 0x5ed0
mov  rdi, QWORD PTR [rbx+0x48]
mov  QWORD PTR [rbx+0xc0], 0x0
mov  esi, 0x1
call 0x60b0
mov  QWORD PTR [rbx+0x48], 0x0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0xb78f
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rcx, [rip+0x1ed8]
mov  rdx, r13
mov  esi, 0x20
mov  rdi, r12
call 0x6700
jmp  0xb684
nop  DWORD PTR [rax+0x0]
cmp  QWORD PTR [rdi+0x90], 0x0
je   0xb55f
mov  rdi, QWORD PTR [rdi+0xb0]
mov  r8, rsp
xor  ecx, ecx
mov  rdx, r12
lea  rsi, [rip+0x19a8]
mov  QWORD PTR [rsp], 0x0
call 0x5d70
mov  rsi, QWORD PTR [rsp]
test rsi, rsi
je   0xb55f
mov  rdi, QWORD PTR [rbx+0x90]
xor  edx, edx
call 0xb2c0
mov  rdi, QWORD PTR [rsp]
mov  esi, 0x1
call 0x5ed0
jmp  0xb55f
endbr64
push r15
push r14
push r13
mov  r13, rdx
push r12
push rbp
mov  ebp, edi
push rbx
sub  rsp, 0x28
mov  QWORD PTR [rsp+0x18], rsi
call 0x5c00
test al, al
je   0x696c
lea  rsi, [rsp+0x18]
xor  edx, edx
mov  edi, ebp
movsxd rbx, ebp
call 0x6330
lea  rdi, [rbx*8+0x0]
call 0x5ef0
mov  r12, rax
test ebp, ebp
jle  0x67c9
mov  rcx, QWORD PTR [rsp+0x18]
xor  eax, eax
nop  DWORD PTR [rax]
mov  rdx, QWORD PTR [rcx+rax*8]
mov  QWORD PTR [r12+rax*8], rdx
add  rax, 0x1
cmp  rbx, rax
jne  0x67b8
lea  rsi, [rip+0x6cdd]
mov  edi, 0x6
lea  r14, [rip+0x6828]
call 0x6670
mov  rdi, QWORD PTR [rip+0xc7f0]
call 0xcdc0
lea  rdi, [rip+0x6e2e]
call 0x5ee0
xor  ecx, ecx
mov  rdi, r14
mov  edx, 0x1
xor  esi, esi
call 0x6690
xor  edx, edx
xor  esi, esi
xor  edi, edi
call 0x61b0
mov  rdi, r14
xor  edx, edx
xor  esi, esi
call 0x5e20
lea  r14, [rip+0xc978]
mov  rdx, r12
mov  esi, ebp
mov  rdi, r14
call 0xa010
mov  rdi, r12
test eax, eax
je   0x694f
call 0x5bd0
cmp  QWORD PTR [rip+0xc9a3], 0x0
je   0x698a
mov  rax, QWORD PTR [rsp+0x18]
mov  rdi, QWORD PTR [rax]
call 0x5c20
test eax, eax
je   0x6b2a
mov  r13d, 0x1
lea  r12, [rip+0x6f47]
lea  r15, [rip+0x6f4d]
cmp  ebp, 0x1
jg   0x68a9
jmp  0x6922
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rsi, r15
call 0x6340
test eax, eax
jne  0x6b9b
add  r13, 0x1
cmp  rbx, r13
je   0x6922
mov  r14, QWORD PTR [rsp+0x18]
lea  rax, [r13*8+0x0]
mov  rsi, r12
mov  DWORD PTR [rsp+0xc], r13d
mov  QWORD PTR [rsp+0x10], rax
mov  rdi, QWORD PTR [r14+r13*8]
mov  QWORD PTR [rsp], rdi
call 0x6440
test eax, eax
je   0x68e9
mov  rdi, QWORD PTR [rsp]
cmp  BYTE PTR [rdi], 0x2d
jne  0x6890
cmp  BYTE PTR [rdi+0x1], 0x62
jne  0x6890
cmp  BYTE PTR [rdi+0x2], 0x0
jne  0x6890
mov  r12d, 0x2
sub  ebp, DWORD PTR [rsp+0xc]
mov  rdi, QWORD PTR [rsp+0x10]
lea  rcx, [r12+r13*1]
sub  rbx, r12
movsxd rdx, ebp
lea  rsi, [r14+rcx*8]
sub  rdx, r12
add  rdi, r14
shl  rdx, 0x3
call 0x6300
mov  rax, QWORD PTR [rsp+0x18]
mov  QWORD PTR [rax+rbx*8], 0x0
mov  rax, QWORD PTR [rsp+0x18]
xor  r9d, r9d
xor  r8d, r8d
mov  edx, 0x8
mov  rcx, QWORD PTR [rip+0xc8b7]
xor  r12d, r12d
mov  rdi, QWORD PTR [rax]
mov  rsi, rax
call 0x64c0
test al, al
sete r12b
jmp  0x695a
call 0x5bd0
mov  r12d, 0x1
add  rsp, 0x28
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rax, QWORD PTR [rsp+0x18]
lea  rdi, [rip+0x8650]
mov  r12d, 0x1
mov  rsi, QWORD PTR [rax]
xor  eax, eax
call 0x5e90
jmp  0x695a
mov  rdi, r14
lea  r12, [rip+0x11bc]
call 0xad30
mov  edi, 0x1
call 0x6190
xor  ecx, ecx
mov  rdx, r14
lea  rsi, [rip+0x3da1]
mov  rdi, rax
mov  rbp, rax
call 0x5d50
mov  rdi, QWORD PTR [rip+0xc867]
call 0x6480
mov  rdi, rbp
mov  rsi, rax
call 0x65d0
mov  rdi, rbp
call 0x6580
mov  edi, 0x2
call 0x6190
mov  rdx, QWORD PTR [rip+0xc83e]
xor  ecx, ecx
mov  rsi, r12
mov  rdi, rax
mov  rbp, rax
call 0x5d50
mov  rdi, QWORD PTR [rip+0xc827]
call 0x6480
mov  rdi, rbp
mov  rsi, rax
call 0x65d0
mov  rdi, rbp
call 0x6580
mov  edi, 0x3
call 0x6190
mov  rdx, QWORD PTR [rip+0xc7fe]
xor  ecx, ecx
mov  rsi, r12
mov  rdi, rax
mov  rbp, rax
call 0x5d50
mov  rdi, QWORD PTR [rip+0xc7e7]
call 0x6480
mov  rdi, rbp
mov  rsi, rax
call 0x65d0
mov  rdi, rbp
call 0x6580
mov  edi, 0xf
call 0x6190
mov  rdx, QWORD PTR [rip+0xc7be]
xor  ecx, ecx
mov  rsi, r12
mov  rdi, rax
mov  rbp, rax
call 0x5d50
mov  rdi, QWORD PTR [rip+0xc7a7]
call 0x6480
mov  rdi, rbp
mov  rsi, rax
call 0x65d0
mov  rdi, rbp
call 0x6580
mov  edi, 0xa
call 0x6190
xor  ecx, ecx
xor  edx, edx
lea  rsi, [rip+0x3202]
mov  rdi, rax
mov  rbp, rax
call 0x5d50
mov  rdi, QWORD PTR [rip+0xc768]
call 0x6480
mov  rdi, rbp
mov  rsi, rax
call 0x65d0
mov  rdi, rbp
call 0x6580
mov  esi, 0x1
mov  edi, 0xc
call 0x62f0
mov  esi, 0x1
mov  edi, 0xd
call 0x62f0
mov  rdi, r13
call 0x60e0
mov  rdi, r14
mov  QWORD PTR [rip+0xc740], rax
call 0xcc70
mov  rdi, QWORD PTR [rip+0xc6dc]
mov  r12d, eax
test rdi, rdi
je   0x695a
call 0x5c40
jmp  0x695a
mov  rax, QWORD PTR [rsp+0x18]
mov  rdi, QWORD PTR [rax]
call 0x60c0
mov  r12, rax
test rax, rax
je   0x6b53
mov  r14, QWORD PTR [rsp+0x18]
mov  rdi, rax
mov  rsi, QWORD PTR [r14]
call 0x6440
test eax, eax
jne  0x6b93
xor  edi, edi
call 0x5c30
mov  rdi, r12
mov  r13, rax
call 0x5bd0
mov  rax, QWORD PTR [rsp+0x18]
mov  rsi, r13
mov  edx, 0x2f
lea  rdi, [rip+0x693e]
mov  rcx, QWORD PTR [rax]
xor  eax, eax
call 0x6040
mov  rdi, r13
mov  r12, rax
call 0x6050
mov  r14, QWORD PTR [rsp+0x18]
mov  QWORD PTR [r14], r12
jmp  0x6868
mov  r14, QWORD PTR [rsp+0x18]
mov  r12d, 0x1
endbr64
mov  ecx, edi
mov  rdi, rsi
test rsi, rsi
je   0xcd38
lea  rdx, [rip+0x54c]
lea  rsi, [rip+0x54d]
jmp  0x60a0
nop  DWORD PTR [rax+0x0]
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rdi+0x88]
call 0x6480
cmp  QWORD PTR [rbx+0x60], 0x0
mov  r12, rax
je   0xb1b8
mov  rax, QWORD PTR [rbx+0x68]
lea  rdi, [rbx+0x70]
lea  r13, [rip+0x22ee]
mov  rsi, rax
call QWORD PTR [rax]
mov  QWORD PTR [rbx+0x90], rax
mov  rbp, rax
test rbp, rbp
je   0xb1a1
mov  rdi, QWORD PTR [rbx]
lea  rsi, [rip+0x21f7]
call 0x6440
xor  edx, edx
mov  r8d, eax
xor  eax, eax
test r8d, r8d
je   0xb207
push rax
lea  rcx, [rbx+0x70]
mov  r9, rbx
lea  r8, [rip+0xb84]
push rdx
mov  rsi, r13
mov  rdx, r12
mov  rdi, rbp
call 0x6200
mov  rdi, QWORD PTR [rbx+0x90]
lea  rsi, [rip+0x7ea7]
mov  QWORD PTR [rip+0x7eb0], rbx
call 0x5e50
mov  rdi, QWORD PTR [rbx+0x90]
lea  rsi, [rip+0x7ebd]
mov  QWORD PTR [rip+0x7ec6], rbx
call 0x5e50
pop  rax
pop  rdx
mov  eax, 0x1
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  edi, DWORD PTR [rbx+0x80]
test edi, edi
je   0xb228
call 0x5e10
mov  ecx, DWORD PTR [rbx+0x2c]
mov  QWORD PTR [rbx+0x90], rax
mov  rbp, rax
test ecx, ecx
jne  0xb2a0
mov  r13, QWORD PTR [rbx]
lea  rsi, [rip+0x2149]
mov  rdi, r13
call 0x6440
test eax, eax
jne  0xb2ac
cmp  QWORD PTR [rbx+0x90], 0x0
je   0xb1a1
lea  r13, [rip+0x2149]
mov  rdi, rbx
call 0x9d80
mov  rbp, QWORD PTR [rbx+0x90]
lea  rdx, [rip+0xffffffffffffd8d3]
jmp  0xb14d
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, QWORD PTR [rbx]
lea  rbp, [rip+0x1dd2]
mov  esi, 0x40
xor  eax, eax
lea  rdx, [rip+0x3708]
mov  rdi, rbp
call 0x6700
mov  esi, DWORD PTR [rbx+0x2c]
mov  QWORD PTR [rbx+0x90], 0x0
test esi, esi
jne  0xb1a1
mov  r13, QWORD PTR [rbx]
lea  rsi, [rip+0x20c7]
mov  rdi, r13
call 0x6440
test eax, eax
je   0xb1a1
xor  eax, eax
mov  rcx, r13
lea  rdx, [rip+0x36fc]
mov  rdi, rbp
mov  esi, 0x10
call 0x6700
xor  eax, eax
jmp  0xb1a6
nop  DWORD PTR [rax+rax*1+0x0]
lea  r13, [rip+0x20a1]
jmp  0xb129
lea  rbp, [rip+0x1d51]
endbr64
push r12
push rbp
sub  rsp, 0x8
mov  rbp, QWORD PTR [rip+0x6f8e]
test rbp, rbp
je   0xc130
mov  rdi, rbp
call 0x5e80
test eax, eax
sete al
add  rsp, 0x8
movzx  eax, al
pop  rbp
pop  r12
ret
nop
call 0x63d0
mov  r12, rax
test rax, rax
je   0xc178
mov  rdi, rax
xor  edx, edx
lea  rsi, [rip+0x1149]
xor  eax, eax
call 0x6500
mov  QWORD PTR [rip+0x6f49], rax
mov  rbp, rax
mov  rdi, r12
call 0x6000
test rbp, rbp
jne  0xc117
add  rsp, 0x8
xor  eax, eax
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
lea  rcx, [rip+0x2f41]
mov  esi, 0x10
xor  edi, edi
xor  eax, eax
lea  rdx, [rip+0x1ef1]
call 0x6700
mov  rbp, QWORD PTR [rip+0x6f05]
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  r13, QWORD PTR [rdi+0x28]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
call 0x63d0
mov  r12, rax
test rax, rax
je   0xc5a0
mov  edi, 0x20
call 0x64b0
xor  edx, edx
mov  rdi, r12
lea  rsi, [rip+0xf36]
mov  rbp, rax
xor  eax, eax
call 0x6500
xor  edx, edx
lea  rsi, [rip+0x13aa]
mov  rdi, r12
mov  QWORD PTR [rbp+0x0], rax
xor  eax, eax
call 0x6500
mov  rdi, r12
lea  r12, [rip+0x2cb9]
mov  QWORD PTR [rbp+0x8], rax
call 0x6050
mov  rdi, r13
call 0x9190
xor  edi, edi
mov  rcx, r12
mov  esi, 0x80
mov  DWORD PTR [rbp+0x18], eax
mov  r9d, eax
xor  eax, eax
lea  r8, [rip+0xed3]
lea  rdx, [rip+0x1372]
call 0x6700
lea  rcx, [rip+0x290c]
lea  rdx, [rip+0x1345]
mov  rdi, r13
lea  rsi, [rip+0xea4]
call 0x6410
xor  edi, edi
mov  esi, 0x80
mov  rcx, r12
mov  QWORD PTR [rbp+0x10], rax
mov  r8, rax
lea  rdx, [rip+0x29f6]
xor  eax, eax
call 0x6700
mov  QWORD PTR [rip+0x6ce8], rbp
mov  rdi, QWORD PTR [rbx+0x8]
lea  rsi, [rip+0x108e]
call 0x6440
test eax, eax
je   0xc460
mov  r12d, 0x1
mov  rax, QWORD PTR [rbx+0x40]
lea  rbp, [rip+0xce8]
mov  rdi, rbp
mov  rax, QWORD PTR [rax]
mov  rsi, QWORD PTR [rax]
call 0x6560
test eax, eax
jne  0xc580
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0xc600
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbx+0x40]
mov  rdx, rsp
xor  ecx, ecx
lea  rsi, [rip+0x1068]
mov  QWORD PTR [rsp], 0x0
call 0x6170
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0xc520
lea  r9, [rip+0xffffffffffffa93f]
xor  r8d, r8d
lea  rcx, [rip+0xffffffffffffc945]
mov  rdi, rbx
lea  rdx, [rip+0xffffffffffffd1fb]
lea  rsi, [rip+0x1289]
call QWORD PTR [rax+0x10]
mov  r12d, eax
test eax, eax
je   0xc520
mov  rax, QWORD PTR [rbx+0x40]
lea  rbp, [rip+0x1286]
mov  rdi, rbp
mov  rax, QWORD PTR [rax]
mov  rsi, QWORD PTR [rax]
call 0x6560
test eax, eax
jne  0xc5e0
mov  rax, QWORD PTR [rbx+0x40]
lea  rbp, [rip+0xc4a]
mov  rdi, rbp
mov  rax, QWORD PTR [rax]
mov  rsi, QWORD PTR [rax]
call 0x6560
test eax, eax
je   0xc41a
mov  rdi, QWORD PTR [rbx+0x40]
xor  r9d, r9d
xor  r8d, r8d
xor  ecx, ecx
lea  rdx, [rip+0xffffffffffffb4f5]
mov  rsi, rbp
call 0x6380
jmp  0xc41a
nop  DWORD PTR [rax+rax*1+0x0]
lea  rcx, [rip+0x2b39]
mov  esi, 0x40
xor  edi, edi
xor  eax, eax
lea  rdx, [rip+0x28e9]
call 0x6700
mov  rbp, QWORD PTR [rip+0x6ba5]
test rbp, rbp
je   0xc563
mov  rdi, QWORD PTR [rbp+0x0]
call 0x5bd0
mov  rdi, QWORD PTR [rbp+0x8]
call 0x5bd0
mov  rdi, QWORD PTR [rbp+0x10]
call 0x5bd0
mov  rdi, rbp
xor  r12d, r12d
call 0x5bd0
mov  QWORD PTR [rip+0x6b6f], 0x0
jmp  0xc43b
xchg ax, ax
mov  rdi, QWORD PTR [rbx+0x40]
xor  r9d, r9d
xor  r8d, r8d
xor  ecx, ecx
lea  rdx, [rip+0xfffffffffffffc0d]
mov  rsi, rbp
call 0x6380
jmp  0xc43b
xor  edi, edi
xor  eax, eax
lea  rcx, [rip+0x2a95]
mov  esi, 0x10
lea  rdx, [rip+0x27d9]
call 0x6700
lea  rcx, [rip+0x2a9d]
xor  edi, edi
xor  eax, eax
lea  rdx, [rip+0x27ea]
mov  esi, 0x10
call 0x6700
jmp  0xc43b
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbx+0x40]
xor  r9d, r9d
xor  r8d, r8d
xor  ecx, ecx
lea  rdx, [rip+0xffffffffffffc76d]
mov  rsi, rbp
call 0x6380
jmp  0xc4d7
endbr64
push r12
push rbp
mov  rbp, rdi
sub  rsp, 0x8
mov  rax, QWORD PTR [rdi+0x68]
test rax, rax
je   0xccc8
mov  rdx, rbp
lea  rdi, [rdi+0x70]
mov  rcx, rax
lea  rsi, [rip+0xffffffffffffff98]
call QWORD PTR [rax+0x8]
mov  rdi, QWORD PTR [rbp+0x58]
mov  r12d, eax
call 0x5e30
mov  QWORD PTR [rbp+0x68], 0x0
mov  eax, r12d
mov  QWORD PTR [rbp+0x58], 0x0
add  rsp, 0x8
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
call 0xb0e0
test eax, eax
je   0xccf8
mov  rdi, QWORD PTR [rbp+0x90]
test rdi, rdi
je   0xcce6
call 0x5c10
test eax, eax
je   0xccf8
add  rsp, 0x8
mov  rdi, rbp
pop  rbp
pop  r12
jmp  0xc610
nop  DWORD PTR [rax]
mov  r12d, 0x1
add  rsp, 0x8
mov  eax, r12d
pop  rbp
pop  r12
endbr64
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rdi+0xc8], 0xffffffffffffffff
mov  rdi, QWORD PTR [rdi+0x90]
test rdi, rdi
je   0xbc08
call 0x5d80
cmp  eax, 0x1
je   0xbb00
jbe  0xbae2
sub  eax, 0x2
cmp  eax, 0x1
ja   0xbc41
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0xbc3c
add  rsp, 0x10
pop  rbx
pop  rbp
pop  r12
ret
nop
xor  edx, edx
mov  esi, 0x2
mov  edi, 0x28
mov  DWORD PTR [rsp+0x4], 0xffffffff
call 0x6320
cmp  eax, 0xffffffff
jne  0xbc30
xor  esi, esi
lea  rdi, [rip+0x1b46]
xor  eax, eax
call 0x61d0
mov  ebp, eax
test eax, eax
js   0xbb98
xor  eax, eax
lea  rdx, [rsp+0x4]
mov  esi, 0x7b8
mov  edi, ebp
call 0x5cb0
test eax, eax
js   0xbbe8
mov  r12d, DWORD PTR [rsp+0x4]
test r12d, r12d
js   0xbbf0
mov  r8d, r12d
mov  ecx, ebp
lea  rdx, [rip+0x2fb3]
xor  eax, eax
mov  esi, 0x80
lea  rdi, [rip+0x1489]
call 0x6700
mov  DWORD PTR [rbx+0xcc], r12d
mov  DWORD PTR [rbx+0xc8], ebp
jmp  0xbae2
nop  WORD PTR [rax+rax*1+0x0]
xor  esi, esi
lea  rdi, [rip+0x2f5f]
xor  eax, eax
call 0x61d0
mov  ebp, eax
test eax, eax
jns  0xbb38
xchg ax, ax
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0xbc3c
lea  rdx, [rip+0x1ab5]
mov  esi, 0x10
add  rsp, 0x10
lea  rdi, [rip+0x142d]
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
jmp  0x6700
nop  WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rsp+0x4], 0xffffffff
mov  edi, ebp
call 0x5c90
cmp  DWORD PTR [rsp+0x4], 0xffffffff
jne  0xbae2
jmp  0xbbb0
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0xbc3c
lea  rdx, [rip+0x2ea9]
mov  esi, 0x80
jmp  0xbbcc
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  edi, eax
call 0x5c90
jmp  0xbae2
call 0x63f0
mov  edx, 0x233
lea  rsi, [rip+0x1a4d]
lea  rdi, [rip+0x1a51]
xor  eax, eax
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffffb91]
call QWORD PTR [rip+0xc423]
endbr64
push r13
mov  r13, rdi
xor  ecx, ecx
lea  rdx, [rip+0x17b7]
push r12
lea  rsi, [rip+0x155e]
push rbp
push rbx
sub  rsp, 0x18
mov  rdi, QWORD PTR [rdi+0x28]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
call 0x61e0
test eax, eax
jne  0xc070
mov  DWORD PTR [rip+0x734c], 0x0
mov  r12d, eax
mov  eax, 0x5
mov  DWORD PTR [rip+0x7342], 0x0
mov  DWORD PTR [rip+0x7378], 0x0
xchg DWORD PTR [rip+0x732e], eax
mov  rdi, QWORD PTR [r13+0x18]
call 0x6480
mov  edi, 0x3e8
mov  rbp, rax
call 0x65f0
mov  rbx, rax
test rax, rax
je   0xc050
xor  ecx, ecx
xor  edx, edx
lea  rsi, [rip+0xffffffffffffce65]
mov  rdi, rax
call 0x5d50
mov  rsi, rbp
mov  rdi, rbx
call 0x65d0
mov  rdi, QWORD PTR [r13+0x40]
xor  eax, eax
mov  rdx, rsp
xor  ecx, ecx
lea  rsi, [rip+0x14f8]
mov  QWORD PTR [rip+0x72e1], rbx
mov  QWORD PTR [rsp], 0x0
call 0x6170
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0xc090
xor  r8d, r8d
lea  r9, [rip+0xffffffffffffcce5]
lea  rcx, [rip+0xffffffffffffcd1e]
mov  rdi, r13
lea  rdx, [rip+0xffffffffffffcf14]
lea  rsi, [rip+0x16e0]
call QWORD PTR [rax+0x10]
test eax, eax
je   0xc090
mov  r12d, eax
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0xc0d6
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop
lea  rdx, [rip+0x2be1]
mov  esi, 0x40
xor  edi, edi
xor  eax, eax
call 0x6700
jmp  0xc02d
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x2ba1]
mov  esi, 0x40
xor  edi, edi
xor  eax, eax
call 0x6700
xor  r12d, r12d
jmp  0xc02d
nop  WORD PTR [rax+rax*1+0x0]
xor  edi, edi
lea  rdx, [rip+0x2bdf]
mov  esi, 0x40
xor  eax, eax
call 0x6700
mov  rdi, QWORD PTR [rip+0x721c]
test rdi, rdi
je   0xc02d
call 0x6540
mov  rdi, QWORD PTR [rip+0x7207]
call 0x6580
mov  QWORD PTR [rip+0x71f7], 0x0
jmp  0xc02d
endbr64
push r13
lea  r13, [rip+0x22c7]
lea  r8, [rip+0x272d]
mov  esi, 0x20
push r12
lea  rcx, [rip+0x272e]
lea  rdx, [rip+0x27d7]
push rbp
lea  r12, [rip+0x27c3]
push rbx
mov  rbx, rdi
mov  rdi, r13
sub  rsp, 0x28
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x8], r12
call 0x6700
call 0x6250
mov  DWORD PTR [rbx+0x70], 0x1
xor  esi, esi
mov  DWORD PTR [rbx+0x84], 0x0
mov  rbp, rax
mov  rax, QWORD PTR [rbx]
mov  rdi, rbp
mov  QWORD PTR [rbx+0x78], rax
call 0x5f90
mov  QWORD PTR [rbx+0x88], rax
call 0x5c00
mov  rdi, rbp
movsx  eax, al
mov  DWORD PTR [rbx+0x80], eax
call 0x6400
call 0x6130
mov  rdi, QWORD PTR [rip+0x8497]
test rdi, rdi
je   0xaec0
xor  esi, esi
xor  eax, eax
lea  rbp, [rbx+0x70]
call 0x5ff0
lea  rsi, [rsp+0x8]
mov  rdi, rax
mov  QWORD PTR [rbx+0xb0], rax
lea  rax, [rip+0xffffffffffffcc5b]
mov  QWORD PTR [rbx+0xb8], rax
call 0x7a60
mov  rdi, QWORD PTR [rbx+0xb0]
xor  ecx, ecx
xor  eax, eax
mov  rdx, rbp
mov  rsi, r12
call 0x6230
mov  edx, 0x1
lea  rsi, [rip+0x2715]
mov  rdi, rbp
call 0x7660
xor  edx, edx
lea  rsi, [rip+0x2706]
mov  rdi, rbp
call 0x7660
mov  rdi, rbp
call 0xab40
cmp  QWORD PTR [rbx+0x60], 0x0
je   0xae9c
lea  rdi, [rip+0x26f7]
mov  esi, 0x2
call 0x6550
mov  QWORD PTR [rbx+0x58], rax
mov  rdi, rax
test rax, rax
je   0xaee9
lea  rdx, [rsp+0x10]
lea  rsi, [rip+0x26e4]
call 0x62a0
test eax, eax
je   0xaf08
mov  rsi, QWORD PTR [rbx+0x60]
mov  rdi, rbp
call QWORD PTR [rsp+0x10]
mov  QWORD PTR [rbx+0x68], rax
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0xaf1e
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, 0x50
xor  ecx, ecx
lea  rdx, [rip+0x7892]
lea  rsi, [rip+0x2216]
call 0x6210
mov  QWORD PTR [rip+0x838f], rax
mov  rdi, rax
jmp  0xade2
lea  rdx, [rip+0x3a08]
mov  esi, 0x4
mov  rdi, r13
xor  eax, eax
call 0x6700
jmp  0xaeff
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x3a09]
mov  esi, 0x4
mov  rdi, r13
call 0x6700
jmp  0xaf1c
endbr64
push r14
lea  rdx, [rip+0x29a0]
push r13
push r12
lea  r12, [rip+0x2980]
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rip+0xffffffffffffdbb8]
mov  QWORD PTR [rip+0x85e1], rdi
lea  rbp, [rsp+0x10]
mov  QWORD PTR [rip+0x85b5], rax
lea  rax, [rip+0xffffffffffffdd0e]
mov  rcx, rbp
mov  QWORD PTR [rip+0x85ac], rax
lea  rax, [rip+0xffffffffffffde1d]
mov  QWORD PTR [rip+0x85a6], rax
mov  rsi, QWORD PTR [rdi+0x8]
mov  rdi, QWORD PTR [rdi+0x28]
mov  QWORD PTR [rsp+0x8], r12
mov  QWORD PTR [rsp+0x10], 0x0
call 0x6070
cmp  QWORD PTR [rsp+0x10], 0x0
je   0xaca0
mov  rdi, rbp
call 0x5df0
mov  edx, 0x5
mov  r8, rbp
xor  ecx, ecx
lea  rdi, [rip+0xffffffffffffdae6]
xor  esi, esi
call 0x5be0
mov  QWORD PTR [rip+0x8570], rax
mov  rax, QWORD PTR [rsp+0x10]
test rax, rax
je   0xacb0
mov  rcx, QWORD PTR [rax+0x8]
lea  rdi, [rip+0x23f3]
lea  rdx, [rip+0x3ca0]
xor  eax, eax
mov  esi, 0x10
call 0x6700
mov  rdi, rbp
call 0x5df0
lea  rdi, [rip+0x854d]
mov  DWORD PTR [rip+0x851b], 0x1
call 0x5fd0
call 0x6640
mov  QWORD PTR [rip+0x852a], rax
call 0x66d0
mov  rdi, QWORD PTR [rbx+0x40]
lea  rsi, [rsp+0x8]
mov  QWORD PTR [rip+0x850d], rax
call 0x7a60
mov  rdi, QWORD PTR [rbx+0x40]
xor  ecx, ecx
xor  eax, eax
lea  rdx, [rip+0x84c9]
mov  rsi, r12
call 0x6230
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0xad2a
add  rsp, 0x20
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
mov  edx, eax
test eax, eax
jg   0xabde
jmp  0xac2c
nop
mov  rsi, QWORD PTR [rbx+0x8]
mov  rdi, QWORD PTR [rbx+0x28]
mov  rcx, rbp
lea  rdx, [rip+0x283b]
call 0x6070
cmp  QWORD PTR [rsp+0x10], 0x0
jne  0xacd6
mov  r13d, eax
test eax, eax
jg   0xace4
mov  rdi, rbp
mov  r13d, 0x1388
call 0x5df0
mov  rsi, QWORD PTR [rbx+0x8]
mov  rdi, QWORD PTR [rbx+0x28]
mov  rcx, rbp
lea  rdx, [rip+0x2818]
call 0x6070
cmp  QWORD PTR [rsp+0x10], 0x0
mov  r14d, eax
jne  0xad0a
test eax, eax
jns  0xad15
mov  rdi, rbp
xor  r14d, r14d
call 0x5df0
mov  edi, r13d
call 0x61a0
mov  edi, r14d
call 0x6470
jmp  0xac2c
endbr64
mov  eax, DWORD PTR [rdi+0x2c]
test eax, eax
jne  0x9e48
sub  rsp, 0x8
mov  rdi, QWORD PTR [rdi]
lea  rsi, [rip+0x3506]
call 0x6440
mov  edx, 0x0
test eax, eax
lea  rax, [rip+0x3514]
cmovne rax, rdx
add  rsp, 0x8
ret
nop  DWORD PTR [rax]
lea  rax, [rip+0x34f9]
endbr64
push r12
push rbp
sub  rsp, 0x8
test rdi, rdi
je   0xcd90
lea  rcx, [rip+0x1f79]
lea  rdx, [rip+0x9b2]
lea  rsi, [rip+0x514]
call 0x6410
xor  esi, esi
mov  rbp, rax
mov  rdi, rax
call 0x94b0
mov  rdi, rbp
mov  r12d, eax
call 0x5bd0
add  rsp, 0x8
mov  eax, r12d
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax]
xor  eax, eax
mov  esi, 0x10
lea  rcx, [rip+0x2282]
mov  r12d, 0x1
lea  rdx, [rip+0x1305]
call 0x6700
add  rsp, 0x8
mov  eax, r12d
pop  rbp
pop  r12
endbr64
mov  DWORD PTR [rip+0x97f2], 0x0
endbr64
xor  ecx, ecx
lea  rdx, [rip+0x1184]
lea  rsi, [rip+0x1185]
jmp  0x6030
endbr64
push r13
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0xde33
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x4d148]
mov  rdi, QWORD PTR [rax]
call 0x8eb0
lea  rdx, [rsp+0xf0]
xor  edi, edi
lea  rcx, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], rdx
lea  rsi, [rip+0x33c3a]
mov  edx, 0x5
mov  r13, QWORD PTR [rip+0x4ef29]
mov  QWORD PTR [rsp+0x10], rcx
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
call 0x8b60
mov  rbx, QWORD PTR [rip+0x4d151]
mov  rcx, r13
mov  esi, 0x1
mov  rdx, rax
xor  eax, eax
mov  rdi, QWORD PTR [rbx]
call 0x90d0
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
call 0x89a0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
je   0xded4
call 0x8ba0
add  rsp, 0xd0
pop  rbx
pop  r12
pop  r13
endbr64
push r13
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x9828
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x51753]
mov  rdi, QWORD PTR [rax]
call 0x8eb0
lea  rdx, [rsp+0xf0]
xor  edi, edi
lea  rcx, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], rdx
lea  rsi, [rip+0x37948]
mov  edx, 0x5
mov  r13, QWORD PTR [rip+0x53534]
mov  QWORD PTR [rsp+0x10], rcx
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
call 0x8b60
mov  rbx, QWORD PTR [rip+0x5175c]
mov  rcx, r13
mov  esi, 0x1
mov  rdx, rax
xor  eax, eax
mov  rdi, QWORD PTR [rbx]
call 0x90d0
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
call 0x89a0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
je   0x98c9
call 0x8ba0
add  rsp, 0xd0
pop  rbx
pop  r12
pop  r13
ret
endbr64
push r14
xor  ecx, ecx
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
mov  r13, QWORD PTR [rdi+0x18]
sub  r13, QWORD PTR [rdi+0x10]
mov  rdx, QWORD PTR [rbx]
add  rsi, r13
mov  rax, r13
mov  rbp, QWORD PTR [rdi+0x8]
setb cl
add  rsi, QWORD PTR [rdi+0x30]
setb dil
shr  rax, 0x3
cmp  rsi, rdx
lea  rax, [rsi+rax*1+0x64]
cmovb  rsi, rdx
cmp  rax, rsi
cmovae rsi, rax
test rcx, rcx
jne  0xfd9f
movzx  edi, dil
test rdi, rdi
jne  0xfd9f
mov  rax, QWORD PTR [rbx+0x38]
mov  r14, rsi
test BYTE PTR [rbx+0x50], 0x1
jne  0xfd68
mov  rdi, rsi
call rax
mov  r12, rax
test r12, r12
je   0xfd9f
lea  rax, [r12+r14*1]
mov  QWORD PTR [rbx+0x8], r12
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdx, r13
mov  QWORD PTR [r12+0x8], rbp
mov  QWORD PTR [rbx+0x20], rax
mov  QWORD PTR [r12], rax
mov  rax, QWORD PTR [rbx+0x30]
lea  r14, [r12+rax*1+0x10]
not  rax
and  r14, rax
mov  rdi, r14
call 0x4a50
movzx  edx, BYTE PTR [rbx+0x50]
test dl, 0x2
jne  0xfd4d
mov  rax, QWORD PTR [rbx+0x30]
lea  rcx, [rbp+rax*1+0x10]
not  rax
and  rax, rcx
cmp  QWORD PTR [rbx+0x10], rax
je   0xfd78
mov  QWORD PTR [rbx+0x10], r14
add  r14, r13
mov  QWORD PTR [rbx+0x18], r14
and  BYTE PTR [rbx+0x50], 0xfd
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbx+0x48]
call rax
mov  r12, rax
jmp  0xfcf3
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbp+0x8]
and  edx, 0x1
mov  QWORD PTR [r12+0x8], rax
mov  rax, QWORD PTR [rbx+0x40]
je   0xfd98
mov  rdi, QWORD PTR [rbx+0x48]
mov  rsi, rbp
call rax
jmp  0xfd4d
nop  DWORD PTR [rax]
mov  rdi, rbp
call rax
jmp  0xfd4d
lea  rax, [rip+0x122fa]
endbr64
or   BYTE PTR [rdi+0x50], 0x1
mov  QWORD PTR [rdi+0x38], rcx
mov  QWORD PTR [rdi+0x40], r8
mov  QWORD PTR [rdi+0x48], r9
endbr64
mov  rax, QWORD PTR [rdi+0x8]
test rax, rax
je   0x106d6
nop  DWORD PTR [rax]
cmp  rsi, rax
jbe  0x106ba
cmp  QWORD PTR [rax], rsi
jae  0x106d0
mov  rax, QWORD PTR [rax+0x8]
test rax, rax
jne  0x106b0
xor  eax, eax
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  eax, 0x1
ret
endbr64
and  BYTE PTR [rdi+0x50], 0xfe
mov  QWORD PTR [rdi+0x38], rcx
mov  QWORD PTR [rdi+0x40], r8
endbr64
mov  rax, QWORD PTR [rdi+0x8]
xor  r8d, r8d
test rax, rax
je   0x10792
mov  rdx, QWORD PTR [rax]
sub  rdx, rax
mov  rax, QWORD PTR [rax+0x8]
add  r8, rdx
test rax, rax
jne  0x10780
mov  rax, r8
endbr64
push r12
mov  r12, rsi
push rbp
push rbx
mov  rsi, QWORD PTR [rdi+0x8]
mov  rbx, rdi
test rsi, rsi
jne  0x10712
jmp  0x1073b
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x48]
call rax
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
je   0x1073b
mov  rsi, rbp
cmp  rsi, r12
jae  0x1071f
mov  rax, QWORD PTR [rsi]
cmp  rax, r12
jae  0x10750
mov  rbp, QWORD PTR [rsi+0x8]
mov  rax, QWORD PTR [rbx+0x40]
test BYTE PTR [rbx+0x50], 0x1
jne  0x10700
mov  rdi, rsi
call rax
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
jne  0x1070f
test r12, r12
jne  0x4d0a
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rbx+0x18], r12
mov  QWORD PTR [rbx+0x10], r12
mov  QWORD PTR [rbx+0x20], rax
mov  QWORD PTR [rbx+0x8], rsi
pop  rbx
pop  rbp
pop  r12
ret
endbr64
cmp  BYTE PTR [rip+0x2d105], 0x0
jne  0x19f60
xor  eax, eax
ret
jmp  0x17940
endbr64
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
call 0x3930
mov  rbp, QWORD PTR [rip+0x47d3]
lea  r13, [rax+0x1]
cmp  QWORD PTR [rip+0x47d0], r13
mov  rbx, rax
jae  0x8ebe
mov  rdi, rbp
mov  rsi, r13
call 0x3c10
mov  rbp, rax
test rax, rax
je   0x8f20
mov  QWORD PTR [rip+0x47a9], rax
mov  QWORD PTR [rip+0x47aa], r13
mov  rsi, r12
mov  rdi, rbp
mov  rdx, r13
call 0x3820
mov  BYTE PTR [rbp+rbx*1+0x0], 0x0
mov  esi, 0xa
mov  rdi, rbp
call 0x39c0
test rax, rax
je   0x8ee6
mov  BYTE PTR [rax], 0x0
mov  ebx, 0x1
mov  r12, rsp
mov  QWORD PTR [r12+rbx*8-0x8], rbp
mov  esi, 0x3a
mov  rdi, rbp
call 0x3990
mov  edx, ebx
test rax, rax
je   0x8f28
mov  BYTE PTR [rax], 0x0
lea  rbp, [rax+0x1]
add  rbx, 0x1
cmp  edx, 0x3
jle  0x8eee
nop  WORD PTR [rax+rax*1+0x0]
xor  eax, eax
jmp  0x8fa1
nop  DWORD PTR [rax+0x0]
cmp  ebx, 0x4
jne  0x8f20
mov  rax, QWORD PTR [rsp]
cmp  QWORD PTR [rip+0x46ef], 0x0
mov  QWORD PTR [rip+0x4700], rax
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rip+0x46fc], rax
jne  0x8ff0
cmp  QWORD PTR [rip+0x46be], 0x0
jne  0x8fc0
mov  rdi, QWORD PTR [rsp+0x10]
lea  rdx, [rip+0x46c0]
lea  rsi, [rip+0x46b1]
call 0x7290
mov  rdi, QWORD PTR [rsp+0x18]
lea  rdx, [rip+0x4698]
lea  rsi, [rip+0x4689]
mov  QWORD PTR [rip+0x46c2], rax
call 0x7290
mov  QWORD PTR [rip+0x46be], rax
lea  rax, [rip+0x469f]
mov  rdx, QWORD PTR [rsp+0x28]
sub  rdx, QWORD PTR fs:0x28
jne  0x9017
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rip+0x4649]
mov  QWORD PTR [rip+0x4646], 0x0
call 0x37b0
mov  QWORD PTR [rip+0x462e], 0x0
jmp  0x8f5c
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x4629]
mov  QWORD PTR [rip+0x4626], 0x0
call 0x37b0
mov  QWORD PTR [rip+0x460e], 0x0
jmp  0x8f52
endbr64
test rsi, rsi
je   0x946f
push r15
push r14
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x28
test rdi, rdi
je   0x9468
mov  rax, QWORD PTR [rdi]
mov  r12, rsi
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x3930
mov  r13, rax
mov  rax, QWORD PTR [rbx+0x8]
mov  rdi, rax
mov  QWORD PTR [rsp+0x10], rax
call 0x3930
mov  rbp, QWORD PTR [rbx+0x10]
mov  QWORD PTR [rsp+0x18], rax
lea  r14, [r13+rax*1+0xa]
test rbp, rbp
je   0x92f6
mov  r15, rbp
jmp  0x92ea
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
call 0x3930
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0x92e0
mov  rbx, QWORD PTR [rbx+0x18]
test rbx, rbx
je   0x931e
mov  r15, rbx
jmp  0x9312
nop  DWORD PTR [rax+0x0]
call 0x3930
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0x9308
mov  rdi, r14
call 0x3b90
mov  r14, rax
test rax, rax
je   0x9468
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdx, r13
mov  rdi, rax
add  r13, r14
call 0x3b60
mov  r15, QWORD PTR [rsp+0x18]
mov  BYTE PTR [r13+0x0], 0x3a
lea  rcx, [r13+0x1]
mov  rsi, QWORD PTR [rsp+0x10]
mov  rdi, rcx
mov  rdx, r15
call 0x3b60
mov  rsi, QWORD PTR [rbp+0x0]
mov  rcx, rax
add  rcx, r15
mov  BYTE PTR [rcx], 0x3a
lea  r13, [rcx+0x1]
test rsi, rsi
je   0x9460
add  rbp, 0x8
jmp  0x938f
nop  DWORD PTR [rax+rax*1+0x0]
mov  BYTE PTR [rax], 0x2c
lea  r13, [rax+0x1]
mov  rdi, r13
add  rbp, 0x8
call 0x3850
mov  rdi, r13
call 0x3930
mov  rsi, QWORD PTR [rbp-0x8]
add  rax, r13
test rsi, rsi
jne  0x9388
mov  rsi, QWORD PTR [rbx]
mov  BYTE PTR [rax], 0x3a
lea  rbp, [rax+0x1]
test rsi, rsi
je   0x93f0
add  rbx, 0x8
jmp  0x93d0
nop  DWORD PTR [rax+0x0]
mov  BYTE PTR [rbp+0x0], 0x2c
add  rbp, 0x1
mov  rdi, rbp
add  rbx, 0x8
call 0x3850
mov  rdi, rbp
call 0x3930
mov  rsi, QWORD PTR [rbx-0x8]
add  rbp, rax
test rsi, rsi
jne  0x93c8
mov  eax, 0xa
mov  WORD PTR [rbp+0x0], ax
movsx  edi, BYTE PTR [r14]
test dil, dil
je   0x9440
mov  rbx, r14
jmp  0x941d
nop  WORD PTR [rax+rax*1+0x0]
movsx  edi, BYTE PTR [rbx+0x1]
add  rbx, 0x1
test dil, dil
je   0x9440
mov  rsi, r12
call 0x3b00
cmp  eax, 0xffffffff
jne  0x9410
mov  rdi, r14
mov  DWORD PTR [rsp+0x8], eax
call 0x37b0
mov  eax, DWORD PTR [rsp+0x8]
jmp  0x944a
nop  DWORD PTR [rax+0x0]
mov  rdi, r14
call 0x37b0
xor  eax, eax
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  rax, r13
jmp  0x93af
mov  eax, 0xffffffff
jmp  0x944a
or   eax, 0xffffffff
endbr64
cmp  QWORD PTR [rip+0x45dc], 0x0
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
je   0x9100
test r12, r12
je   0x9063
mov  esi, DWORD PTR [rip+0x45c0]
mov  rdi, QWORD PTR [rip+0x45b1]
mov  rdx, r12
call 0x7c50
mov  r14, QWORD PTR [rip+0x45a2]
cmp  r14, rax
je   0x90d7
pop  rbx
xor  eax, eax
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xchg ax, ax
mov  rdi, r12
call 0x3b40
test eax, eax
jne  0x9130
mov  rax, QWORD PTR [rip+0x4581]
mov  rdi, r14
lea  r13, [rax+rax*1]
mov  rsi, r13
call 0x3c10
mov  rbx, rax
test rax, rax
je   0x9063
mov  rdi, rax
mov  QWORD PTR [rip+0x4558], rax
mov  QWORD PTR [rip+0x4559], r13
call 0x3930
mov  esi, r13d
mov  rdx, r12
sub  esi, eax
lea  rdi, [rbx+rax*1]
mov  rbp, rax
call 0x7c50
mov  r14, QWORD PTR [rip+0x4531]
add  rbp, r14
cmp  rax, rbp
jne  0x9063
mov  esi, 0xa
mov  rdi, r14
call 0x39c0
test rax, rax
je   0x9070
mov  BYTE PTR [rax], 0x0
pop  rbx
mov  rdi, r14
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x8e60
nop  DWORD PTR [rax+0x0]
mov  edi, 0x2000
call 0x3b90
mov  QWORD PTR [rip+0x44ef], rax
test rax, rax
je   0x9063
mov  QWORD PTR [rip+0x44e3], 0x2000
jmp  0x903d
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0xa
mov  rdi, r14
call 0x39c0
test rax, rax
je   0x90ec
endbr64
mov  rdi, QWORD PTR [rip+0x4965]
test rdi, rdi
je   0x8e10
sub  rsp, 0x8
call 0x38f0
mov  QWORD PTR [rip+0x494c], 0x0
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rip+0x4935], 0x0
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x4598]
test rdi, rdi
je   0x9240
call 0x39a0
mov  rdi, QWORD PTR [rip+0x4583]
lea  r13, [rip+0xee8]
lea  rbp, [rip+0x1225]
jmp  0x9204
nop  DWORD PTR [rax]
call 0x9020
mov  r12, rax
test rax, rax
je   0x922b
mov  rsi, QWORD PTR [r12]
mov  rdi, rbx
call 0x3af0
test eax, eax
je   0x922b
mov  rdi, QWORD PTR [rip+0x454c]
test rdi, rdi
jne  0x91e0
mov  rsi, r13
mov  rdi, rbp
call 0x3d00
mov  rdi, rax
mov  QWORD PTR [rip+0x4532], rax
call 0x9020
mov  r12, rax
test rax, rax
jne  0x91ed
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  rdi, [rip+0x11b9]
lea  rsi, [rip+0xe6e]
call 0x3d00
mov  QWORD PTR [rip+0x44f6], rax
mov  rdi, rax
endbr64
mov  rdi, QWORD PTR [rip+0x45f5]
test rdi, rdi
je   0x9168
jmp  0x9020
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rdi, [rip+0x128d]
lea  rsi, [rip+0xf42]
call 0x3d00
mov  QWORD PTR [rip+0x45ca], rax
mov  rdi, rax
add  rsp, 0x8
endbr64
mov  rdi, QWORD PTR [rip+0x4925]
test rdi, rdi
je   0x8e38
jmp  0x39a0
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rsi, [rip+0x1279]
lea  rdi, [rip+0x15b6]
call 0x3d00
mov  QWORD PTR [rip+0x48fa], rax
add  rsp, 0x8
ret
endbr64
push r14
xor  edx, edx
push r13
push r12
push rbp
push rbx
mov  rbp, QWORD PTR [rdi+0x18]
mov  rbx, rdi
sub  rbp, QWORD PTR [rdi+0x10]
mov  r13, QWORD PTR [rdi+0x8]
add  rsi, rbp
mov  rax, QWORD PTR [rdi]
setb dl
add  rsi, QWORD PTR [rdi+0x30]
setb cl
test rdx, rdx
jne  0x26cfa
movzx  edi, cl
test rdi, rdi
jne  0x26cfa
mov  r8, rbp
mov  r14, QWORD PTR [rbx+0x38]
shr  r8, 0x3
cmp  rax, rsi
cmovb  rax, rsi
lea  r9, [rsi+r8*1+0x64]
cmp  r9, rax
cmovae rax, r9
mov  r12, rax
test BYTE PTR [rbx+0x50], 0x1
jne  0x55430
mov  rdi, rax
call r14
mov  r14, rax
test rax, rax
je   0x26cfa
mov  r10, QWORD PTR [rbx+0x30]
lea  rsi, [r14+r12*1]
mov  QWORD PTR [rbx+0x8], r14
mov  rdx, rbp
mov  QWORD PTR [r14+0x8], r13
lea  r12, [r14+r10*1+0x10]
mov  QWORD PTR [rbx+0x20], rsi
not  r10
mov  QWORD PTR [r14], rsi
and  r12, r10
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdi, r12
call 0x9d80
movzx  r11d, BYTE PTR [rbx+0x50]
test r11b, 0x2
jne  0x55468
mov  rcx, QWORD PTR [rbx+0x30]
lea  rdx, [r13+rcx*1+0x10]
not  rcx
and  rcx, rdx
cmp  QWORD PTR [rbx+0x10], rcx
je   0x55450
add  rbp, r12
movq xmm0, r12
and  r11d, 0xfffffffd
movq xmm2, rbp
mov  BYTE PTR [rbx+0x50], r11b
punpcklqdq xmm0, xmm2
movups XMMWORD PTR [rbx+0x10], xmm0
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x48]
mov  rsi, rax
call r14
mov  r14, rax
test rax, rax
jne  0x553af
jmp  0x26cfa
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [r13+0x8]
and  r11d, 0x1
mov  r8, QWORD PTR [rbx+0x40]
mov  QWORD PTR [r14+0x8], rax
jne  0x55490
mov  rdi, r13
call r8
add  rbp, r12
movq xmm3, r12
and  BYTE PTR [rbx+0x50], 0xfd
movq xmm1, rbp
punpcklqdq xmm3, xmm1
movups XMMWORD PTR [rbx+0x10], xmm3
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x48]
mov  rsi, r13
call r8
endbr64
or   BYTE PTR [rdi+0x50], 0x1
movq xmm0, rcx
movq xmm1, r8
mov  QWORD PTR [rdi+0x48], r9
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rdi+0x38], xmm0
endbr64
mov  rax, QWORD PTR [rdi+0x8]
test rax, rax
je   0x554d6
nop  DWORD PTR [rax]
cmp  rsi, rax
jbe  0x554ba
cmp  QWORD PTR [rax], rsi
jae  0x554d0
mov  rax, QWORD PTR [rax+0x8]
test rax, rax
jne  0x554b0
xor  eax, eax
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  eax, 0x1
ret
endbr64
and  BYTE PTR [rdi+0x50], 0xfe
movq xmm0, rcx
movq xmm1, r8
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rdi+0x38], xmm0
endbr64
mov  rax, QWORD PTR [rdi+0x8]
xor  r8d, r8d
test rax, rax
je   0x555a2
mov  rdx, QWORD PTR [rax]
sub  rdx, rax
mov  rax, QWORD PTR [rax+0x8]
add  r8, rdx
test rax, rax
jne  0x55590
mov  rax, r8
endbr64
push r12
mov  r12, rsi
push rbp
push rbx
mov  rsi, QWORD PTR [rdi+0x8]
mov  rbx, rdi
test rsi, rsi
jne  0x55512
jmp  0x5553b
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x48]
call rdx
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
je   0x5553b
mov  rsi, rbp
cmp  rsi, r12
jae  0x5551f
mov  rax, QWORD PTR [rsi]
cmp  rax, r12
jae  0x55550
mov  rbp, QWORD PTR [rsi+0x8]
mov  rdx, QWORD PTR [rbx+0x40]
test BYTE PTR [rbx+0x50], 0x1
jne  0x55500
mov  rdi, rsi
call rdx
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
jne  0x5550f
test r12, r12
jne  0x26fd2
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
movq xmm1, r12
movq xmm3, r12
movq xmm0, rsi
movq xmm2, rax
punpcklqdq xmm0, xmm1
punpcklqdq xmm3, xmm2
movups XMMWORD PTR [rbx+0x8], xmm0
movups XMMWORD PTR [rbx+0x18], xmm3
pop  rbx
pop  rbp
pop  r12
ret
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp], rcx
mov  QWORD PTR [rsp+0x10], r8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0xc8], rax
xor  eax, eax
test rdx, rdx
je   0xbf10
test rsi, rsi
je   0xbf50
mov  rbx, rdx
call 0x9e50
mov  QWORD PTR [rsp+0x18], rax
test rax, rax
je   0xbe6a
lea  rbp, [rip+0x1684]
mov  rdi, QWORD PTR [rsp+0x18]
lea  rcx, [rsp+0x38]
xor  eax, eax
mov  rdx, rbp
lea  r15, [rsp+0x20]
lea  r14, [rsp+0x28]
lea  rsi, [rip+0x17d2]
lea  r13, [rsp+0x30]
call 0x7350
mov  rdi, rbp
lea  rbp, [rsp+0x40]
lea  r12, [rip+0x1652]
call 0x7270
mov  rdi, rbp
mov  rsi, rax
call 0x7780
mov  DWORD PTR [rsp+0xc], 0x0
jmp  0xbdf6
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0xbe98
mov  rsi, QWORD PTR [rsp+0x28]
mov  rdi, rax
call 0x6fb0
test eax, eax
jne  0xbe98
mov  rax, QWORD PTR [rsp]
mov  r8, QWORD PTR [rsp+0x20]
mov  QWORD PTR [rsp+0x28], rax
mov  rax, QWORD PTR [rsp+0x10]
test rax, rax
je   0xbee0
mov  rsi, r8
mov  rdi, rax
call 0x6fb0
test eax, eax
jne  0xbebf
mov  r8, QWORD PTR [rsp+0x10]
mov  DWORD PTR [rsp+0xc], 0x1
mov  rcx, QWORD PTR [rsp+0x28]
mov  QWORD PTR [rsp+0x20], r8
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [rsp+0x30]
lea  rsi, [rip+0x15a9]
mov  rdi, rbp
xor  eax, eax
call 0x7560
mov  rdi, QWORD PTR [rsp+0x38]
xor  eax, eax
mov  r8, r15
mov  rcx, r14
mov  rdx, r13
mov  rsi, r12
call 0x7040
test eax, eax
je   0xbe38
mov  rsi, QWORD PTR [rsp+0x30]
mov  rdi, rbx
call 0x6fb0
test eax, eax
jne  0xbd70
mov  r8, QWORD PTR [rsp+0x20]
mov  rcx, QWORD PTR [rsp+0x28]
jmp  0xbde0
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rsp+0x38]
call 0x7d80
mov  eax, DWORD PTR [rsp+0xc]
test eax, eax
je   0xbf02
mov  rdi, rbp
call 0x7280
mov  rdi, QWORD PTR [rsp+0x18]
lea  rsi, [rip+0x16a0]
mov  rdx, rax
call 0x7570
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0xbf6c
add  rsp, 0xd8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x10]
test rax, rax
je   0xbeb7
mov  rsi, QWORD PTR [rsp+0x20]
mov  rdi, rax
call 0x6fb0
test eax, eax
je   0xbdc1
mov  edx, DWORD PTR [rsp+0xc]
test edx, edx
je   0xbef8
mov  DWORD PTR [rsp+0xc], 0x1
mov  r8, QWORD PTR [rsp+0x20]
mov  rcx, QWORD PTR [rsp+0x28]
jmp  0xbde0
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rsp+0xc], 0x1
mov  rcx, QWORD PTR [rsp]
jmp  0xbde0
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rsp+0x38]
call 0x7d80
mov  rdi, rbp
call 0x7260
jmp  0xbe6a
nop
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0xbf6c
lea  rdx, [rip+0x147a]
add  rsp, 0xd8
lea  rsi, [rip+0x1988]
lea  rdi, [rip+0x13e1]
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x7a80
xchg ax, ax
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0xbf6c
lea  rdx, [rip+0x1280]
jmp  0xbf2a
endbr64
push r15
push r14
push r13
push r12
mov  r12, rdi
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdx
sub  rsp, 0xc8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0xb8], rax
xor  eax, eax
call 0x9720
mov  rdi, r12
mov  rsi, rax
call 0x7060
test rbx, rbx
je   0xa3e8
test rbp, rbp
je   0xa430
mov  rdi, rax
mov  rsi, rbp
call 0x9e50
mov  r15, rax
test rax, rax
je   0xa393
lea  rcx, [rsp+0x28]
mov  rdi, r15
lea  r14, [rsp+0x10]
xor  eax, eax
lea  rbp, [rip+0x3094]
lea  rsi, [rip+0x31fb]
mov  rdx, rbp
lea  r13, [rsp+0x18]
lea  r12, [rsp+0x20]
call 0x7350
mov  rdi, rbp
lea  rbp, [rip+0x3078]
call 0x7270
mov  rsi, rax
lea  rax, [rsp+0x30]
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x7780
jmp  0xa351
nop
mov  rsi, QWORD PTR [rsp+0x20]
mov  rdi, rbx
call 0x6fb0
test eax, eax
je   0xa3c0
mov  rdi, QWORD PTR [rsp+0x28]
xor  eax, eax
mov  r8, r14
mov  rcx, r13
mov  rdx, r12
mov  rsi, rbp
call 0x7040
test eax, eax
jne  0xa340
mov  rdi, QWORD PTR [rsp+0x28]
call 0x7d80
mov  rdi, QWORD PTR [rsp+0x8]
call 0x7280
lea  rsi, [rip+0x317a]
mov  rdi, r15
mov  rdx, rax
call 0x7570
mov  rax, QWORD PTR [rsp+0xb8]
sub  rax, QWORD PTR fs:0x28
jne  0xa44c
add  rsp, 0xc8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  r8, QWORD PTR [rsp+0x10]
mov  rcx, QWORD PTR [rsp+0x18]
lea  rsi, [rip+0x2fc4]
mov  rdx, QWORD PTR [rsp+0x20]
mov  rdi, QWORD PTR [rsp+0x8]
call 0x7560
jmp  0xa351
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rsp+0xb8]
sub  rax, QWORD PTR fs:0x28
jne  0xa44c
lea  rdx, [rip+0x2fa2]
add  rsp, 0xc8
lea  rsi, [rip+0x3510]
lea  rdi, [rip+0x2f09]
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x7a80
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0xb8]
sub  rax, QWORD PTR fs:0x28
jne  0xa44c
lea  rdx, [rip+0x2da0]
jmp  0xa402
endbr64
mov  rax, QWORD PTR [rip+0x4e8d]
test rax, rax
je   0xc1a0
mov  rax, QWORD PTR [rip+0x4e81]
ret
nop  DWORD PTR [rax+rax*1+0x0]
push rbp
lea  rbp, [rip+0x4e70]
mov  rdi, rbp
call 0x71f0
test eax, eax
jne  0xc1c0
mov  rax, QWORD PTR [rip+0x4e5d]
pop  rbp
ret
nop  DWORD PTR [rax]
call 0x8b20
mov  rdi, rbp
mov  rsi, rax
call 0x7690
mov  rax, QWORD PTR [rip+0x4e41]
pop  rbp
endbr64
48 63 05 35 4f 00 00  movsxd rax, DWORD PTR [rip+0x4f35]
add  rdi, rax
mov  eax, DWORD PTR [rdi+0x8c]
mov  DWORD PTR [rsi], eax
mov  eax, DWORD PTR [rdi+0x90]
mov  DWORD PTR [rdx], eax
endbr64
push r12
mov  r12, rdi
call 0xc180
mov  rdx, r12
xor  ecx, ecx
pop  r12
mov  rdi, rax
lea  rsi, [rip+0x10e6]
xor  eax, eax
endbr64
push r14
push r13
push r12
mov  r12, rdi
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdx
sub  rsp, 0x30
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x18], 0x0
call 0x9720
mov  rdi, r12
mov  rsi, rax
call 0x7060
test rbx, rbx
je   0xa6b0
test rbp, rbp
je   0xa6d0
mov  rsi, rbp
mov  rdi, rax
call 0x9e50
mov  rbp, rax
xor  eax, eax
test rbp, rbp
je   0xa686
lea  r12, [rip+0x2efe]
mov  rdi, rbp
lea  r13, [rsp+0x18]
mov  rsi, r12
call 0x7c60
mov  rdi, rbp
lea  rcx, [rsp+0x20]
mov  rsi, r12
mov  r14, rax
lea  rdx, [rip+0x2d6b]
xor  eax, eax
call 0x7350
lea  rbp, [rip+0x2d64]
jmp  0xa651
nop  DWORD PTR [rax+0x0]
mov  rsi, QWORD PTR [rsp+0x18]
mov  rdi, rbx
call 0x6fb0
test eax, eax
jne  0xa6a8
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
xor  ecx, ecx
xor  eax, eax
mov  rdx, r13
mov  rsi, rbp
call 0x7040
test eax, eax
jne  0xa640
mov  rdi, QWORD PTR [rsp+0x20]
mov  DWORD PTR [rsp+0xc], eax
call 0x7d80
mov  rdi, r14
call 0x7b70
mov  eax, DWORD PTR [rsp+0xc]
mov  rdx, QWORD PTR [rsp+0x28]
sub  rdx, QWORD PTR fs:0x28
jne  0xa6ee
add  rsp, 0x30
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, 0x1
jmp  0xa66c
nop
lea  rdx, [rip+0x2ced]
lea  rsi, [rip+0x3232]
lea  rdi, [rip+0x2c5b]
call 0x7a80
xor  eax, eax
jmp  0xa686
xchg ax, ax
lea  rdx, [rip+0x2b13]
lea  rsi, [rip+0x3212]
lea  rdi, [rip+0x2c3b]
call 0x7a80
xor  eax, eax
jmp  0xa686
endbr64
push r15
push r14
push r13
mov  r13, rdi
push r12
mov  r12, rdx
push rbp
mov  rbp, rsi
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x10], rcx
mov  QWORD PTR [rsp+0x18], r8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0xc8], rax
xor  eax, eax
call 0x9720
mov  rdi, r13
mov  rsi, rax
call 0x7060
test r12, r12
je   0xa100
test rbp, rbp
je   0xa140
mov  rdi, rax
mov  rsi, rbp
call 0x9e50
mov  QWORD PTR [rsp+0x8], rax
test rax, rax
je   0xa0c3
lea  rbp, [rip+0x33b7]
mov  rdi, QWORD PTR [rsp+0x8]
lea  rcx, [rsp+0x38]
xor  eax, eax
mov  rdx, rbp
lea  r15, [rsp+0x20]
lea  r14, [rsp+0x28]
lea  rsi, [rip+0x3505]
lea  r13, [rsp+0x30]
call 0x7350
mov  rdi, rbp
lea  rbp, [rsp+0x40]
lea  rbx, [rip+0x3385]
call 0x7270
mov  rdi, rbp
mov  rsi, rax
call 0x7780
jmp  0xa063
nop  DWORD PTR [rax+rax*1+0x0]
mov  rsi, QWORD PTR [rsp+0x30]
mov  rdi, r12
call 0x6fb0
test eax, eax
jne  0xa0f0
mov  r8, QWORD PTR [rsp+0x20]
mov  rcx, QWORD PTR [rsp+0x28]
mov  rdi, rbp
lea  rsi, [rip+0x333c]
mov  rdx, QWORD PTR [rsp+0x30]
call 0x7560
mov  rdi, QWORD PTR [rsp+0x38]
xor  eax, eax
mov  r8, r15
mov  rcx, r14
mov  rdx, r13
mov  rsi, rbx
call 0x7040
test eax, eax
jne  0xa030
mov  rdi, QWORD PTR [rsp+0x38]
call 0x7d80
mov  r8, QWORD PTR [rsp+0x18]
mov  rdx, r12
mov  rdi, rbp
mov  rcx, QWORD PTR [rsp+0x10]
lea  rsi, [rip+0x32f5]
xor  eax, eax
call 0x7560
mov  rdi, rbp
call 0x7280
mov  rdi, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3447]
mov  rdx, rax
call 0x7570
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0xa15c
add  rsp, 0xd8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rsp+0x38]
call 0x7d80
jmp  0xa0c3
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0xa15c
lea  rdx, [rip+0x328a]
add  rsp, 0xd8
lea  rsi, [rip+0x3828]
lea  rdi, [rip+0x31f1]
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x7a80
xchg ax, ax
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0xa15c
lea  rdx, [rip+0x3090]
jmp  0xa11a
endbr64
push r13
lea  r13, [rip+0x5327]
push r12
mov  r12, rsi
lea  rsi, [rip+0x50a6]
push rbp
mov  ebp, edi
mov  edi, 0x6
call 0x7400
mov  rdi, r13
call 0x7cf0
mov  rdi, r13
lea  rsi, [rip+0x56fe]
call 0x7970
mov  rdi, r13
lea  rsi, [rip+0x5701]
call 0x7240
call 0x9c90
mov  r13, rax
call 0x79c0
mov  rdi, r13
mov  rsi, rax
call 0x7060
mov  rdx, r12
mov  esi, ebp
pop  rbp
mov  rdi, rax
pop  r12
pop  r13
endbr64
48 63 05 f5 71 00 00  movsxd rax, DWORD PTR [rip+0x71f5]
mov  rdi, QWORD PTR [rax+rdi*1+0x70]
endbr64
push rbp
mov  rbp, rdi
mov  rdi, rsi
call 0x7470
mov  rdi, rbp
xor  ecx, ecx
mov  edx, 0x1
mov  rsi, rax
pop  rbp
endbr64
push r15
push r14
push r13
mov  r13, rdi
push r12
push rbp
mov  rbp, rsi
push rbx
sub  rsp, 0x8
48 63 1d d1 71 00 00  movsxd rbx, DWORD PTR [rip+0x71d1]
add  rbx, rdi
mov  rdi, QWORD PTR [rbx+0x38]
call 0x7db0
mov  r12, rax
test rax, rax
je   0x9e98
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
xor  edx, edx
lea  rsi, [rip+0x316e]
mov  rdi, rbp
call 0x7680
xor  ecx, ecx
lea  rdx, [rip+0x33c6]
lea  rdi, [rip+0x3494]
mov  rsi, rax
mov  r12, rax
xor  eax, eax
call 0x7b50
mov  rdi, r12
mov  r14, rax
call 0x6fa0
mov  rsi, QWORD PTR [rbx+0x28]
test rsi, rsi
je   0x9f48
mov  rdx, r14
lea  rdi, [rip+0x3484]
call 0x7880
mov  r12, rax
mov  rdi, rbp
call 0x76c0
mov  rdi, QWORD PTR [rbx+0x38]
mov  rdx, r12
mov  r15, rax
mov  rsi, rax
call 0x7d30
mov  rdx, r15
mov  rdi, r12
lea  rsi, [rip+0x32d7]
call 0x72e0
mov  rdi, r12
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r13
lea  rdx, [rip+0xffffffffffffeac5]
lea  rsi, [rip+0x344f]
call 0x7100
mov  rdi, r14
call 0x6fa0
jmp  0x9e83
nop  DWORD PTR [rax+0x0]
mov  rsi, r14
lea  rdi, [rip+0x3416]
call 0x7e20
mov  r12, rax
endbr64
mov  rax, QWORD PTR [rip+0x790d]
test rax, rax
je   0x9740
mov  rax, QWORD PTR [rip+0x7901]
ret
nop  DWORD PTR [rax+rax*1+0x0]
push rbp
lea  rbp, [rip+0x78f0]
mov  rdi, rbp
call 0x71f0
test eax, eax
jne  0x9760
mov  rax, QWORD PTR [rip+0x78dd]
pop  rbp
ret
nop  DWORD PTR [rax]
call 0x83c0
mov  rdi, rbp
mov  rsi, rax
call 0x7690
mov  rax, QWORD PTR [rip+0x78c1]
pop  rbp
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xffffffffffffff61]
call QWORD PTR [rip+0x8fc3]
endbr64
sub  rsp, 0x8
call 0x9e50
lea  rsi, [rip+0x141e]
add  rsp, 0x8
mov  rdi, rax
endbr64
push rbp
mov  rbp, rdi
test rsi, rsi
je   0x9dd0
mov  rdi, rsi
call 0x7460
mov  rdi, rbp
xor  ecx, ecx
mov  edx, 0x1
mov  rsi, rax
pop  rbp
jmp  0x88e0
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x34fe]
call 0x7460
mov  rdi, rbp
mov  ecx, 0x1
pop  rbp
mov  rsi, rax
mov  edx, 0x1
endbr64
push r13
mov  esi, 0x10
push r12
push rbp
lea  rbp, [rip+0x3654]
mov  rdi, rbp
call 0x7000
test eax, eax
je   0x9d20
call 0x7f10
xor  ecx, ecx
xor  edx, edx
mov  rsi, rbp
mov  r12, rax
mov  rdi, rax
lea  rbp, [rip+0x3364]
call 0x7af0
mov  rsi, rbp
mov  rdi, r12
call 0x7430
xor  ecx, ecx
lea  rdx, [rip+0x3708]
test eax, eax
jne  0x9d88
lea  rsi, [rip+0x3616]
mov  rdi, r12
call 0x71d0
mov  r13, rax
mov  rdi, r13
xor  edx, edx
lea  rsi, [rip+0x3607]
xor  eax, eax
call 0x7b50
mov  rdi, r12
mov  rbp, rax
call 0x7450
jmp  0x9d32
nop  DWORD PTR [rax]
lea  rdi, [rip+0x35ef]
xor  r13d, r13d
call 0x76c0
mov  rbp, rax
call 0x9720
push 0x0
mov  rdx, rbp
mov  r8d, 0x8
push 0x1388
mov  rdi, rax
xor  eax, eax
lea  r9, [rip+0x35d2]
lea  rcx, [rip+0x35de]
lea  rsi, [rip+0x35dd]
call 0x7c00
mov  rdi, r13
mov  r12, rax
call 0x6fa0
mov  rdi, rbp
call 0x6fa0
pop  rax
mov  rax, r12
pop  rdx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  rsi, rbp
mov  rdi, r12
call 0x71d0
mov  r13, rax
endbr64
sub  rsp, 0x18
mov  esi, 0x50
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
48 63 05 fc 4e 00 00  movsxd rax, DWORD PTR [rip+0x4efc]
mov  rdi, QWORD PTR [rax+rdi*1+0x70]
call 0x7060
mov  rdx, rsp
xor  ecx, ecx
lea  rsi, [rip+0x1489]
mov  rdi, rax
xor  eax, eax
call 0x7320
mov  rax, QWORD PTR [rsp]
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0xc16d
add  rsp, 0x18
ret
call 0x7170
endbr64
push r15
push r14
push r13
push r12
push rbp
mov  ebp, edi
mov  edi, 0x6
push rbx
mov  rbx, rsi
lea  rsi, [rip+0x42fc]
sub  rsp, 0x1c8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1b8], rax
xor  eax, eax
mov  DWORD PTR [rsp+0x14], 0x1
mov  QWORD PTR [rsp+0x18], 0x0
call 0x3e60
lea  rsi, [rip+0x42c6]
lea  rdi, [rip+0x408f]
call 0x3930
mov  rdi, QWORD PTR [rbx]
call 0x3b40
lea  rsi, [rip+0x42bd]
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x3b60
test rax, rax
je   0x4704
mov  edx, 0x5
lea  rsi, [rip+0x48ed]
lea  rdi, [rip+0x4052]
mov  DWORD PTR [rip+0x9038], 0x1
mov  BYTE PTR [rip+0x9041], 0x0
call 0x3c90
mov  QWORD PTR [rip+0x9071], rax
lea  r14, [rip+0x85e2]
lea  r13, [rip+0x4322]
call 0x3e80
mov  QWORD PTR [rsp], 0x0
lea  r12, [rip+0x5857]
mov  QWORD PTR [rip+0x9128], rax
xor  r8d, r8d
mov  rcx, r14
mov  rdx, r13
mov  rsi, rbx
mov  edi, ebp
call 0x3c00
cmp  eax, 0xffffffff
je   0x47d1
sub  eax, 0x64
cmp  eax, 0xb1
ja   0x4090
movsxd rax, DWORD PTR [r12+rax*4]
add  rax, r12
notrack jmp rax
mov  edx, 0x5
lea  rsi, [rip+0x431d]
lea  rdi, [rip+0x3fc9]
call 0x3c90
lea  rcx, [rip+0x5ace]
mov  edx, 0x43a
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3f84]
xor  eax, eax
call 0x3a00
nop  WORD PTR [rax+rax*1+0x0]
xor  ebp, ebp
xor  r15d, r15d
mov  rdi, QWORD PTR [rip+0x910c]
test rdi, rdi
je   0x40a6
call 0x3af0
mov  rdi, QWORD PTR [rip+0x910b]
test rdi, rdi
je   0x40b7
call 0x3a90
mov  rdi, QWORD PTR [rip+0x90da]
test rdi, rdi
je   0x40d6
mov  rax, QWORD PTR [rip+0x90f6]
test rax, rax
je   0x4aaf
call QWORD PTR [rax+0x18]
test rbp, rbp
je   0x40f1
mov  rax, QWORD PTR [rip+0x90de]
test rax, rax
je   0x4af1
mov  rdi, rbp
call QWORD PTR [rax+0x38]
test r15, r15
je   0x4103
call 0x3ef0
mov  rdi, r15
call 0x3b70
mov  rdi, QWORD PTR [rip+0x9056]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x905a]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x8f4e]
call 0x3b20
mov  rdi, QWORD PTR [rsp]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x8f49]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x905d]
test rdi, rdi
je   0x414d
call 0x3d60
mov  rdi, QWORD PTR [rip+0x8ff4]
test rdi, rdi
je   0x415e
call 0x38e0
mov  eax, DWORD PTR [rsp+0x14]
mov  rdx, QWORD PTR [rsp+0x1b8]
sub  rdx, QWORD PTR fs:0x28
jne  0x533f
add  rsp, 0x1c8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rax, QWORD PTR [rip+0x8e3e]
lea  rsi, [rip+0x8e7b]
mov  rdi, QWORD PTR [rax]
call 0x3bd0
test eax, eax
jns  0x4020
mov  edx, 0x5
lea  rsi, [rip+0x545b]
lea  rdi, [rip+0x3e70]
call 0x3c90
lea  rcx, [rip+0x5975]
mov  edx, 0x3e8
mov  r8, rax
jmp  0x4b7c
mov  r15, QWORD PTR [rip+0x8df4]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
mov  DWORD PTR [rip+0x8ea7], eax
test eax, eax
jg   0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x53e0]
lea  rdi, [rip+0x3e1d]
call 0x3c90
lea  rcx, [rip+0x5922]
mov  edx, 0x3ba
mov  r8, rax
mov  r9, rbx
lea  rsi, [rip+0x3dd7]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
xor  r15d, r15d
jmp  0x4095
mov  r15, QWORD PTR [rip+0x8d89]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
mov  DWORD PTR [rip+0x8e4c], eax
test eax, eax
jg   0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x534d]
lea  rdi, [rip+0x3db2]
call 0x3c90
lea  rcx, [rip+0x58b7]
mov  edx, 0x3b3
mov  r8, rax
mov  r9, rbx
jmp  0x4226
call 0x3870
xor  ebp, ebp
xor  r15d, r15d
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  r15, QWORD PTR [rip+0x8d1f]
mov  rdi, QWORD PTR [r15]
test rdi, rdi
je   0x42cc
call 0x3c10
mov  DWORD PTR [rip+0x8d4c], eax
test eax, eax
js   0x4d73
mov  BYTE PTR [rip+0x8d59], 0x0
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8cf1]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x4d32
mov  rdi, QWORD PTR [rip+0x8e4e]
mov  rsi, rax
call 0x3c20
test eax, eax
js   0x4d32
mov  rdi, r15
call 0x3b20
jmp  0x4020
or   DWORD PTR [rip+0x8e67], 0x80000
jmp  0x4020
mov  BYTE PTR [rip+0x8cff], 0x1
jmp  0x4020
mov  r15, QWORD PTR [rip+0x8c97]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
cdqe
mov  QWORD PTR [rip+0x8d3f], rax
test rax, rax
jne  0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x527f]
lea  rdi, [rip+0x3cbc]
call 0x3c90
lea  rcx, [rip+0x57c1]
mov  edx, 0x3ac
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  r15, QWORD PTR [rip+0x8c3d]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
cdqe
mov  QWORD PTR [rip+0x8cf5], rax
test rax, rax
jne  0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x51fd]
lea  rdi, [rip+0x3c62]
call 0x3c90
lea  rcx, [rip+0x5767]
mov  edx, 0x3a5
mov  r8, rax
mov  r9, rbx
jmp  0x4226
or   DWORD PTR [rip+0x8d9b], 0x20
jmp  0x4020
or   DWORD PTR [rip+0x8d8f], 0x10
jmp  0x4020
or   DWORD PTR [rip+0x8d80], 0x100
jmp  0x4020
or   DWORD PTR [rip+0x8d71], 0x80
jmp  0x4020
or   DWORD PTR [rip+0x8d65], 0x40
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8ba1]
lea  rdi, [rip+0x8c8a]
mov  rsi, QWORD PTR [rax]
call 0x3d30
test rax, rax
je   0x507f
mov  BYTE PTR [rip+0x8c12], 0x1
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b76]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
mov  BYTE PTR [rip+0x8bf1], 0x1
mov  BYTE PTR [rip+0x8bb2], al
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b4e]
mov  rdi, QWORD PTR [rax]
call 0x39a0
mov  BYTE PTR [rip+0x8bd0], 0x1
mov  DWORD PTR [rip+0x8b89], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b2d]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
mov  BYTE PTR [rip+0x8ba8], 0x1
mov  DWORD PTR [rip+0x8b65], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b05]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
xor  edx, edx
mov  BYTE PTR [rip+0x8ba5], 0x1
test eax, eax
cmovs  eax, edx
mov  DWORD PTR [rip+0x8b2a], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8ad6]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x5258
mov  rdi, QWORD PTR [rip+0x8c33]
mov  rdx, rax
lea  rsi, [rip+0x3d9d]
call 0x3a40
test eax, eax
jns  0x430a
mov  r10, r15
mov  rbx, r15
mov  edx, 0x5
lea  rsi, [rip+0x3d89]
mov  QWORD PTR [rsp+0x8], r10
lea  rdi, [rip+0x3ae2]
call 0x3c90
mov  r9, rbx
mov  edx, 0x363
lea  rcx, [rip+0x55df]
mov  r8, rax
lea  rsi, [rip+0x3a9c]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
mov  rdi, QWORD PTR [rsp+0x8]
xor  r15d, r15d
call 0x3b20
jmp  0x4095
call 0x3880
mov  edx, 0x5
xor  ebp, ebp
xor  r15d, r15d
lea  rsi, [rip+0x4fe5]
lea  rdi, [rip+0x3a8a]
mov  rbx, rax
call 0x3c90
mov  r8, rbx
mov  edi, 0x1
lea  rcx, [rip+0x3cc9]
mov  rsi, rax
lea  rdx, [rip+0x3cc7]
xor  eax, eax
call 0x3920
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  BYTE PTR [rip+0x8bd2], 0x1
jmp  0x4020
mov  rdi, QWORD PTR [rsp]
call 0x3b20
mov  rax, QWORD PTR [rip+0x89dd]
mov  rdi, QWORD PTR [rax]
call 0x3a80
mov  QWORD PTR [rsp], rax
jmp  0x4020
mov  DWORD PTR [rip+0x8a0e], 0x0
jmp  0x4020
mov  DWORD PTR [rip+0x89ff], 0x1
jmp  0x4020
mov  rax, QWORD PTR [rip+0x89a7]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x526a
mov  rdi, QWORD PTR [rip+0x8b04]
mov  rdx, rax
lea  rsi, [rip+0x3c44]
call 0x3a40
test eax, eax
jns  0x430a
mov  r10, r15
mov  rbx, r15
mov  edx, 0x5
lea  rsi, [rip+0x3c36]
mov  QWORD PTR [rsp+0x8], r10
lea  rdi, [rip+0x39b3]
call 0x3c90
mov  r9, rbx
mov  edx, 0x354
lea  rcx, [rip+0x54b0]
mov  r8, rax
jmp  0x4561
mov  r12, QWORD PTR [rip+0x89cc]
mov  edx, 0x5
xor  ebp, ebp
xor  r15d, r15d
lea  rsi, [rip+0x435b]
lea  rdi, [rip+0x3978]
call 0x3c90
mov  rdx, QWORD PTR [rsp+0x8]
mov  rcx, r12
mov  edi, 0x1
mov  rsi, rax
xor  eax, eax
call 0x3920
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  rdi, QWORD PTR [rip+0x899c]
call 0x3b20
mov  rax, QWORD PTR [rip+0x88e0]
mov  rdi, QWORD PTR [rax]
call 0x3a80
mov  QWORD PTR [rip+0x8981], rax
jmp  0x4020
mov  rdi, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3b63]
call 0x3b60
test rax, rax
je   0x4748
mov  edx, 0x5
lea  rsi, [rip+0x41da]
lea  rdi, [rip+0x38ff]
mov  DWORD PTR [rip+0x88e5], 0x0
mov  BYTE PTR [rip+0x88ee], 0x0
call 0x3c90
jmp  0x3ff0
mov  r14, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3b26]
mov  rdi, r14
call 0x3b60
test rax, rax
je   0x478f
mov  edx, 0x5
lea  rsi, [rip+0x41e3]
lea  rdi, [rip+0x38b8]
mov  DWORD PTR [rip+0x889e], 0x0
mov  BYTE PTR [rip+0x88a7], 0x1
call 0x3c90
jmp  0x3ff0
lea  rsi, [rip+0x3ae8]
mov  rdi, r14
call 0x3b60
test rax, rax
jne  0x4761
mov  edx, 0x5
lea  rsi, [rip+0x4201]
lea  rdi, [rip+0x3876]
mov  DWORD PTR [rip+0x885c], 0x1
mov  BYTE PTR [rip+0x8865], 0x1
call 0x3c90
jmp  0x3ff0
lea  r12, [rip+0x8848]
mov  rdi, r12
call 0x3820
test eax, eax
je   0x4df9
mov  rax, QWORD PTR [rip+0x87c9]
movsxd rax, DWORD PTR [rax]
lea  edx, [rax+0x1]
cmp  edx, ebp
je   0x4da5
xor  r13d, r13d
cmp  eax, ebp
jl   0x4e51
cmp  BYTE PTR [rip+0x881d], 0x0
lea  r14, [rip+0x88aa]
je   0x4b96
cmp  BYTE PTR [rip+0x883d], 0x0
je   0x4c52
mov  rsi, r12
mov  rdi, r14
call 0x3b30
test eax, eax
je   0x4e25
cmp  BYTE PTR [rip+0x87e9], 0x0
jne  0x48ab
cmp  DWORD PTR [rip+0x87d0], 0x1
je   0x4f1b
mov  rdi, QWORD PTR [rip+0x8947]
mov  rsi, r14
call 0x3a50
test eax, eax
js   0x5043
mov  rdi, r12
call 0x3e50
mov  QWORD PTR [rip+0x88e0], rax
call 0x3e80
mov  rdi, QWORD PTR [rip+0x891c]
mov  rsi, rax
mov  rbp, rax
call 0x3a20
mov  rdi, QWORD PTR [rip+0x88b2]
mov  rdx, rbp
mov  esi, 0x1
call 0x3ee0
mov  rdi, rbp
call 0x38e0
cmp  BYTE PTR [rip+0x88fe], 0x0
jne  0x4c68
lea  rbp, [rip+0x39d3]
mov  rdi, QWORD PTR [rip+0x8882]
mov  rsi, rbp
call 0x38b0
test eax, eax
je   0x4cfd
lea  r14, [rip+0x39df]
mov  rdi, QWORD PTR [rip+0x8864]
mov  rsi, r14
call 0x38b0
test eax, eax
je   0x4b23
cmp  BYTE PTR [rip+0x8731], 0x0
je   0x490a
cmp  DWORD PTR [rip+0x8718], 0x1
je   0x5027
call 0x38f0
mov  r15, rax
test rax, rax
je   0x4ec2
mov  rdi, rax
call 0x3ab0
mov  rdi, rax
mov  QWORD PTR [rip+0x8893], rax
call 0x3bb0
test eax, eax
jne  0x510f
lea  rbp, [rip+0xe9f]
xor  edx, edx
mov  edi, 0x2
mov  rsi, rbp
call 0x3f00
xor  edx, edx
mov  rsi, rbp
mov  edi, 0xf
call 0x3f00
xor  edx, edx
mov  edi, 0xa
lea  rsi, [rip+0x3083]
call 0x3f00
call 0x3be0
cmp  BYTE PTR [rip+0x86ae], 0x0
je   0x49cf
cmp  DWORD PTR [rip+0x8695], 0x1
lea  rdx, [rip+0x2c02]
lea  rcx, [rip+0x281b]
mov  rax, QWORD PTR [rip+0x8824]
cmovne rcx, rdx
setne  dl
lea  r8, [rsp+0x18]
setne  sil
movzx  edx, dl
movzx  esi, sil
mov  rdi, rax
add  edx, 0x1
call QWORD PTR [rax+0x8]
mov  QWORD PTR [rip+0x87d5], rax
mov  rbp, rax
test rax, rax
je   0x5162
mov  rdx, QWORD PTR [rip+0x8772]
mov  rdi, QWORD PTR [rip+0x87e3]
xor  esi, esi
call 0x3cf0
mov  QWORD PTR [rip+0x87cd], rax
mov  rbp, rax
test rax, rax
je   0x4feb
xor  edx, edx
lea  rsi, [rip+0x21c0]
mov  rdi, rax
call 0x3d40
mov  rsi, QWORD PTR [rsp]
xor  ecx, ecx
xor  edx, edx
mov  rdi, QWORD PTR [rip+0x87a1]
call 0x39d0
test eax, eax
js   0x50cd
cmp  BYTE PTR [rip+0x8785], 0x0
je   0x4e7d
call 0x3d50
mov  rdi, QWORD PTR [rip+0x877b]
xor  ecx, ecx
lea  rdx, [rip+0x2fea]
lea  rsi, [rax+0xc350]
call 0x3e30
mov  rbp, rax
test rax, rax
je   0x5303
lea  rsi, [rsp+0x14]
mov  rdi, r15
call 0x3c30
test eax, eax
jns  0x4095
mov  edx, 0x5
lea  rsi, [rip+0x3986]
lea  rdi, [rip+0x35a6]
call 0x3c90
lea  rcx, [rip+0x50ab]
mov  edx, 0x4c7
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3561]
xor  eax, eax
call 0x3a00
jmp  0x4095
lea  rax, [rip+0x5082]
lea  rsi, [rip+0x3547]
push rdx
mov  edx, 0x4d3
push rax
lea  r9, [rip+0x371b]
lea  r8, [rip+0x3a4e]
push 0x4d3
lea  rcx, [rip+0x505f]
push rsi
xor  edi, edi
xor  eax, eax
call 0x3a00
add  rsp, 0x20
call 0x38c0
lea  rsi, [rip+0x350c]
push rax
lea  rax, [rip+0x5038]
mov  edx, 0x4d8
push rax
lea  r9, [rip+0x36d9]
lea  r8, [rip+0x3a0c]
push 0x4d8
lea  rcx, [rip+0x501d]
push rsi
jmp  0x4adf
mov  rdi, QWORD PTR [rip+0x861e]
test r13, r13
je   0x4f2f
mov  rdx, r13
mov  rsi, r14
call 0x3a40
mov  rdi, QWORD PTR [rip+0x8603]
mov  rsi, r14
call 0x38b0
test eax, eax
jne  0x48f4
mov  edx, 0x5
lea  rsi, [rip+0x3846]
lea  rdi, [rip+0x34c4]
call 0x3c90
lea  rcx, [rip+0x4fc9]
mov  edx, 0x48a
mov  r8, rax
lea  rsi, [rip+0x3481]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
xor  r15d, r15d
jmp  0x4095
lea  r14, [rsp+0x20]
xor  eax, eax
mov  ecx, 0x8
mov  esi, 0x10
mov  rdi, r14
rep stos DWORD PTR es:[rdi], eax
mov  eax, DWORD PTR [rip+0x846a]
test eax, eax
je   0x4f4f
xor  edi, edi
test eax, eax
mov  rdx, r14
sete dil
xor  ecx, ecx
call 0x39c0
mov  QWORD PTR [rip+0x85cd], rax
test rax, rax
je   0x4050
cmp  DWORD PTR [rip+0x8439], 0x1
lea  r14, [rip+0x84d6]
jne  0x481c
cmp  BYTE PTR [rip+0x846a], 0x0
jne  0x521c
mov  rdi, QWORD PTR [rip+0x859c]
mov  rsi, r12
call 0x3970
test eax, eax
js   0x52c7
cmp  BYTE PTR [rip+0x8445], 0x0
mov  BYTE PTR [rip+0x843f], 0x1
lea  r14, [rip+0x8497]
jne  0x481c
mov  rdi, QWORD PTR [rip+0x856a]
mov  rsi, r14
call 0x3f20
test eax, eax
js   0x5344
mov  BYTE PTR [rip+0x8413], 0x1
jmp  0x481c
0f b6 35 cf 83 00 00  movzx  esi, BYTE PTR [rip+0x83cf]
xor  edx, edx
mov  rdi, r14
call 0x3d70
jmp  0x4829
lea  rdi, [rsp+0x60]
mov  rdx, r14
mov  esi, 0x150
call 0x3ca0
mov  rdx, r12
lea  rdi, [rsp+0x40]
mov  esi, 0x20
mov  rbx, rax
call 0x3d10
cmp  DWORD PTR [rip+0x8386], 0x0
mov  edx, 0x5
mov  rbp, rax
jne  0x4f00
lea  rsi, [rip+0x36e9]
lea  rdi, [rip+0x337a]
call 0x3c90
mov  r14, rax
mov  edx, 0x5
lea  rsi, [rip+0x4aea]
lea  rdi, [rip+0x335f]
call 0x3c90
push rbx
lea  rsi, [rip+0x332a]
xor  edi, edi
push rbp
mov  r8, rax
mov  r9, r14
lea  rcx, [rip+0x4e53]
mov  edx, 0x471
xor  eax, eax
call 0x3a00
pop  rsi
pop  rdi
jmp  0x48b8
mov  rdi, QWORD PTR [rsp+0x8]
call 0x3c60
mov  r14, rax
test rax, rax
je   0x48d6
mov  rdi, QWORD PTR [rip+0x842e]
mov  rdx, rax
mov  rsi, rbp
call 0x3a40
mov  rdi, r14
call 0x3b20
jmp  0x48d6
mov  rdi, r15
call 0x3b20
mov  rax, QWORD PTR [rip+0x828f]
mov  edx, 0x5
lea  rsi, [rip+0x35ac]
lea  rdi, [rip+0x32d8]
mov  rbx, QWORD PTR [rax]
call 0x3c90
lea  rcx, [rip+0x4dda]
mov  edx, 0x3c6
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x358d]
lea  rdi, [rip+0x32a3]
call 0x3c90
lea  rcx, [rip+0x4da8]
mov  edx, 0x3d9
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  r13, QWORD PTR [rbx+rax*8]
xor  esi, esi
mov  eax, 0x241
mov  edx, 0x1b6
cmp  DWORD PTR [rip+0x8260], 0x1
cmovne esi, eax
mov  rdi, r13
call 0x3cd0
mov  ebp, eax
test eax, eax
js   0x4e84
xor  esi, esi
cmp  DWORD PTR [rip+0x8242], 0x1
mov  edi, eax
setne  sil
call 0x3810
test eax, eax
js   0x4fad
mov  edi, ebp
call 0x3c50
jmp  0x4808
mov  edx, 0x5
lea  rsi, [rip+0x352d]
lea  rdi, [rip+0x3220]
call 0x3c90
lea  rcx, [rip+0x4d25]
mov  edx, 0x3f3
mov  r8, rax
jmp  0x4b7c
mov  edx, 0x5
lea  rsi, [rip+0x491f]
lea  rdi, [rip+0x31f4]
call 0x3c90
lea  rcx, [rip+0x4cf9]
mov  edx, 0x457
mov  r8, rax
jmp  0x4b7c
mov  edx, 0x5
lea  rsi, [rip+0x3508]
lea  rdi, [rip+0x31c8]
call 0x3c90
lea  rcx, [rip+0x4ccd]
mov  edx, 0x409
mov  r8, rax
jmp  0x4b7c
xor  ebp, ebp
jmp  0x4a5e
call 0x3c70
mov  edi, DWORD PTR [rax]
call 0x3b50
mov  edx, 0x5
lea  rsi, [rip+0x34b3]
lea  rdi, [rip+0x3189]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x3fd
lea  rcx, [rip+0x4c83]
mov  r8, rax
jmp  0x4226
mov  edx, 0x5
lea  rsi, [rip+0x34f3]
lea  rdi, [rip+0x3157]
xor  ebp, ebp
call 0x3c90
lea  rcx, [rip+0x4c5a]
mov  edx, 0x494
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3110]
xor  eax, eax
call 0x3a00
jmp  0x4095
lea  rsi, [rip+0x3497]
lea  rdi, [rip+0x311e]
call 0x3c90
mov  r14, rax
jmp  0x4cba
mov  rdi, r12
call 0x3ed0
mov  QWORD PTR [rip+0x8266], rax
jmp  0x4878
mov  rsi, rbp
call 0x3df0
mov  r13, rax
test rax, rax
je   0x4b3e
mov  rdi, QWORD PTR [rip+0x81fe]
jmp  0x4b33
mov  rsi, r12
mov  rdi, r14
call 0x3d20
test eax, eax
js   0x528b
cmp  DWORD PTR [rip+0x80a7], 0x0
jle  0x519e
mov  edx, DWORD PTR [rip+0x809b]
mov  eax, DWORD PTR [rsp+0x30]
or   eax, edx
cmp  edx, 0x200000
je   0x5144
cmp  edx, 0x170000
je   0x5144
mov  DWORD PTR [rsp+0x30], eax
mov  eax, DWORD PTR [rip+0x807f]
cmp  eax, 0x1
sbb  esi, esi
and  esi, 0x10
add  esi, 0x10
jmp  0x4bba
call 0x3c70
mov  edi, DWORD PTR [rax]
call 0x3b50
mov  edx, 0x5
lea  rsi, [rip+0x3395]
lea  rdi, [rip+0x3060]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x402
lea  rcx, [rip+0x4b5a]
mov  r8, rax
jmp  0x4226
mov  edx, 0x5
lea  rsi, [rip+0x33f5]
lea  rdi, [rip+0x302e]
call 0x3c90
lea  rcx, [rip+0x4b33]
mov  edx, 0x4b2
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2fe9]
xor  eax, eax
call 0x3a00
jmp  0x4095
mov  rdi, r12
call 0x3a70
mov  rdi, rax
call 0x37d0
mov  QWORD PTR [rip+0x8032], rax
jmp  0x490a
mov  edx, 0x5
lea  rsi, [rip+0x4731]
lea  rdi, [rip+0x2fd6]
call 0x3c90
lea  rcx, [rip+0x4adb]
mov  edx, 0x462
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2f91]
xor  eax, eax
call 0x3a00
jmp  0x4869
mov  r15, rax
mov  rax, QWORD PTR [rip+0x7f47]
mov  edx, 0x5
lea  rsi, [rip+0x324b]
lea  rdi, [rip+0x2f90]
mov  rbx, QWORD PTR [rax]
call 0x3c90
lea  rcx, [rip+0x4a92]
mov  edx, 0x388
mov  r8, rax
mov  r9, rbx
lea  rsi, [rip+0x2f47]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
jmp  0x4095
mov  rdi, QWORD PTR [rip+0x80e4]
call 0x3aa0
mov  edi, eax
call 0x3850
mov  edx, 0x5
lea  rsi, [rip+0x473c]
lea  rdi, [rip+0x2f39]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x4ba
lea  rcx, [rip+0x4a33]
mov  r8, rax
jmp  0x50b6
lea  rax, [rip+0x4a22]
lea  rsi, [rip+0x2ee7]
push rcx
mov  edx, 0x49a
push rax
lea  r9, [rip+0x46d5]
lea  r8, [rip+0x33ee]
push 0x49a
lea  rcx, [rip+0x49ff]
push rsi
jmp  0x4adf
mov  ecx, eax
and  eax, 0xcfff0000
and  ecx, 0xcfffffff
or   eax, 0x60
cmp  edx, 0x200000
cmovne eax, ecx
jmp  0x4f93
mov  edx, 0x5
lea  rsi, [rip+0x326d]
lea  rdi, [rip+0x2eb7]
call 0x3c90
lea  rcx, [rip+0x49bc]
mov  edx, 0x4ab
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2e72]
xor  eax, eax
call 0x3a00
jmp  0x4095
test r13, r13
je   0x527c
mov  esi, 0x2e
mov  rdi, r13
call 0x3ae0
test rax, rax
je   0x527c
lea  rdi, [rax+0x1]
call 0x3c10
mov  DWORD PTR [rip+0x7e44], eax
test eax, eax
jle  0x527c
cmp  eax, 0x10000
jne  0x4f6f
0f b6 05 42 7e 00 00  movzx  eax, BYTE PTR [rip+0x7e42]
cmp  al, 0x2
ja   0x5203
cmp  BYTE PTR [rip+0x7e6f], 0x0
je   0x520d
cmp  al, 0x1
je   0x538d
cmp  al, 0x2
je   0x539f
mov  DWORD PTR [rip+0x7e03], 0x130000
mov  eax, DWORD PTR [rip+0x7dfd]
or   DWORD PTR [rsp+0x30], eax
jmp  0x4f97
mov  edx, 0x5
lea  rsi, [rip+0x4458]
lea  rdi, [rip+0x2dfd]
call 0x3c90
lea  rcx, [rip+0x4902]
mov  edx, 0x440
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2db8]
xor  eax, eax
call 0x3a00
jmp  0x4bfd
mov  r10, rax
mov  rax, QWORD PTR [rip+0x7d6e]
mov  rbx, QWORD PTR [rax]
jmp  0x4532
mov  r10, rax
mov  rax, QWORD PTR [rip+0x7d5c]
mov  rbx, QWORD PTR [rax]
jmp  0x4661
mov  DWORD PTR [rip+0x7d8a], 0x10000
jmp  0x51df
mov  edx, 0x5
lea  rsi, [rip+0x43b1]
lea  rdi, [rip+0x2d8e]
call 0x3c90
lea  rcx, [rip+0x4893]
mov  edx, 0x414
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2d49]
xor  eax, eax
call 0x3a00
jmp  0x4090
mov  edx, 0x5
lea  rsi, [rip+0x440d]
lea  rdi, [rip+0x2d52]
call 0x3c90
lea  rcx, [rip+0x4857]
mov  edx, 0x443
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2d0d]
xor  eax, eax
call 0x3a00
jmp  0x4090
mov  edx, 0x5
lea  rsi, [rip+0x4539]
lea  rdi, [rip+0x2d16]
call 0x3c90
lea  rcx, [rip+0x481b]
mov  edx, 0x4c0
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2cd1]
xor  eax, eax
call 0x3a00
jmp  0x4095
call 0x3cb0
cmp  BYTE PTR [rip+0x7cdd], 0x2
jbe  0x481c
mov  edx, 0x5
lea  rsi, [rip+0x43bb]
lea  rdi, [rip+0x2cc8]
call 0x3c90
lea  rcx, [rip+0x47cd]
mov  edx, 0x44c
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2c83]
xor  eax, eax
call 0x3a00
jmp  0x481c
cmp  DWORD PTR [rip+0x7d30], 0x0
jne  0x5203
jmp  0x520d
cmp  DWORD PTR [rip+0x7d1e], 0x1
jne  0x5203
cmp  DWORD PTR [rip+0x7d15], 0x2
jne  0x5203
jmp  0x520d
endbr64
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x32f8
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x5cb3]
mov  rdi, QWORD PTR [rax]
call 0x2460
lea  rdx, [rsp+0xf0]
xor  edi, edi
lea  rcx, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], rdx
lea  rsi, [rip+0x2eb1]
mov  edx, 0x5
mov  QWORD PTR [rsp+0x10], rcx
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
call 0x2390
mov  rbx, QWORD PTR [rip+0x5ca3]
mov  esi, 0x1
lea  rcx, [rip+0x2cd8]
mov  rdx, rax
xor  eax, eax
mov  rdi, QWORD PTR [rbx]
call 0x2510
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
call 0x2300
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
je   0x3396
call 0x23b0
add  rsp, 0xd8
pop  rbx
pop  r12
endbr64
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x294a
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x6661]
mov  rdi, QWORD PTR [rax]
call 0x2460
lea  rdx, [rsp+0xf0]
xor  edi, edi
lea  rcx, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], rdx
lea  rsi, [rip+0x37f3]
mov  edx, 0x5
mov  QWORD PTR [rsp+0x10], rcx
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
call 0x2390
mov  rbx, QWORD PTR [rip+0x6651]
mov  esi, 0x1
lea  rcx, [rip+0x3686]
mov  rdx, rax
xor  eax, eax
mov  rdi, QWORD PTR [rbx]
call 0x2510
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
call 0x2300
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
je   0x29e8
call 0x23b0
add  rsp, 0xd8
pop  rbx
pop  r12
ret
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x10
mov  QWORD PTR [rbp-0x8], rdi
mov  rcx, QWORD PTR [rip+0x1e180]
mov  rax, QWORD PTR [rbp-0x8]
mov  edx, 0x106
mov  rsi, rcx
mov  rdi, rax
call 0x1e36d
nop
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x1d0
mov  QWORD PTR [rbp-0x1b8], rdi
mov  DWORD PTR [rbp-0x1bc], esi
mov  DWORD PTR [rbp-0x1c0], edx
mov  QWORD PTR [rbp-0x1c8], rcx
mov  QWORD PTR [rbp-0x90], r8
mov  QWORD PTR [rbp-0x88], r9
test al, al
je   0x1e676
movaps XMMWORD PTR [rbp-0x80], xmm0
movaps XMMWORD PTR [rbp-0x70], xmm1
movaps XMMWORD PTR [rbp-0x60], xmm2
movaps XMMWORD PTR [rbp-0x50], xmm3
movaps XMMWORD PTR [rbp-0x40], xmm4
movaps XMMWORD PTR [rbp-0x30], xmm5
movaps XMMWORD PTR [rbp-0x20], xmm6
movaps XMMWORD PTR [rbp-0x10], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0xb8], rax
xor  eax, eax
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x1e6a7
mov  rax, QWORD PTR [rbp-0x1b8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x1e8b4
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x1e6be
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax+0x48]
jmp  0x1e6c5
mov  rax, QWORD PTR [rip+0x1fe9b]
mov  QWORD PTR [rbp-0x1a0], rax
cmp  QWORD PTR [rbp-0x1a0], 0x0
je   0x1e8b4
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rdi, rax
call 0x4e30
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x1e700
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x1e707
mov  rax, QWORD PTR [rip+0x1fe39]
mov  rdx, QWORD PTR [rbp-0x1a0]
mov  rsi, rdx
mov  rdi, rax
call 0x4b00
cmp  QWORD PTR [rbp-0x1c8], 0x0
je   0x1e798
mov  DWORD PTR [rbp-0x198], 0x20
mov  DWORD PTR [rbp-0x194], 0x30
lea  rax, [rbp+0x10]
mov  QWORD PTR [rbp-0x190], rax
lea  rax, [rbp-0xb0]
mov  QWORD PTR [rbp-0x188], rax
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x3a
call 0x4a30
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x20
call 0x4a30
lea  rdx, [rbp-0x198]
mov  rcx, QWORD PTR [rbp-0x1c8]
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rcx
mov  rdi, rax
call 0x4a60
cmp  DWORD PTR [rbp-0x1c0], 0x0
je   0x1e860
mov  QWORD PTR [rbp-0x1a8], 0x0
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x3a
call 0x4a30
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x20
call 0x4a30
lea  rcx, [rbp-0x180]
mov  eax, DWORD PTR [rbp-0x1c0]
mov  edx, 0xc8
mov  rsi, rcx
mov  edi, eax
call 0x49d0
mov  QWORD PTR [rbp-0x1a8], rax
cmp  QWORD PTR [rbp-0x1a8], 0x0
jne  0x1e847
mov  eax, DWORD PTR [rbp-0x1c0]
mov  edi, eax
call 0x4bb0
mov  QWORD PTR [rbp-0x1a8], rax
cmp  QWORD PTR [rbp-0x1a8], 0x0
jne  0x1e847
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax]
mov  rax, QWORD PTR [rax+0x30]
lea  rsi, [rip+0x17df3]
mov  rdi, rax
call 0x4830
mov  QWORD PTR [rbp-0x1a8], rax
mov  rdx, QWORD PTR [rbp-0x1a0]
mov  rax, QWORD PTR [rbp-0x1a8]
mov  rsi, rdx
mov  rdi, rax
call 0x4b00
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0xa
call 0x4a30
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rdi, rax
call 0x4e50
cmp  DWORD PTR [rbp-0x1bc], 0x0
je   0x1e8b4
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x1e8a7
mov  rax, QWORD PTR [rbp-0x1b8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x20
test eax, eax
jne  0x1e8b4
mov  eax, DWORD PTR [rbp-0x1bc]
mov  edi, eax
call 0x4940
nop
mov  rax, QWORD PTR [rbp-0xb8]
sub  rax, QWORD PTR fs:0x28
je   0x1e8cc
call 0x4d70
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x130
mov  QWORD PTR [rbp-0x108], rdi
mov  DWORD PTR [rbp-0x10c], esi
mov  QWORD PTR [rbp-0x118], rdx
mov  DWORD PTR [rbp-0x110], ecx
mov  QWORD PTR [rbp-0x120], r8
mov  QWORD PTR [rbp-0x128], r9
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x8], rax
xor  eax, eax
mov  DWORD PTR [rbp-0xf8], 0x0
mov  eax, DWORD PTR [rbp-0x110]
and  eax, 0x1
test eax, eax
jne  0x200b3
mov  rax, QWORD PTR [rip+0x1e4d0]
test rax, rax
jne  0x2008e
mov  rax, QWORD PTR [rbp-0x118]
mov  rax, QWORD PTR [rax]
mov  QWORD PTR [rip+0x1e4ba], rax
mov  rax, QWORD PTR [rip+0x1e4ab]
test rax, rax
jne  0x200b3
mov  rax, QWORD PTR [rbp-0x118]
mov  rax, QWORD PTR [rax]
mov  rdi, rax
call 0x204ae
mov  QWORD PTR [rip+0x1e48d], rax
mov  eax, DWORD PTR [rbp-0x110]
and  eax, 0x10
test eax, eax
jne  0x202a6
mov  eax, 0x10
sub  rax, 0x1
add  rax, 0x88
mov  esi, 0x10
mov  edx, 0x0
div  rsi
imul rax, rax, 0x10
mov  rcx, rax
and  rcx, 0xfffffffffffff000
mov  rdx, rsp
sub  rdx, rcx
cmp  rsp, rdx
je   0x2010b
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x200f4
mov  rdx, rax
and  edx, 0xfff
sub  rsp, rdx
mov  rdx, rax
and  edx, 0xfff
test rdx, rdx
je   0x20135
and  eax, 0xfff
sub  rax, 0x8
add  rax, rsp
or   QWORD PTR [rax], 0x0
mov  rax, rsp
add  rax, 0xf
shr  rax, 0x4
shl  rax, 0x4
mov  QWORD PTR [rbp-0xf0], rax
mov  eax, 0x10
sub  rax, 0x1
add  rax, 0x40
mov  edi, 0x10
mov  edx, 0x0
div  rdi
imul rax, rax, 0x10
mov  rcx, rax
and  rcx, 0xfffffffffffff000
mov  rdx, rsp
sub  rdx, rcx
cmp  rsp, rdx
je   0x20190
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x20179
mov  rdx, rax
and  edx, 0xfff
sub  rsp, rdx
mov  rdx, rax
and  edx, 0xfff
test rdx, rdx
je   0x201ba
and  eax, 0xfff
sub  rax, 0x8
add  rax, rsp
or   QWORD PTR [rax], 0x0
mov  rax, rsp
add  rax, 0xf
shr  rax, 0x4
shl  rax, 0x4
mov  QWORD PTR [rbp-0xe8], rax
mov  rax, QWORD PTR [rbp-0xe8]
mov  edx, 0x38
mov  esi, 0x0
mov  rdi, rax
call 0x4850
mov  rax, QWORD PTR [rbp-0xe8]
mov  rdx, QWORD PTR [rbp-0xf0]
mov  QWORD PTR [rax+0x20], rdx
mov  rax, QWORD PTR [rbp-0xf0]
mov  edx, 0x80
mov  esi, 0x0
mov  rdi, rax
call 0x4850
cmp  QWORD PTR [rbp-0x108], 0x0
je   0x2023a
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
mov  rdx, QWORD PTR [rbp-0x108]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
lea  rdx, [rip+0x1d6ad]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rip+0x2a8d3]
test rax, rax
jne  0x2026e
mov  rax, QWORD PTR [rip+0x1ddf7]
test rax, rax
je   0x2028a
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
lea  rdx, [rip+0x1d719]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbp-0xf0]
mov  QWORD PTR [rax], 0x0
mov  rax, QWORD PTR [rbp-0xe8]
mov  QWORD PTR [rbp-0x108], rax
mov  edi, DWORD PTR [rbp-0x110]
mov  r8, QWORD PTR [rbp-0x128]
mov  rcx, QWORD PTR [rbp-0x118]
mov  edx, DWORD PTR [rbp-0x10c]
mov  rsi, QWORD PTR [rbp-0x108]
lea  rax, [rbp-0xe0]
mov  r9, r8
mov  r8d, edi
mov  rdi, rax
call 0x1f164
mov  DWORD PTR [rbp-0xf4], eax
cmp  DWORD PTR [rbp-0xf4], 0x0
jne  0x2033d
jmp  0x2030c
lea  rdx, [rbp-0xf8]
lea  rax, [rbp-0xe0]
mov  rsi, rdx
mov  rdi, rax
call 0x1fd68
mov  DWORD PTR [rbp-0xf4], eax
cmp  DWORD PTR [rbp-0xf4], 0x0
je   0x202ed
mov  edx, DWORD PTR [rbp-0xf8]
mov  rcx, QWORD PTR [rbp-0x120]
mov  esi, DWORD PTR [rbp-0xf4]
lea  rax, [rbp-0xe0]
mov  rdi, rax
call 0x1f742
mov  DWORD PTR [rbp-0xf4], eax
mov  eax, DWORD PTR [rbp-0xf4]
mov  rdi, QWORD PTR [rbp-0x8]
sub  rdi, QWORD PTR fs:0x28
je   0x20357
call 0x4d70
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x20
mov  QWORD PTR [rbp-0x8], rdi
mov  QWORD PTR [rbp-0x10], rsi
mov  DWORD PTR [rbp-0x14], edx
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x1e39d
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x1e448
cmp  QWORD PTR [rbp-0x10], 0x0
je   0x1e448
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x1e3c4
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x40
test eax, eax
je   0x1e3c4
or   DWORD PTR [rbp-0x14], 0x80
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x1e3d5
mov  rax, QWORD PTR [rbp-0x8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x1e3dc
mov  rax, QWORD PTR [rip+0x20164]
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x1e3ec
mov  rdx, QWORD PTR [rbp-0x8]
mov  rdi, QWORD PTR [rdx]
jmp  0x1e3f1
mov  edi, 0x0
mov  ecx, DWORD PTR [rbp-0x14]
mov  rdx, QWORD PTR [rbp-0x10]
mov  rsi, QWORD PTR [rbp-0x8]
mov  r8, rax
call 0x1de25
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x1e419
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x20
test eax, eax
jne  0x1e448
mov  eax, DWORD PTR [rbp-0x14]
and  eax, 0x100
test eax, eax
je   0x1e432
mov  eax, DWORD PTR [rip+0x2005d]
mov  edi, eax
call 0x4940
mov  eax, DWORD PTR [rbp-0x14]
and  eax, 0x200
test eax, eax
je   0x1e448
mov  edi, 0x0
call 0x4940
nop
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0xf0
mov  QWORD PTR [rbp-0xe8], rdi
mov  QWORD PTR [rbp-0xf0], rsi
mov  QWORD PTR [rbp-0xa0], rdx
mov  QWORD PTR [rbp-0x98], rcx
mov  QWORD PTR [rbp-0x90], r8
mov  QWORD PTR [rbp-0x88], r9
test al, al
je   0x1e4a8
movaps XMMWORD PTR [rbp-0x80], xmm0
movaps XMMWORD PTR [rbp-0x70], xmm1
movaps XMMWORD PTR [rbp-0x60], xmm2
movaps XMMWORD PTR [rbp-0x50], xmm3
movaps XMMWORD PTR [rbp-0x40], xmm4
movaps XMMWORD PTR [rbp-0x30], xmm5
movaps XMMWORD PTR [rbp-0x20], xmm6
movaps XMMWORD PTR [rbp-0x10], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0xb8], rax
xor  eax, eax
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x1e4d9
mov  rax, QWORD PTR [rbp-0xe8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x1e601
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x1e4f0
mov  rax, QWORD PTR [rbp-0xe8]
mov  rax, QWORD PTR [rax+0x48]
jmp  0x1e4f7
mov  rax, QWORD PTR [rip+0x20069]
mov  QWORD PTR [rbp-0xd8], rax
cmp  QWORD PTR [rbp-0xd8], 0x0
je   0x1e601
mov  rax, QWORD PTR [rbp-0xd8]
mov  rdi, rax
call 0x4e30
mov  DWORD PTR [rbp-0xd0], 0x10
mov  DWORD PTR [rbp-0xcc], 0x30
lea  rax, [rbp+0x10]
mov  QWORD PTR [rbp-0xc8], rax
lea  rax, [rbp-0xb0]
mov  QWORD PTR [rbp-0xc0], rax
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x1e55f
mov  rax, QWORD PTR [rbp-0xe8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x1e566
mov  rax, QWORD PTR [rip+0x1ffda]
mov  rdx, QWORD PTR [rbp-0xd8]
mov  rsi, rdx
mov  rdi, rax
call 0x4b00
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0x3a
call 0x4a30
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0x20
call 0x4a30
lea  rdx, [rbp-0xd0]
mov  rcx, QWORD PTR [rbp-0xf0]
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rcx
mov  rdi, rax
call 0x4a60
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0xa
call 0x4a30
mov  rcx, QWORD PTR [rbp-0xd8]
mov  rax, QWORD PTR [rbp-0xe8]
mov  edx, 0x104
mov  rsi, rcx
mov  rdi, rax
call 0x1e36d
mov  rax, QWORD PTR [rbp-0xd8]
mov  rdi, rax
call 0x4e50
nop
mov  rax, QWORD PTR [rbp-0xb8]
sub  rax, QWORD PTR fs:0x28
je   0x1e619
call 0x4d70
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x20
mov  QWORD PTR [rbp-0x8], rdi
mov  QWORD PTR [rbp-0x10], rsi
mov  DWORD PTR [rbp-0x14], edx
mov  QWORD PTR [rbp-0x20], rcx
mov  rsi, QWORD PTR [rbp-0x20]
mov  ecx, DWORD PTR [rbp-0x14]
mov  rdx, QWORD PTR [rbp-0x10]
mov  rax, QWORD PTR [rbp-0x8]
mov  r8, rsi
mov  esi, 0x0
mov  rdi, rax
call 0x1de25
nop
leave
ret
endbr64
push r13
push r12
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rip+0x27120]
test rbx, rbx
jne  0x135f8
jmp  0x13628
nop
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x1360a
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdi, rbp
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x135f0
cmp  eax, 0xffffffff
je   0x13616
cmp  eax, 0x1
jne  0x13628
xor  eax, eax
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0x1811c]
mov  rdi, 0xffffffffffffffff
call 0x7290
test rax, rax
je   0x1364f
add  rsp, 0x8
mov  rdi, rbp
pop  rbx
pop  rbp
pop  r12
pop  r13
jmp  rax
cmp  BYTE PTR [rbp+0x0], 0x0
mov  r12, QWORD PTR [rip+0x25c46]
je   0x136d2
mov  esi, 0x3d
mov  rdi, rbp
call 0x73b0
test rax, rax
jne  0x136d2
mov  rdi, rbp
call 0x72d0
mov  r13, rax
jmp  0x1369d
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, r13
mov  rsi, rbx
mov  rdi, rbp
call 0x70a0
test eax, eax
jne  0x13699
cmp  BYTE PTR [rbx+r13*1], 0x3d
je   0x136ab
add  r12, 0x8
mov  rbx, QWORD PTR [r12]
test rbx, rbx
jne  0x13680
jmp  0x13614
mov  rax, QWORD PTR [r12+0x8]
mov  QWORD PTR [r12], rax
test rax, rax
je   0x13614
mov  rax, r12
mov  rdx, QWORD PTR [rax+0x10]
add  rax, 0x8
mov  QWORD PTR [rax], rdx
test rdx, rdx
jne  0x136c0
jmp  0x1369d
call 0x7070
mov  DWORD PTR [rax], 0x16
mov  eax, 0xffffffff
endbr64
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x10
mov  rbx, QWORD PTR [rip+0x27442]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
test rbx, rbx
je   0x13368
mov  rbp, rsp
jmp  0x13318
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x1332d
mov  rdx, QWORD PTR [rbx+0x10]
mov  rsi, rbp
mov  rdi, r12
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x13310
mov  r8, QWORD PTR [rsp]
cmp  eax, 0xffffffff
je   0x13360
cmp  eax, 0x1
jne  0x13368
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x13388
add  rsp, 0x10
mov  rax, r8
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
xor  r8d, r8d
jmp  0x1333b
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x13388
add  rsp, 0x10
mov  rdi, r12
pop  rbx
pop  rbp
pop  r12
jmp  0x13230
endbr64
push r14
push r13
mov  r13d, edx
push r12
mov  r12, rdi
push rbp
mov  rbp, rsi
push rbx
sub  rsp, 0x10
mov  rbx, QWORD PTR [rip+0x272d0]
test rbx, rbx
jne  0x13458
jmp  0x13490
nop  WORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x13470
mov  edx, r13d
mov  rcx, QWORD PTR [rbx+0x10]
mov  rsi, rbp
mov  rdi, r12
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x13450
cmp  eax, 0xffffffff
je   0x1347c
cmp  eax, 0x1
jne  0x13490
xor  eax, eax
add  rsp, 0x10
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0x182b6]
mov  rdi, 0xffffffffffffffff
call 0x7290
test rax, rax
je   0x134c0
add  rsp, 0x10
mov  edx, r13d
mov  rsi, rbp
mov  rdi, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  rax
nop
test r12, r12
je   0x135b4
movzx  ebx, BYTE PTR [r12]
test bl, bl
je   0x135b4
mov  rdi, rbp
call 0x72d0
cmp  bl, 0x3d
jne  0x134fb
lea  rdi, [rax+0x2]
call 0x77f0
mov  r14, rax
test rax, rax
jne  0x13546
mov  eax, 0xffffffff
jmp  0x1347c
mov  rdx, r12
movzx  ecx, BYTE PTR [rdx+0x1]
add  rdx, 0x1
test cl, cl
je   0x1350f
cmp  cl, 0x3d
jne  0x134fe
sub  rdx, r12
lea  rdi, [rax+rdx*1+0x2]
call 0x77f0
mov  r14, rax
test rax, rax
je   0x134f4
mov  rax, r14
mov  rdx, r12
nop  WORD PTR [rax+rax*1+0x0]
add  rdx, 0x1
mov  BYTE PTR [rax], bl
add  rax, 0x1
movzx  ebx, BYTE PTR [rdx]
test bl, bl
je   0x13546
cmp  bl, 0x3d
jne  0x13530
mov  BYTE PTR [rax], 0x3d
lea  rdx, [rax+0x1]
movzx  eax, BYTE PTR [rbp+0x0]
test al, al
je   0x1356a
nop  DWORD PTR [rax]
add  rbp, 0x1
mov  BYTE PTR [rdx], al
add  rdx, 0x1
movzx  eax, BYTE PTR [rbp+0x0]
test al, al
jne  0x13558
mov  BYTE PTR [rdx], 0x0
test r13d, r13d
jne  0x1358e
mov  rdi, r12
call 0x132d0
test rax, rax
je   0x1358e
mov  rdi, r14
call 0x6fe0
xor  eax, eax
jmp  0x1347c
mov  rdi, r14
call 0xb350
cmp  eax, 0xffffffff
jne  0x1347a
mov  rdi, r14
mov  DWORD PTR [rsp+0xc], eax
call 0x6fe0
mov  eax, DWORD PTR [rsp+0xc]
jmp  0x1347c
call 0x7070
mov  DWORD PTR [rax], 0x16
mov  eax, 0xffffffff
endbr64
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x8
mov  rbx, QWORD PTR [rip+0x27374]
test rbx, rbx
jne  0x133b8
jmp  0x133e0
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx]
test rbx, rbx
je   0x133ca
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdi, rbp
call QWORD PTR [rbx+0x8]
lea  edx, [rax+0x1]
and  edx, 0xfffffffd
jne  0x133b0
cmp  eax, 0xffffffff
je   0x133d6
cmp  eax, 0x1
jne  0x133e0
xor  eax, eax
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax]
mov  rdi, 0xffffffffffffffff
lea  rsi, [rip+0x18356]
call 0x7290
mov  rdi, rbp
test rax, rax
je   0x13408
add  rsp, 0x8
pop  rbx
pop  rbp
jmp  rax
nop  DWORD PTR [rax+rax*1+0x0]
add  rsp, 0x8
pop  rbx
pop  rbp
jmp  0xb350
endbr64
sub  rsp, 0x8
mov  eax, 0x1
test rdi, rdi
cmove  rdi, rax
mov  edi, edi
call 0x8710
test rax, rax
je   0x19205
add  rsp, 0x8
ret
mov  rdi, QWORD PTR [rip+0x1037c]
test rdi, rdi
je   0x19222
call 0x191c0
lea  rdi, [rip+0x50c9]
call 0x191c0
lea  rdi, [rip+0x4f1c]
call 0x191c0
or   edi, 0xffffffff
endbr64
test rdi, rdi
je   0x18f20
jmp  0x86b0
xchg ax, ax
endbr64
test rdi, rdi
je   0x193e0
jmp  0x86b0
xchg ax, ax
ret
endbr64
sub  rsp, 0x8
mov  eax, 0x1
test rdi, rdi
cmove  rdi, rax
mov  edi, edi
call 0x75c0
test rax, rax
je   0x10405
add  rsp, 0x8
ret
mov  rdi, QWORD PTR [rip+0xb5b4]
test rdi, rdi
je   0x10422
call 0xc4e0
lea  rdi, [rip+0xc31]
call 0xc4e0
lea  rdi, [rip+0x10d3]
call 0xc4e0
or   edi, 0xffffffff
endbr64
test rdi, rdi
je   0x10450
jmp  0x7560
xchg ax, ax
endbr64
test rdi, rdi
je   0x10470
jmp  0x7560
xchg ax, ax
ret
endbr64
push r14
push r13
mov  r13, rsi
push r12
mov  r12d, edi
push rbp
push rbx
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x16f8
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  rbp, QWORD PTR [rip+0x38e9]
call 0x1260
mov  r14, QWORD PTR [rbp+0x0]
mov  rbx, rax
mov  rcx, r14
test r12d, r12d
je   0x17c0
lea  rdi, [rip+0x18d6]
mov  edx, 0x7
mov  esi, 0x1
call 0x13e0
mov  edi, DWORD PTR [rbx]
test edi, edi
jne  0x1820
mov  rdi, QWORD PTR [rbp+0x0]
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
lea  rax, [rsp+0x100]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1250
test r12d, r12d
jg   0x1849
mov  DWORD PTR [rbx], 0x0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1844
add  rsp, 0xd0
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x184a]
mov  edx, 0x9
mov  esi, 0x1
call 0x13e0
mov  edi, DWORD PTR [rbx]
test edi, edi
jne  0x1820
mov  rdi, QWORD PTR [rbp+0x0]
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
lea  rax, [rsp+0x100]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1250
jmp  0x178a
nop  DWORD PTR [rax+rax*1+0x0]
call 0x1410
mov  rdi, QWORD PTR [rbp+0x0]
mov  esi, 0x1
lea  rdx, [rip+0x17d7]
mov  rcx, rax
xor  eax, eax
call 0x13f0
jmp  0x1747
call 0x12b0
mov  edi, r12d
call 0x13d0
endbr64
push rbp
mov  r10, rsi
mov  ebp, edi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x2230
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rcx, rsp
mov  rdx, r10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  esi, 0x1
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rip+0x5d8f]
mov  DWORD PTR [rsp], 0x10
mov  rdi, QWORD PTR [rax]
mov  DWORD PTR [rsp+0x4], 0x30
call 0x1270
test ebp, ebp
jne  0x229d
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x22a4
add  rsp, 0xd0
pop  rbp
ret
mov  edi, ebp
call 0x13f0
call 0x12e0
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffffe71]
call QWORD PTR [rip+0x2be3]
endbr64
push r14
lea  r14, [rip+0xd8d]
push r13
mov  r13, rsi
push r12
mov  r12d, edi
push rbp
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
call 0x1220
mov  rbp, rax
call 0x1200
lea  rsi, [rip+0xd49]
mov  edi, 0x6
call 0x1210
call 0x1190
mov  rdi, r14
mov  rsi, rax
call 0x11a0
lea  rsi, [rip+0xd23]
mov  rdi, r14
call 0x11b0
mov  rdi, r14
call 0x1240
xor  r9d, r9d
mov  r8d, 0xc
xor  eax, eax
lea  rcx, [rip+0xd07]
lea  rdx, [rip+0xd06]
mov  rdi, rbp
lea  rsi, [rip+0xd0c]
call 0x1230
mov  rbp, rax
mov  QWORD PTR [rsp], rax
call 0x11d0
mov  rdi, rbp
mov  rsi, rax
call 0x1170
mov  rdx, r13
mov  esi, r12d
mov  rdi, rax
call 0x1160
mov  r12d, eax
call 0x1270
mov  rdi, QWORD PTR [rsp]
mov  esi, 0x50
call 0x1170
mov  rdi, rax
call 0x11e0
mov  rdi, QWORD PTR [rsp]
mov  esi, 0x50
call 0x1170
mov  rsi, rsp
mov  rdi, rax
call 0x11c0
mov  rdi, QWORD PTR [rsp]
call 0x1250
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x13bb
mov  esi, 0x50
call 0x1170
mov  edx, 0xa1
lea  r8, [rip+0xc92]
lea  rcx, [rip+0xcb1]
mov  r9d, DWORD PTR [rax+0x8]
lea  rsi, [rip+0xc95]
mov  edi, 0x100
xor  eax, eax
call 0x11f0
call 0x1260
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x13df
add  rsp, 0x18
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
pop  r14
ret
call 0x1180
endbr64
push rax
pop  rax
mov  rsi, rdi
sub  rsp, 0x8
mov  edi, 0x5
call 0x10000
endbr64
push rbp
mov  r10, rsi
mov  ebp, edi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x2470
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rcx, rsp
mov  rdx, r10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  esi, 0x1
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rip+0x5b4f]
mov  DWORD PTR [rsp], 0x10
mov  rdi, QWORD PTR [rax]
mov  DWORD PTR [rsp+0x4], 0x30
call 0x12b0
test ebp, ebp
jne  0x24dd
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x24e4
add  rsp, 0xd0
pop  rbp
ret
mov  edi, ebp
call 0x1450
call 0x1320
endbr64
push r14
xor  ecx, ecx
push r13
push r12
push rbp
push rbx
mov  r12, QWORD PTR [rdi+0x18]
mov  rbx, rdi
sub  r12, QWORD PTR [rdi+0x10]
mov  rbp, QWORD PTR [rdi+0x8]
add  rsi, r12
mov  rax, r12
setb cl
add  rsi, QWORD PTR [rdi+0x30]
mov  rdi, QWORD PTR [rdi]
setb dl
shr  rax, 0x3
cmp  rsi, rdi
lea  r14, [rsi+rax*1+0x64]
cmovb  rsi, rdi
cmp  r14, rsi
cmovb  r14, rsi
test rcx, rcx
jne  0x4074f3
movzx  esi, dl
test rsi, rsi
jne  0x4074f3
mov  r13, QWORD PTR [rbx+0x38]
test BYTE PTR [rbx+0x50], 0x1
jne  0x4074e1
mov  rdi, r14
call r13
mov  r13, rax
test r13, r13
je   0x4074f3
mov  r8, QWORD PTR [rbx+0x30]
add  r14, r13
mov  QWORD PTR [rbx+0x8], r13
mov  rdx, r12
mov  QWORD PTR [r13+0x8], rbp
mov  rsi, QWORD PTR [rbx+0x10]
mov  QWORD PTR [rbx+0x20], r14
mov  QWORD PTR [r13+0x0], r14
lea  r14, [r13+r8*1+0x10]
not  r8
and  r14, r8
mov  rdi, r14
call 0x4028b0
movzx  r9d, BYTE PTR [rbx+0x50]
test r9b, 0x2
jne  0x419d2d
mov  r10, QWORD PTR [rbx+0x30]
lea  r11, [rbp+r10*1+0x10]
not  r10
and  r10, r11
cmp  QWORD PTR [rbx+0x10], r10
je   0x419d4f
add  r12, r14
movq xmm0, r14
and  BYTE PTR [rbx+0x50], 0xfd
movq xmm1, r12
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rbx+0x10], xmm0
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
mov  rcx, QWORD PTR [rbp+0x8]
and  r9b, 0x1
mov  rdx, QWORD PTR [rbx+0x40]
mov  QWORD PTR [r13+0x8], rcx
jne  0x40750b
mov  rdi, rbp
call rdx
endbr64
or   BYTE PTR [rdi+0x50], 0x1
movq xmm0, rcx
movq xmm1, r8
mov  QWORD PTR [rdi+0x48], r9
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rdi+0x38], xmm0
endbr64
mov  rdx, QWORD PTR [rdi+0x8]
test rdx, rdx
je   0x415e83
cmp  rdx, rsi
jb   0x415e7e
mov  rdx, QWORD PTR [rdx+0x8]
jmp  0x415e6e
cmp  QWORD PTR [rdx], rsi
jb   0x415e78
test rdx, rdx
setne  al
movzx  eax, al
endbr64
and  BYTE PTR [rdi+0x50], 0xfe
movq xmm0, rcx
movq xmm1, r8
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rdi+0x38], xmm0
endbr64
mov  rax, QWORD PTR [rdi+0x8]
xor  r8d, r8d
test rax, rax
je   0x415eac
mov  rdx, QWORD PTR [rax]
sub  rdx, rax
mov  rax, QWORD PTR [rax+0x8]
add  r8, rdx
jmp  0x415e98
mov  rax, r8
endbr64
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
mov  rdi, QWORD PTR [rdi+0x8]
test rdi, rdi
je   0x418e50
cmp  rdi, rbp
jb   0x418e5e
mov  r12, QWORD PTR [rdi+0x8]
mov  rdx, QWORD PTR [rbx+0x40]
test BYTE PTR [rbx+0x50], 0x1
jne  0x418e93
cmp  rdx, 0x418ea0
jne  0x418e8c
mov  rcx, QWORD PTR [rdi]
sub  rcx, rdi
cmp  rcx, 0x10000
jne  0x418e39
mov  rsi, QWORD PTR [rip+0x2c87f]
mov  QWORD PTR [rdi], rsi
mov  QWORD PTR [rip+0x2c875], rdi
or   BYTE PTR [rbx+0x50], 0x2
test r12, r12
je   0x418e50
mov  rdi, r12
jmp  0x418de7
call 0x4025a0
mov  rdi, r12
or   BYTE PTR [rbx+0x50], 0x2
test r12, r12
jne  0x418de7
nop  WORD PTR [rax+rax*1+0x0]
test rbp, rbp
jne  0x402bff
pop  rbx
pop  rbp
pop  r12
ret
mov  rax, QWORD PTR [rdi]
cmp  rax, rbp
jb   0x418dec
movq xmm0, rdi
movq xmm1, rbp
movq xmm3, rbp
movq xmm2, rax
punpcklqdq xmm0, xmm1
punpcklqdq xmm3, xmm2
movups XMMWORD PTR [rbx+0x8], xmm0
movups XMMWORD PTR [rbx+0x18], xmm3
jmp  0x418e59
call rdx
mov  rdi, r12
jmp  0x418e41
jmp  0x402c04
endbr64
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
call 0x3650
mov  rbp, QWORD PTR [rip+0x4163]
lea  r13, [rax+0x1]
cmp  QWORD PTR [rip+0x4160], r13
mov  rbx, rax
jae  0x646e
mov  rdi, rbp
mov  rsi, r13
call 0x3860
mov  rbp, rax
test rax, rax
je   0x64d0
mov  QWORD PTR [rip+0x4139], rax
mov  QWORD PTR [rip+0x413a], r13
mov  rsi, r12
mov  rdi, rbp
mov  rdx, r13
call 0x35a0
mov  BYTE PTR [rbp+rbx*1+0x0], 0x0
mov  esi, 0xa
mov  rdi, rbp
call 0x36f0
test rax, rax
je   0x6496
mov  BYTE PTR [rax], 0x0
mov  ebx, 0x1
mov  r12, rsp
mov  QWORD PTR [r12+rbx*8-0x8], rbp
mov  esi, 0x3a
mov  rdi, rbp
call 0x36a0
mov  edx, ebx
test rax, rax
je   0x64d8
mov  BYTE PTR [rax], 0x0
lea  rbp, [rax+0x1]
add  rbx, 0x1
cmp  edx, 0x3
jle  0x649e
nop  WORD PTR [rax+rax*1+0x0]
xor  eax, eax
jmp  0x6551
nop  DWORD PTR [rax+0x0]
cmp  ebx, 0x4
jne  0x64d0
mov  rax, QWORD PTR [rsp]
cmp  QWORD PTR [rip+0x4087], 0x0
mov  QWORD PTR [rip+0x4090], rax
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rip+0x408c], rax
jne  0x65a0
cmp  QWORD PTR [rip+0x4056], 0x0
jne  0x6570
mov  rdi, QWORD PTR [rsp+0x10]
lea  rdx, [rip+0x4058]
lea  rsi, [rip+0x4049]
call 0x60e0
mov  rdi, QWORD PTR [rsp+0x18]
lea  rdx, [rip+0x4030]
lea  rsi, [rip+0x4021]
mov  QWORD PTR [rip+0x4052], rax
call 0x60e0
mov  QWORD PTR [rip+0x404e], rax
lea  rax, [rip+0x402f]
mov  rdx, QWORD PTR [rsp+0x28]
sub  rdx, QWORD PTR fs:0x28
jne  0x65c7
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rip+0x3fe1]
mov  QWORD PTR [rip+0x3fde], 0x0
call 0x3550
mov  QWORD PTR [rip+0x3fc6], 0x0
jmp  0x650c
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x3fc1]
mov  QWORD PTR [rip+0x3fbe], 0x0
call 0x3550
mov  QWORD PTR [rip+0x3fa6], 0x0
jmp  0x6502
endbr64
test rsi, rsi
je   0x6a1f
push r15
push r14
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x28
test rdi, rdi
je   0x6a18
mov  rax, QWORD PTR [rdi]
mov  r12, rsi
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x3650
mov  r13, rax
mov  rax, QWORD PTR [rbx+0x8]
mov  rdi, rax
mov  QWORD PTR [rsp+0x10], rax
call 0x3650
mov  rbp, QWORD PTR [rbx+0x10]
mov  QWORD PTR [rsp+0x18], rax
lea  r14, [r13+rax*1+0xa]
test rbp, rbp
je   0x68a6
mov  r15, rbp
jmp  0x689a
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
call 0x3650
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0x6890
mov  rbx, QWORD PTR [rbx+0x18]
test rbx, rbx
je   0x68ce
mov  r15, rbx
jmp  0x68c2
nop  DWORD PTR [rax+0x0]
call 0x3650
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0x68b8
mov  rdi, r14
call 0x3810
mov  r14, rax
test rax, rax
je   0x6a18
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdx, r13
mov  rdi, rax
add  r13, r14
call 0x37c0
mov  r15, QWORD PTR [rsp+0x18]
mov  BYTE PTR [r13+0x0], 0x3a
lea  rcx, [r13+0x1]
mov  rsi, QWORD PTR [rsp+0x10]
mov  rdi, rcx
mov  rdx, r15
call 0x37c0
mov  rsi, QWORD PTR [rbp+0x0]
mov  rcx, rax
add  rcx, r15
mov  BYTE PTR [rcx], 0x3a
lea  r13, [rcx+0x1]
test rsi, rsi
je   0x6a10
add  rbp, 0x8
jmp  0x693f
nop  DWORD PTR [rax+rax*1+0x0]
mov  BYTE PTR [rax], 0x2c
lea  r13, [rax+0x1]
mov  rdi, r13
add  rbp, 0x8
call 0x35c0
mov  rdi, r13
call 0x3650
mov  rsi, QWORD PTR [rbp-0x8]
add  rax, r13
test rsi, rsi
jne  0x6938
mov  rsi, QWORD PTR [rbx]
mov  BYTE PTR [rax], 0x3a
lea  rbp, [rax+0x1]
test rsi, rsi
je   0x69a0
add  rbx, 0x8
jmp  0x6980
nop  DWORD PTR [rax+0x0]
mov  BYTE PTR [rbp+0x0], 0x2c
add  rbp, 0x1
mov  rdi, rbp
add  rbx, 0x8
call 0x35c0
mov  rdi, rbp
call 0x3650
mov  rsi, QWORD PTR [rbx-0x8]
add  rbp, rax
test rsi, rsi
jne  0x6978
mov  eax, 0xa
mov  WORD PTR [rbp+0x0], ax
movsx  edi, BYTE PTR [r14]
test dil, dil
je   0x69f0
mov  rbx, r14
jmp  0x69cd
nop  WORD PTR [rax+rax*1+0x0]
movsx  edi, BYTE PTR [rbx+0x1]
add  rbx, 0x1
test dil, dil
je   0x69f0
mov  rsi, r12
call 0x3790
cmp  eax, 0xffffffff
jne  0x69c0
mov  rdi, r14
mov  DWORD PTR [rsp+0x8], eax
call 0x3550
mov  eax, DWORD PTR [rsp+0x8]
jmp  0x69fa
nop  DWORD PTR [rax+0x0]
mov  rdi, r14
call 0x3550
xor  eax, eax
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  rax, r13
jmp  0x695f
mov  eax, 0xffffffff
jmp  0x69fa
or   eax, 0xffffffff
endbr64
cmp  QWORD PTR [rip+0x3f74], 0x0
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
je   0x66b0
test r12, r12
je   0x6613
mov  esi, DWORD PTR [rip+0x3f58]
mov  rdi, QWORD PTR [rip+0x3f49]
mov  rdx, r12
call 0x5c90
mov  r14, QWORD PTR [rip+0x3f3a]
cmp  r14, rax
je   0x6687
pop  rbx
xor  eax, eax
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xchg ax, ax
mov  rdi, r12
call 0x37b0
test eax, eax
jne  0x66e0
mov  rax, QWORD PTR [rip+0x3f19]
mov  rdi, r14
lea  r13, [rax+rax*1]
mov  rsi, r13
call 0x3860
mov  rbx, rax
test rax, rax
je   0x6613
mov  rdi, rax
mov  QWORD PTR [rip+0x3ef0], rax
mov  QWORD PTR [rip+0x3ef1], r13
call 0x3650
mov  esi, r13d
mov  rdx, r12
sub  esi, eax
lea  rdi, [rbx+rax*1]
mov  rbp, rax
call 0x5c90
mov  r14, QWORD PTR [rip+0x3ec9]
add  rbp, r14
cmp  rax, rbp
jne  0x6613
mov  esi, 0xa
mov  rdi, r14
call 0x36f0
test rax, rax
je   0x6620
mov  BYTE PTR [rax], 0x0
pop  rbx
mov  rdi, r14
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x6410
nop  DWORD PTR [rax+0x0]
mov  edi, 0x2000
call 0x3810
mov  QWORD PTR [rip+0x3e87], rax
test rax, rax
je   0x6613
mov  QWORD PTR [rip+0x3e7b], 0x2000
jmp  0x65ed
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0xa
mov  rdi, r14
call 0x36f0
test rax, rax
je   0x669c
endbr64
mov  rdi, QWORD PTR [rip+0x41d5]
test rdi, rdi
je   0x6400
sub  rsp, 0x8
call 0x3610
mov  QWORD PTR [rip+0x41bc], 0x0
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rip+0x41a5], 0x0
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x3e48]
test rdi, rdi
je   0x67f0
call 0x36b0
mov  rdi, QWORD PTR [rip+0x3e33]
lea  r13, [rip+0x9fc]
lea  rbp, [rip+0x8e5]
jmp  0x67b4
nop  DWORD PTR [rax]
call 0x65d0
mov  r12, rax
test rax, rax
je   0x67db
mov  rsi, QWORD PTR [r12]
mov  rdi, rbx
call 0x3780
test eax, eax
je   0x67db
mov  rdi, QWORD PTR [rip+0x3dfc]
test rdi, rdi
jne  0x6790
mov  rsi, r13
mov  rdi, rbp
call 0x38f0
mov  rdi, rax
mov  QWORD PTR [rip+0x3de2], rax
call 0x65d0
mov  r12, rax
test rax, rax
jne  0x679d
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  rdi, [rip+0x879]
lea  rsi, [rip+0x982]
call 0x38f0
mov  QWORD PTR [rip+0x3da6], rax
mov  rdi, rax
endbr64
mov  rdi, QWORD PTR [rip+0x3ea5]
test rdi, rdi
je   0x6718
jmp  0x65d0
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rdi, [rip+0x94d]
lea  rsi, [rip+0xa56]
call 0x38f0
mov  QWORD PTR [rip+0x3e7a], rax
mov  rdi, rax
add  rsp, 0x8
endbr64
mov  rdi, QWORD PTR [rip+0x4215]
test rdi, rdi
je   0x63a8
jmp  0x36b0
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rsi, [rip+0xdcd]
lea  rdi, [rip+0xcb6]
call 0x38f0
mov  QWORD PTR [rip+0x41ea], rax
add  rsp, 0x8
ret
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x10
mov  QWORD PTR [rbp-0x8], rdi
mov  rcx, QWORD PTR [rip+0x2189e]
mov  rax, QWORD PTR [rbp-0x8]
mov  edx, 0x106
mov  rsi, rcx
mov  rdi, rax
call 0x208e7
nop
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x1d0
mov  QWORD PTR [rbp-0x1b8], rdi
mov  DWORD PTR [rbp-0x1bc], esi
mov  DWORD PTR [rbp-0x1c0], edx
mov  QWORD PTR [rbp-0x1c8], rcx
mov  QWORD PTR [rbp-0x90], r8
mov  QWORD PTR [rbp-0x88], r9
test al, al
je   0x20bf0
movaps XMMWORD PTR [rbp-0x80], xmm0
movaps XMMWORD PTR [rbp-0x70], xmm1
movaps XMMWORD PTR [rbp-0x60], xmm2
movaps XMMWORD PTR [rbp-0x50], xmm3
movaps XMMWORD PTR [rbp-0x40], xmm4
movaps XMMWORD PTR [rbp-0x30], xmm5
movaps XMMWORD PTR [rbp-0x20], xmm6
movaps XMMWORD PTR [rbp-0x10], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0xb8], rax
xor  eax, eax
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x20c21
mov  rax, QWORD PTR [rbp-0x1b8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x20e2e
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x20c38
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax+0x48]
jmp  0x20c3f
mov  rax, QWORD PTR [rip+0x1da41]
mov  QWORD PTR [rbp-0x1a0], rax
cmp  QWORD PTR [rbp-0x1a0], 0x0
je   0x20e2e
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rdi, rax
call 0x4e50
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x20c7a
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x20c81
mov  rax, QWORD PTR [rip+0x1d9df]
mov  rdx, QWORD PTR [rbp-0x1a0]
mov  rsi, rdx
mov  rdi, rax
call 0x4b20
cmp  QWORD PTR [rbp-0x1c8], 0x0
je   0x20d12
mov  DWORD PTR [rbp-0x198], 0x20
mov  DWORD PTR [rbp-0x194], 0x30
lea  rax, [rbp+0x10]
mov  QWORD PTR [rbp-0x190], rax
lea  rax, [rbp-0xb0]
mov  QWORD PTR [rbp-0x188], rax
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x3a
call 0x4a50
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x20
call 0x4a50
lea  rdx, [rbp-0x198]
mov  rcx, QWORD PTR [rbp-0x1c8]
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rcx
mov  rdi, rax
call 0x4a80
cmp  DWORD PTR [rbp-0x1c0], 0x0
je   0x20dda
mov  QWORD PTR [rbp-0x1a8], 0x0
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x3a
call 0x4a50
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0x20
call 0x4a50
lea  rcx, [rbp-0x180]
mov  eax, DWORD PTR [rbp-0x1c0]
mov  edx, 0xc8
mov  rsi, rcx
mov  edi, eax
call 0x49f0
mov  QWORD PTR [rbp-0x1a8], rax
cmp  QWORD PTR [rbp-0x1a8], 0x0
jne  0x20dc1
mov  eax, DWORD PTR [rbp-0x1c0]
mov  edi, eax
call 0x4bd0
mov  QWORD PTR [rbp-0x1a8], rax
cmp  QWORD PTR [rbp-0x1a8], 0x0
jne  0x20dc1
mov  rax, QWORD PTR [rbp-0x1b8]
mov  rax, QWORD PTR [rax]
mov  rax, QWORD PTR [rax+0x30]
lea  rsi, [rip+0x15b79]
mov  rdi, rax
call 0x4840
mov  QWORD PTR [rbp-0x1a8], rax
mov  rdx, QWORD PTR [rbp-0x1a0]
mov  rax, QWORD PTR [rbp-0x1a8]
mov  rsi, rdx
mov  rdi, rax
call 0x4b20
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rsi, rax
mov  edi, 0xa
call 0x4a50
mov  rax, QWORD PTR [rbp-0x1a0]
mov  rdi, rax
call 0x4e70
cmp  DWORD PTR [rbp-0x1bc], 0x0
je   0x20e2e
cmp  QWORD PTR [rbp-0x1b8], 0x0
je   0x20e21
mov  rax, QWORD PTR [rbp-0x1b8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x20
test eax, eax
jne  0x20e2e
mov  eax, DWORD PTR [rbp-0x1bc]
mov  edi, eax
call 0x4960
nop
mov  rax, QWORD PTR [rbp-0xb8]
sub  rax, QWORD PTR fs:0x28
je   0x20e46
call 0x4d90
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x130
mov  QWORD PTR [rbp-0x108], rdi
mov  DWORD PTR [rbp-0x10c], esi
mov  QWORD PTR [rbp-0x118], rdx
mov  DWORD PTR [rbp-0x110], ecx
mov  QWORD PTR [rbp-0x120], r8
mov  QWORD PTR [rbp-0x128], r9
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x8], rax
xor  eax, eax
mov  DWORD PTR [rbp-0xf8], 0x0
mov  eax, DWORD PTR [rbp-0x110]
and  eax, 0x1
test eax, eax
jne  0x1cab5
mov  rax, QWORD PTR [rip+0x21bee]
test rax, rax
jne  0x1ca90
mov  rax, QWORD PTR [rbp-0x118]
mov  rax, QWORD PTR [rax]
mov  QWORD PTR [rip+0x21bd8], rax
mov  rax, QWORD PTR [rip+0x21bc9]
test rax, rax
jne  0x1cab5
mov  rax, QWORD PTR [rbp-0x118]
mov  rax, QWORD PTR [rax]
mov  rdi, rax
call 0x1ceb0
mov  QWORD PTR [rip+0x21bab], rax
mov  eax, DWORD PTR [rbp-0x110]
and  eax, 0x10
test eax, eax
jne  0x1cca8
mov  eax, 0x10
sub  rax, 0x1
add  rax, 0x88
mov  esi, 0x10
mov  edx, 0x0
div  rsi
imul rax, rax, 0x10
mov  rcx, rax
and  rcx, 0xfffffffffffff000
mov  rdx, rsp
sub  rdx, rcx
cmp  rsp, rdx
je   0x1cb0d
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x1caf6
mov  rdx, rax
and  edx, 0xfff
sub  rsp, rdx
mov  rdx, rax
and  edx, 0xfff
test rdx, rdx
je   0x1cb37
and  eax, 0xfff
sub  rax, 0x8
add  rax, rsp
or   QWORD PTR [rax], 0x0
mov  rax, rsp
add  rax, 0xf
shr  rax, 0x4
shl  rax, 0x4
mov  QWORD PTR [rbp-0xf0], rax
mov  eax, 0x10
sub  rax, 0x1
add  rax, 0x40
mov  edi, 0x10
mov  edx, 0x0
div  rdi
imul rax, rax, 0x10
mov  rcx, rax
and  rcx, 0xfffffffffffff000
mov  rdx, rsp
sub  rdx, rcx
cmp  rsp, rdx
je   0x1cb92
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x1cb7b
mov  rdx, rax
and  edx, 0xfff
sub  rsp, rdx
mov  rdx, rax
and  edx, 0xfff
test rdx, rdx
je   0x1cbbc
and  eax, 0xfff
sub  rax, 0x8
add  rax, rsp
or   QWORD PTR [rax], 0x0
mov  rax, rsp
add  rax, 0xf
shr  rax, 0x4
shl  rax, 0x4
mov  QWORD PTR [rbp-0xe8], rax
mov  rax, QWORD PTR [rbp-0xe8]
mov  edx, 0x38
mov  esi, 0x0
mov  rdi, rax
call 0x4860
mov  rax, QWORD PTR [rbp-0xe8]
mov  rdx, QWORD PTR [rbp-0xf0]
mov  QWORD PTR [rax+0x20], rdx
mov  rax, QWORD PTR [rbp-0xf0]
mov  edx, 0x80
mov  esi, 0x0
mov  rdi, rax
call 0x4860
cmp  QWORD PTR [rbp-0x108], 0x0
je   0x1cc3c
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
mov  rdx, QWORD PTR [rbp-0x108]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
lea  rdx, [rip+0x20cab]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rip+0x2dfc9]
test rax, rax
jne  0x1cc70
mov  rax, QWORD PTR [rip+0x214ed]
test rax, rax
je   0x1cc8c
mov  rax, QWORD PTR [rbp-0xf0]
lea  rdx, [rax+0x20]
mov  QWORD PTR [rbp-0xf0], rdx
lea  rdx, [rip+0x20d17]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbp-0xf0]
mov  QWORD PTR [rax], 0x0
mov  rax, QWORD PTR [rbp-0xe8]
mov  QWORD PTR [rbp-0x108], rax
mov  edi, DWORD PTR [rbp-0x110]
mov  r8, QWORD PTR [rbp-0x128]
mov  rcx, QWORD PTR [rbp-0x118]
mov  edx, DWORD PTR [rbp-0x10c]
mov  rsi, QWORD PTR [rbp-0x108]
lea  rax, [rbp-0xe0]
mov  r9, r8
mov  r8d, edi
mov  rdi, rax
call 0x1bb66
mov  DWORD PTR [rbp-0xf4], eax
cmp  DWORD PTR [rbp-0xf4], 0x0
jne  0x1cd3f
jmp  0x1cd0e
lea  rdx, [rbp-0xf8]
lea  rax, [rbp-0xe0]
mov  rsi, rdx
mov  rdi, rax
call 0x1c76a
mov  DWORD PTR [rbp-0xf4], eax
cmp  DWORD PTR [rbp-0xf4], 0x0
je   0x1ccef
mov  edx, DWORD PTR [rbp-0xf8]
mov  rcx, QWORD PTR [rbp-0x120]
mov  esi, DWORD PTR [rbp-0xf4]
lea  rax, [rbp-0xe0]
mov  rdi, rax
call 0x1c144
mov  DWORD PTR [rbp-0xf4], eax
mov  eax, DWORD PTR [rbp-0xf4]
mov  rdi, QWORD PTR [rbp-0x8]
sub  rdi, QWORD PTR fs:0x28
je   0x1cd59
call 0x4d90
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x20
mov  QWORD PTR [rbp-0x8], rdi
mov  QWORD PTR [rbp-0x10], rsi
mov  DWORD PTR [rbp-0x14], edx
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x20917
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x209c2
cmp  QWORD PTR [rbp-0x10], 0x0
je   0x209c2
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x2093e
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x40
test eax, eax
je   0x2093e
or   DWORD PTR [rbp-0x14], 0x80
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x2094f
mov  rax, QWORD PTR [rbp-0x8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x20956
mov  rax, QWORD PTR [rip+0x1dd0a]
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x20966
mov  rdx, QWORD PTR [rbp-0x8]
mov  rdi, QWORD PTR [rdx]
jmp  0x2096b
mov  edi, 0x0
mov  ecx, DWORD PTR [rbp-0x14]
mov  rdx, QWORD PTR [rbp-0x10]
mov  rsi, QWORD PTR [rbp-0x8]
mov  r8, rax
call 0x2039f
cmp  QWORD PTR [rbp-0x8], 0x0
je   0x20993
mov  rax, QWORD PTR [rbp-0x8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x20
test eax, eax
jne  0x209c2
mov  eax, DWORD PTR [rbp-0x14]
and  eax, 0x100
test eax, eax
je   0x209ac
mov  eax, DWORD PTR [rip+0x1dc0f]
mov  edi, eax
call 0x4960
mov  eax, DWORD PTR [rbp-0x14]
and  eax, 0x200
test eax, eax
je   0x209c2
mov  edi, 0x0
call 0x4960
nop
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0xf0
mov  QWORD PTR [rbp-0xe8], rdi
mov  QWORD PTR [rbp-0xf0], rsi
mov  QWORD PTR [rbp-0xa0], rdx
mov  QWORD PTR [rbp-0x98], rcx
mov  QWORD PTR [rbp-0x90], r8
mov  QWORD PTR [rbp-0x88], r9
test al, al
je   0x20a22
movaps XMMWORD PTR [rbp-0x80], xmm0
movaps XMMWORD PTR [rbp-0x70], xmm1
movaps XMMWORD PTR [rbp-0x60], xmm2
movaps XMMWORD PTR [rbp-0x50], xmm3
movaps XMMWORD PTR [rbp-0x40], xmm4
movaps XMMWORD PTR [rbp-0x30], xmm5
movaps XMMWORD PTR [rbp-0x20], xmm6
movaps XMMWORD PTR [rbp-0x10], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0xb8], rax
xor  eax, eax
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x20a53
mov  rax, QWORD PTR [rbp-0xe8]
mov  eax, DWORD PTR [rax+0x1c]
and  eax, 0x2
test eax, eax
jne  0x20b7b
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x20a6a
mov  rax, QWORD PTR [rbp-0xe8]
mov  rax, QWORD PTR [rax+0x48]
jmp  0x20a71
mov  rax, QWORD PTR [rip+0x1dc0f]
mov  QWORD PTR [rbp-0xd8], rax
cmp  QWORD PTR [rbp-0xd8], 0x0
je   0x20b7b
mov  rax, QWORD PTR [rbp-0xd8]
mov  rdi, rax
call 0x4e50
mov  DWORD PTR [rbp-0xd0], 0x10
mov  DWORD PTR [rbp-0xcc], 0x30
lea  rax, [rbp+0x10]
mov  QWORD PTR [rbp-0xc8], rax
lea  rax, [rbp-0xb0]
mov  QWORD PTR [rbp-0xc0], rax
cmp  QWORD PTR [rbp-0xe8], 0x0
je   0x20ad9
mov  rax, QWORD PTR [rbp-0xe8]
mov  rax, QWORD PTR [rax+0x40]
jmp  0x20ae0
mov  rax, QWORD PTR [rip+0x1db80]
mov  rdx, QWORD PTR [rbp-0xd8]
mov  rsi, rdx
mov  rdi, rax
call 0x4b20
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0x3a
call 0x4a50
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0x20
call 0x4a50
lea  rdx, [rbp-0xd0]
mov  rcx, QWORD PTR [rbp-0xf0]
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rcx
mov  rdi, rax
call 0x4a80
mov  rax, QWORD PTR [rbp-0xd8]
mov  rsi, rax
mov  edi, 0xa
call 0x4a50
mov  rcx, QWORD PTR [rbp-0xd8]
mov  rax, QWORD PTR [rbp-0xe8]
mov  edx, 0x104
mov  rsi, rcx
mov  rdi, rax
call 0x208e7
mov  rax, QWORD PTR [rbp-0xd8]
mov  rdi, rax
call 0x4e70
nop
mov  rax, QWORD PTR [rbp-0xb8]
sub  rax, QWORD PTR fs:0x28
je   0x20b93
call 0x4d90
leave
endbr64
push rbp
mov  rbp, rsp
sub  rsp, 0x20
mov  QWORD PTR [rbp-0x8], rdi
mov  QWORD PTR [rbp-0x10], rsi
mov  DWORD PTR [rbp-0x14], edx
mov  QWORD PTR [rbp-0x20], rcx
mov  rsi, QWORD PTR [rbp-0x20]
mov  ecx, DWORD PTR [rbp-0x14]
mov  rdx, QWORD PTR [rbp-0x10]
mov  rax, QWORD PTR [rbp-0x8]
mov  r8, rsi
mov  esi, 0x0
mov  rdi, rax
call 0x2039f
nop
leave
ret
endbr64
push r14
push r13
mov  r13, rsi
push r12
mov  r12, rdx
push rbp
mov  rbp, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbp, rbp
je   0x11b80
mov  rsi, rax
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x11a7f
cmp  rsi, QWORD PTR [rax]
je   0x11a8f
mov  rdi, rbp
call 0xd0f0
test eax, eax
je   0x11b80
test r13, r13
je   0x11c10
mov  rsi, r12
mov  rdi, rbp
call 0x10300
test eax, eax
je   0x11b9a
lea  r14, [rbp+0x20]
mov  rdi, r14
call 0xd020
mov  rdi, QWORD PTR [rbp+0x18]
xor  r8d, r8d
mov  rcx, rsp
mov  edx, 0xffffffff
lea  rsi, [rip+0x130a3]
call 0xcb40
test eax, eax
jne  0x11bb0
mov  rdi, QWORD PTR [rsp]
mov  rdx, r13
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  esi, 0x1
call 0xcbd0
mov  rdi, QWORD PTR [rip+0x1e4e6]
call 0xc870
mov  rsi, QWORD PTR [rsp]
mov  rcx, r12
mov  rdi, rbp
mov  rdx, rax
mov  r13, rax
call 0xfde0
test eax, eax
je   0x11bf0
mov  eax, DWORD PTR [r13+0x8]
test eax, eax
je   0x11c30
mov  rax, QWORD PTR [r13+0x0]
mov  rdi, QWORD PTR [rax]
call 0xcc40
mov  r12, rax
mov  rdi, r14
call 0xc9e0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x11b52
call 0xcbb0
test r13, r13
je   0x11b5a
mov  rdi, r13
call 0xbb20
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x11c53
add  rsp, 0x18
mov  rax, r12
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax]
lea  rdx, [rip+0x14e68]
lea  rsi, [rip+0x15e42]
lea  rdi, [rip+0x14ce6]
call 0xc580
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x11ba8
call 0xcbb0
xor  r12d, r12d
jmp  0x11b5a
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbp+0x18]
call 0xd500
mov  rbp, rax
call 0xc200
mov  r8, rbp
xor  edx, edx
mov  rdi, r12
mov  esi, eax
lea  rcx, [rip+0x130b6]
xor  eax, eax
call 0xc160
mov  rdi, r14
call 0xc9e0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
jne  0x11ba3
jmp  0x11ba8
nop  DWORD PTR [rax+0x0]
mov  rdi, r14
xor  r12d, r12d
call 0xc9e0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
jne  0x11b48
jmp  0x11b4d
nop  DWORD PTR [rax]
lea  rdx, [rip+0x14e27]
lea  rsi, [rip+0x15db2]
lea  rdi, [rip+0x14c56]
call 0xc580
jmp  0x11b9a
nop
call 0xc200
mov  rdi, r12
mov  edx, 0x8
xor  r12d, r12d
mov  esi, eax
lea  rcx, [rip+0x14e74]
call 0xd520
jmp  0x11b37
endbr64
push r12
mov  rdx, rdi
xor  esi, esi
xor  r12d, r12d
push rbp
push rbx
mov  rbx, rdi
mov  edi, 0x1
call 0xbe20
test rax, rax
je   0x1d67c
mov  rbp, rax
mov  esi, 0x1
xor  eax, eax
xor  r12d, r12d
lea  rdi, [rip+0xad63]
call 0xc6a0
sub  rsp, 0x8
mov  rdi, rbp
lea  r8, [rip+0xad54]
push rbx
mov  r9, rax
lea  rcx, [rip+0xc264]
lea  rdx, [rip+0xad49]
push 0x0
lea  rsi, [rip+0xad58]
push 0xffffffffffffffff
push 0x0
push 0x0
call 0xca00
add  rsp, 0x30
test rax, rax
mov  rdi, rax
setne  r12b
je   0x1d674
call 0xcab0
mov  rdi, rbp
call 0xbb30
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
endbr64
push r15
lea  r15, [rip+0xc5d3]
push r14
push r13
lea  r13, [rip+0x9635]
push r12
push rbp
mov  ebp, edi
push rbx
sub  rsp, 0x68
mov  r12, QWORD PTR [rip+0x12d27]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x58], rax
xor  eax, eax
mov  DWORD PTR [rsp+0xc], 0x0
lea  rbx, [rsp+0x10]
lea  r14, [rsp+0xc]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [r12]
mov  esi, 0x40
mov  rdi, rbx
call 0xc7a0
test rax, rax
je   0x1d350
mov  rdi, rbx
call 0xc3b0
cmp  rax, 0x3f
je   0x1d2f0
xor  eax, eax
mov  rdx, r14
mov  rsi, r13
mov  rdi, rbx
call 0xbcc0
cmp  eax, 0x1
jne  0x1d331
mov  eax, DWORD PTR [rsp+0xc]
cmp  eax, ebp
jbe  0x1d354
mov  rsi, r15
xor  edi, edi
mov  edx, 0x5
call 0xc920
mov  esi, ebp
mov  rdi, rax
xor  eax, eax
call 0xbc90
jmp  0x1d2f0
xchg ax, ax
mov  eax, DWORD PTR [rsp+0xc]
mov  rdx, QWORD PTR [rsp+0x58]
sub  rdx, QWORD PTR fs:0x28
jne  0x1d373
add  rsp, 0x68
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
endbr64
push r12
push rbp
sub  rsp, 0x8
mov  rbp, QWORD PTR [rdi]
mov  r12, QWORD PTR [rsi]
call 0xce20
mov  rsi, rax
mov  rdi, rbp
call 0xbd50
mov  esi, 0x2
mov  rdi, rax
call 0xc080
test eax, eax
jne  0x1a327
call 0xce20
mov  rdi, r12
mov  rsi, rax
call 0xbd50
mov  esi, 0x2
mov  rdi, rax
call 0xc080
test eax, eax
jne  0x1a3e0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  esi, 0x20
mov  rdi, rax
call 0xc080
test eax, eax
jne  0x1a369
call 0xce20
mov  rdi, r12
mov  rsi, rax
call 0xbd50
mov  esi, 0x20
mov  rdi, rax
call 0xc080
test eax, eax
jne  0x1a3e0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  esi, 0x2
mov  rdi, rax
call 0xc080
test eax, eax
je   0x1a3b4
call 0xce20
mov  rdi, r12
mov  rsi, rax
call 0xbd50
mov  esi, 0x2
mov  rdi, rax
call 0xc080
mov  r8d, eax
mov  eax, 0x1
test r8d, r8d
je   0x1a3d5
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  esi, 0x20
mov  rdi, rax
call 0xc080
test eax, eax
jne  0x1a3f0
add  rsp, 0x8
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax]
add  rsp, 0x8
mov  eax, 0xffffffff
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax]
call 0xce20
mov  rdi, r12
mov  rsi, rax
call 0xbd50
mov  esi, 0x20
mov  rdi, rax
call 0xc080
test eax, eax
sete al
add  rsp, 0x8
movzx  eax, al
pop  rbp
pop  r12
endbr64
push r15
push r14
mov  r14, rdx
push r13
push r12
mov  r12, rdi
mov  rdi, rcx
push rbp
push rbx
mov  rbx, rcx
sub  rsp, 0x28
mov  QWORD PTR [rsp+0x18], rsi
mov  QWORD PTR [rsp+0x8], rcx
mov  QWORD PTR [rsp+0x10], r8
call 0xd3c0
mov  esi, 0x8
lea  edi, [rax+0x1]
call 0xbf70
mov  rdi, QWORD PTR [rbx]
mov  QWORD PTR [rsp], rax
test rdi, rdi
je   0x1da18
mov  r13, QWORD PTR [rsp+0x8]
xor  ebp, ebp
xor  ebx, ebx
lea  r15, [rip+0xaa59]
jmp  0x1da0c
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [r13+0x0]
add  rbx, QWORD PTR [rsp]
call 0xd3d0
mov  QWORD PTR [rbx], rax
lea  ebx, [rbp+0x1]
mov  rax, QWORD PTR [rsp+0x8]
mov  rbp, rbx
shl  rbx, 0x3
lea  r13, [rax+rbx*1]
mov  rdi, QWORD PTR [r13+0x0]
test rdi, rdi
je   0x1da18
mov  rsi, r15
call 0xcca0
test eax, eax
jne  0x1d9e0
mov  eax, DWORD PTR [r12+0x8]
xor  ebx, ebx
test eax, eax
jne  0x1da32
jmp  0x1da68
nop  DWORD PTR [rax]
add  ebx, 0x1
cmp  DWORD PTR [r12+0x8], ebx
jbe  0x1da68
mov  rdx, QWORD PTR [r12]
mov  eax, ebx
mov  rsi, r14
mov  rbp, QWORD PTR [rdx+rax*8]
mov  rdi, QWORD PTR [rbp+0x0]
call 0xcca0
test eax, eax
jne  0x1da28
mov  rdx, QWORD PTR [rsp+0x10]
mov  rsi, QWORD PTR [rsp]
mov  rdi, QWORD PTR [rsp+0x18]
call QWORD PTR [rbp+0x18]
mov  r12d, eax
jmp  0x1da9a
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa9c2]
xor  edi, edi
call 0xc920
mov  r12, rax
call 0xc200
mov  rdi, QWORD PTR [rsp+0x10]
mov  rcx, r12
mov  edx, 0x13
mov  esi, eax
xor  r12d, r12d
call 0xd520
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0x1daab
mov  rdi, rax
call 0xd590
add  rsp, 0x28
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
endbr64
push r12
push rbp
push rbx
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  QWORD PTR [rsp], rdi
mov  QWORD PTR [rsp+0x8], 0x0
test rdi, rdi
je   0x22670
mov  rdi, rsi
mov  rbx, rsi
xor  r12d, r12d
call 0x1ab20
mov  rbp, rax
test rax, rax
je   0x22653
mov  rsi, rsp
mov  ecx, 0x1
mov  edx, 0x1
xor  eax, eax
lea  rdi, [rip+0x68a4]
xor  r12d, r12d
call 0xc6a0
sub  rsp, 0x8
xor  r9d, r9d
xor  ecx, ecx
push rbx
mov  rdx, rax
mov  rdi, rbp
mov  r8d, 0xffffffff
lea  rsi, [rip+0x6887]
call 0xca40
mov  rdi, rax
pop  rax
pop  rdx
test rdi, rdi
setne  r12b
je   0x2264b
call 0xcab0
mov  rdi, rbp
call 0xbb30
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x2268a
add  rsp, 0x20
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
ret
nop
lea  rdx, [rip+0x682e]
lea  rsi, [rip+0x6bc2]
xor  edi, edi
xor  r12d, r12d
call 0xc580
jmp  0x22653
endbr64
push r14
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rdx
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x12820
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1274f
cmp  rsi, QWORD PTR [rax]
je   0x1275f
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x12820
test r13, r13
je   0x128b8
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
jne  0x127b0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x12788
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x128da
add  rsp, 0x10
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
lea  r14, [rbx+0x20]
mov  rdi, r14
call 0xbd80
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x12756]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x12880
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, r13
mov  esi, 0x1
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x12848
mov  r12d, 0x1
mov  rdi, r14
call 0xcfe0
jmp  0x1277a
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x141c8]
lea  rsi, [rip+0x15052]
xor  r12d, r12d
lea  rdi, [rip+0x14043]
call 0xc580
jmp  0x1277a
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x1188b]
xor  eax, eax
call 0xc160
jmp  0x1280f
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x125f3]
xor  eax, eax
call 0xc160
jmp  0x1280f
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x1420f]
lea  rsi, [rip+0x14fba]
xor  r12d, r12d
lea  rdi, [rip+0x13fab]
call 0xc580
jmp  0x1277a
endbr64
push r12
mov  esi, 0x2
push rbp
mov  rbp, rdi
push rbx
call 0xc080
test eax, eax
je   0x1d4d0
mov  r12d, 0x1
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
mov  r12d, eax
call 0xc240
test rax, rax
jne  0x1d4b9
mov  rdi, rbp
call 0xd270
test rax, rax
je   0x1d4b9
mov  rdi, rbp
xor  ebp, ebp
call 0xc4b0
mov  rbx, rax
mov  eax, DWORD PTR [rax+0x8]
test eax, eax
jne  0x1d510
jmp  0x1d4bf
nop  DWORD PTR [rax+rax*1+0x0]
add  ebp, 0x1
cmp  ebp, DWORD PTR [rbx+0x8]
jae  0x1d4bf
mov  rdx, QWORD PTR [rbx]
mov  eax, ebp
mov  rdi, QWORD PTR [rdx+rax*8]
call 0x1d4a0
test eax, eax
je   0x1d508
endbr64
push r13
push r12
push rbp
push rbx
sub  rsp, 0x28
mov  esi, DWORD PTR [rip+0xdf24]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
test esi, esi
jle  0x22168
xor  ebp, ebp
xor  r12d, r12d
mov  r13d, 0x1
mov  rdi, rbp
call 0xbb00
mov  rdi, r12
call 0xbb00
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x222d3
add  rsp, 0x28
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax]
mov  rsi, rdi
mov  r13, rdi
lea  rdi, [rip+0x6caa]
call 0xcee0
mov  rbp, rax
test rax, rax
je   0x22240
xor  edi, edi
call 0xce30
test eax, eax
jne  0x221a0
xor  r12d, r12d
mov  r13d, 0x1
jmp  0x22133
nop  DWORD PTR [rax+0x0]
lea  rdi, [rsp+0x10]
call 0xcc50
test eax, eax
js   0x22250
mov  esi, DWORD PTR [rsp+0x14]
lea  rdi, [rip+0x69b0]
xor  eax, eax
call 0xbe90
sub  rsp, 0x8
mov  rdx, rbp
mov  rsi, rbp
push 0x0
mov  r8, rax
lea  rcx, [rip+0x6c75]
mov  r12, rax
lea  r9, [rip+0x6c60]
lea  rdi, [rip+0xde4d]
xor  eax, eax
call 0x1acb0
pop  rdx
pop  rcx
test eax, eax
js   0x22290
mov  edi, DWORD PTR [rsp+0x14]
mov  r13d, 0x1
call 0x1aa80
mov  eax, DWORD PTR [rsp+0x10]
lea  rdi, [rsp+0x8]
mov  edx, 0xffffffff
mov  esi, 0x1
mov  DWORD PTR [rsp+0xc], 0x10
mov  DWORD PTR [rsp+0x8], eax
call 0xc1e0
mov  edi, DWORD PTR [rsp+0x10]
call 0x1aa80
jmp  0x22133
nop  DWORD PTR [rax]
xor  r12d, r12d
xor  r13d, r13d
jmp  0x22133
nop  DWORD PTR [rax+rax*1+0x0]
call 0xd0c0
mov  edi, DWORD PTR [rax]
neg  edi
call 0xca90
mov  r12, rax
call 0xc800
mov  r8, r12
mov  rdi, r13
xor  edx, edx
mov  esi, eax
lea  rcx, [rip+0x6bb3]
xor  eax, eax
xor  r12d, r12d
call 0xc160
xor  r13d, r13d
jmp  0x22133
nop  DWORD PTR [rax+0x0]
neg  eax
mov  edi, eax
call 0xca90
mov  rbx, rax
call 0xc800
mov  r8, rbx
xor  edx, edx
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x7fbe]
xor  eax, eax
xor  r13d, r13d
call 0xc160
mov  edi, DWORD PTR [rsp+0x14]
call 0x1aa80
mov  edi, DWORD PTR [rsp+0x10]
call 0x1aa80
jmp  0x22133
endbr64
push r14
push r13
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rdi, QWORD PTR [rip+0x1e193]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
call 0xc870
mov  QWORD PTR [rsp], 0x0
mov  r12, rax
call 0x102a0
test rbx, rbx
je   0x11f48
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x11e5b
cmp  rsi, QWORD PTR [rax]
je   0x11e6b
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x11f48
cmp  QWORD PTR [rbx+0x18], 0x0
je   0x11f30
lea  r13, [rbx+0x20]
mov  rdi, r13
call 0xd020
mov  rdi, QWORD PTR [rbx+0x18]
xor  r8d, r8d
mov  rcx, rsp
mov  edx, 0xffffffff
lea  rsi, [rip+0x12f18]
call 0xcb40
test eax, eax
je   0x11ece
jmp  0x11fc0
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rsp]
xor  esi, esi
call 0xbcd0
mov  rdi, rax
call 0xd3d0
mov  rdi, r12
mov  rsi, rax
call 0xc540
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x64
je   0x11eb0
xor  r14d, r14d
cmp  eax, 0x65
jne  0x11f80
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x11ef6
call 0xcbb0
mov  rdi, r13
call 0xc9e0
test r14, r14
je   0x11f0b
mov  rdi, r14
call 0xbb20
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x11ff3
add  rsp, 0x10
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
test eax, eax
jne  0x11e76
jmp  0x11f62
nop  DWORD PTR [rax]
lea  rdx, [rip+0x14aa0]
lea  rsi, [rip+0x15a2a]
lea  rdi, [rip+0x1491e]
call 0xc580
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x11fe8
call 0xcbb0
mov  r14, r12
xor  r12d, r12d
jmp  0x11efe
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
lea  rcx, [rip+0x12158]
mov  esi, eax
mov  rdi, rbp
xor  eax, eax
mov  r14, r12
xor  r12d, r12d
call 0xc160
jmp  0x11ee8
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0x12dfd]
xor  edx, edx
mov  esi, eax
jmp  0x11fa2
nop  DWORD PTR [rax+0x0]
mov  r14, r12
xor  r12d, r12d
jmp  0x11efe
endbr64
mov  rax, QWORD PTR [rip+0x1fd7d]
test rax, rax
je   0x102c0
mov  rax, QWORD PTR [rip+0x1fd71]
ret
nop  DWORD PTR [rax+rax*1+0x0]
push rbp
lea  rbp, [rip+0x1fd60]
mov  rdi, rbp
call 0xc360
test eax, eax
jne  0x102e0
mov  rax, QWORD PTR [rip+0x1fd4d]
pop  rbp
ret
nop  DWORD PTR [rax]
call 0xfd90
mov  rdi, rbp
mov  rsi, rax
call 0xd220
mov  rax, QWORD PTR [rip+0x1fd31]
pop  rbp
endbr64
push r15
push r14
push r13
mov  r13, rdi
lea  rdi, [rip+0x66ed]
push r12
mov  r12d, 0x1
push rbp
xor  ebp, ebp
push rbx
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0xbd20
test rax, rax
je   0x22878
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x22844
call 0xc3d0
mov  rdi, rbp
call 0xbb00
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x22978
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x496f]
mov  r15, rsp
lea  rbx, [rip+0x494c]
call 0xbd20
lea  r14, [rip+0x494b]
mov  rdi, r15
test rax, rax
cmovne r14, rbx
call 0x22390
mov  rbp, rax
test rax, rax
je   0x228d0
mov  rsi, r15
mov  rdi, r14
call 0x22770
mov  r12d, eax
test eax, eax
je   0x22900
mov  r12d, 0x1
jmp  0x22836
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rsp]
lea  rdx, [rip+0x6628]
mov  esi, 0x80
lea  rdi, [rip+0x3e9d]
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xc8b0
jmp  0x22836
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp]
lea  rdx, [rip+0x6616]
mov  esi, 0x80
lea  rdi, [rip+0x3e6d]
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xc8b0
mov  rsi, rbx
mov  rdi, r14
lea  rbx, [rip+0x65b9]
call 0xcca0
mov  edx, 0x5
lea  rsi, [rip+0x7988]
test eax, eax
lea  rax, [rip+0x6599]
cmove  rbx, rax
xor  edi, edi
call 0xc920
mov  r14, rax
call 0xc200
mov  r8, rbx
mov  rcx, r14
mov  edx, 0x13
mov  esi, eax
mov  rdi, r13
xor  eax, eax
call 0xc160
jmp  0x22836
endbr64
push r15
push r14
mov  r14, r8
xor  r8d, r8d
push r13
xor  r13d, r13d
push r12
mov  r12, r9
push rbp
push rbx
mov  rbx, rsi
sub  rsp, 0x20
push r9
xor  r9d, r9d
call 0xcec0
pop  rdx
pop  rcx
mov  rbp, rax
test rax, rax
je   0x2108d
mov  rdi, rax
call 0xc510
test rax, rax
je   0x210b0
call 0xd530
mov  rdi, rbp
mov  r15, rax
call 0xc510
xor  esi, esi
mov  rdi, rbp
mov  r13, rax
call 0xd4b0
mov  rsi, r13
mov  rdi, rax
call 0xc290
mov  rcx, r12
mov  rdx, 0xffffffffffffffff
mov  rdi, r15
mov  rsi, rax
mov  rbx, rax
call 0xd150
mov  r13d, eax
test eax, eax
je   0x21198
mov  rdi, r15
call 0xc900
mov  rdi, rax
test rax, rax
je   0x211b8
call 0xc770
mov  r13, rax
test rax, rax
je   0x21210
lea  rsi, [rip+0x7c99]
mov  rdi, rax
call 0xc8f0
lea  rsi, [rip+0x7c8a]
test eax, eax
jne  0x210e0
lea  rsi, [rip+0x5f96]
mov  rdi, r13
call 0xcaf0
test eax, eax
je   0x21200
mov  r13d, 0x1
test r15, r15
je   0x210d2
mov  rdi, r15
call 0xbb30
mov  rdi, rbp
mov  rbp, rbx
call 0xc960
mov  rdi, rbp
call 0xbb00
add  rsp, 0x18
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
call 0xc200
mov  r8, rbx
mov  edx, 0x7
mov  rdi, r12
mov  esi, eax
lea  rcx, [rip+0x7bfa]
xor  eax, eax
xor  ebx, ebx
call 0xc160
mov  rdi, rbp
mov  rbp, rbx
call 0xc960
jmp  0x2108d
nop
mov  rdi, r13
call 0xc990
lea  rsi, [rip+0x5f06]
mov  rdi, r13
mov  QWORD PTR [rsp+0x8], rax
call 0xcaf0
mov  r8, QWORD PTR [rsp+0x8]
test eax, eax
je   0x211e0
test r8, r8
je   0x2106f
mov  esi, 0x80
xor  eax, eax
mov  rcx, r8
mov  QWORD PTR [rsp+0x8], r8
lea  rdx, [rip+0x7bd1]
lea  rdi, [rip+0x5655]
call 0xc8b0
mov  rdi, QWORD PTR [rsp+0x8]
lea  rdx, [rip+0x7bcc]
mov  rsi, 0xffffffffffffffff
call 0xc600
test rax, rax
je   0x2106f
lea  r12, [rip+0x7bbc]
mov  rdi, r13
mov  rsi, r12
call 0xc8f0
test r14, r14
je   0x2106f
test eax, eax
je   0x2106f
mov  rsi, r12
mov  rdi, r13
call 0xc990
mov  rdi, rax
call 0xd3d0
mov  QWORD PTR [r14], rax
jmp  0x2106f
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, rbx
lea  rsi, [rip+0x8dbe]
mov  rdi, r12
xor  eax, eax
call 0xc950
jmp  0x21075
nop  DWORD PTR [rax+0x0]
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0x8dc9]
mov  esi, eax
mov  edx, 0xd
mov  rdi, r12
xor  eax, eax
xor  r13d, r13d
call 0xc160
jmp  0x21075
test r8, r8
je   0x21200
mov  QWORD PTR [rsp+0x8], r8
call 0xc200
mov  r8, QWORD PTR [rsp+0x8]
lea  rcx, [rip+0x7ae3]
mov  esi, eax
jmp  0x211c9
nop
lea  r8, [rip+0x7ab0]
jmp  0x211e5
nop  DWORD PTR [rax+0x0]
call 0xc200
mov  r8, rbx
mov  edx, 0xd
mov  rdi, r12
mov  esi, eax
lea  rcx, [rip+0x8d8f]
xor  eax, eax
call 0xc160
endbr64
push r15
push r14
push r13
push r12
mov  r12d, 0x1
push rbp
mov  rbp, rdi
xor  edi, edi
push rbx
sub  rsp, 0x18
mov  DWORD PTR [rsp+0x4], esi
call 0xc340
mov  DWORD PTR [rsp+0x8], 0x0
mov  DWORD PTR [rsp+0xc], 0x0
mov  r14, rax
mov  eax, DWORD PTR [rbp+0x8]
nop  DWORD PTR [rax+0x0]
xor  ebx, ebx
xor  r13d, r13d
test eax, eax
jne  0x20d34
jmp  0x20d98
xchg ax, ax
mov  edx, DWORD PTR [rsp+0x4]
mov  rsi, r14
mov  rdi, r15
call 0x1c920
cmp  r12d, 0x1
je   0x20e00
mov  rdi, r15
mov  r13d, 0x1
call 0xbee0
lea  rsi, [rip+0x896a]
mov  rdi, rax
call 0xcca0
test eax, eax
je   0x20d70
mov  eax, DWORD PTR [rbp+0x8]
add  ebx, 0x1
cmp  eax, ebx
jbe  0x20d98
mov  rdx, QWORD PTR [rbp+0x0]
mov  eax, ebx
mov  r15, QWORD PTR [rdx+rax*8]
mov  rdi, r15
call 0xc270
cmp  eax, r12d
jne  0x20d2a
test r13d, r13d
jne  0x20cf0
mov  edx, r12d
lea  rsi, [rip+0x7f20]
mov  rdi, r14
xor  eax, eax
call 0xc4a0
jmp  0x20cf0
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, r15
call 0xd320
cmp  eax, 0x4
mov  eax, 0x1
cmovne eax, DWORD PTR [rsp+0x8]
add  ebx, 0x1
mov  DWORD PTR [rsp+0x8], eax
mov  eax, DWORD PTR [rbp+0x8]
cmp  eax, ebx
ja   0x20d34
nop  DWORD PTR [rax+rax*1+0x0]
add  r12d, 0x1
cmp  r12d, 0x7
jne  0x20ce0
xor  r12d, r12d
xor  ebx, ebx
test eax, eax
je   0x20dd5
nop
mov  rax, QWORD PTR [rbp+0x0]
mov  edx, r12d
add  r12d, 0x1
mov  rdi, QWORD PTR [rax+rdx*8]
call 0xcd40
or   ebx, eax
cmp  DWORD PTR [rbp+0x8], r12d
ja   0x20db0
and  bh, 0x4
jne  0x20ebf
mov  esi, DWORD PTR [rsp+0xc]
test esi, esi
jne  0x20e52
mov  eax, DWORD PTR [rsp+0x8]
test eax, eax
jne  0x20e22
add  rsp, 0x18
mov  rdi, r14
xor  esi, esi
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xbd70
nop  DWORD PTR [rax]
mov  esi, 0x1
mov  rdi, r15
call 0xc520
test eax, eax
mov  eax, 0x1
cmovne eax, DWORD PTR [rsp+0xc]
mov  DWORD PTR [rsp+0xc], eax
jmp  0x20d09
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x90b0]
call 0xc920
lea  rcx, [rip+0x90d4]
lea  rsi, [rip+0x7e68]
mov  rdi, r14
mov  rdx, rax
xor  eax, eax
call 0xc4a0
jmp  0x20de5
xor  r12d, r12d
mov  edx, 0x5
lea  rsi, [rip+0x8f9f]
xor  edi, edi
call 0xc920
lea  rcx, [rip+0x8fc1]
lea  rsi, [rip+0x7e35]
mov  rdi, r14
mov  rdx, rax
xor  eax, eax
call 0xc4a0
test r12d, r12d
je   0x20ddd
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8fd6]
call 0xc920
lea  rcx, [rip+0x8ff2]
lea  rsi, [rip+0x7dfe]
mov  rdi, r14
mov  rdx, rax
xor  eax, eax
call 0xc4a0
jmp  0x20ddd
mov  edi, 0x400
call 0xd210
mov  edx, 0x5
lea  rsi, [rip+0x7db6]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
lea  rsi, [rip+0x7db1]
mov  rdi, r14
mov  rdx, rax
xor  eax, eax
call 0xc4a0
mov  ecx, DWORD PTR [rbp+0x8]
test ecx, ecx
je   0x20dd5
xor  ebx, ebx
xor  r12d, r12d
jmp  0x20f27
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, DWORD PTR [rsp+0x4]
mov  rsi, r14
mov  rdi, r13
call 0x1c920
add  ebx, 0x1
cmp  DWORD PTR [rbp+0x8], ebx
jbe  0x20f6d
mov  rdx, QWORD PTR [rbp+0x0]
mov  eax, ebx
mov  esi, 0x400
mov  r13, QWORD PTR [rdx+rax*8]
mov  rdi, r13
call 0xc520
test eax, eax
je   0x20f1f
mov  esi, 0x400
mov  rdi, r13
call 0xc520
test eax, eax
je   0x20f10
mov  esi, 0x1
mov  rdi, r13
call 0xc520
test eax, eax
mov  eax, 0x1
cmove  r12d, eax
jmp  0x20f10
mov  edx, DWORD PTR [rsp+0xc]
test edx, edx
je   0x20e83
endbr64
mov  r9, rsi
mov  ecx, 0xffffffff
mov  edx, 0x3
mov  esi, 0x1
lea  r8, [rip+0x3223]
endbr64
push r15
push r14
lea  r14, [rip+0x9cb7]
push r13
mov  r13, rdi
lea  rdi, [rip+0x9385]
push r12
xor  r12d, r12d
push rbp
push rbx
sub  rsp, 0x8
call 0xc340
mov  rbp, rax
mov  eax, DWORD PTR [r13+0x8]
test eax, eax
je   0x1dc0a
nop  WORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [r13+0x0]
mov  eax, r12d
mov  rsi, r14
mov  rdi, rbp
mov  rbx, QWORD PTR [rdx+rax*8]
call 0xc750
mov  rdi, rbp
mov  rsi, QWORD PTR [rbx]
call 0xc750
mov  rdi, QWORD PTR [rbx]
call 0xc500
cmp  QWORD PTR [rbx+0x8], 0x0
mov  r15, rax
je   0x1dc30
lea  rsi, [rip+0x9c49]
mov  rdi, rbp
call 0xc750
mov  rsi, QWORD PTR [rbx+0x8]
mov  rdi, rbp
call 0xc750
mov  rdi, QWORD PTR [rbx+0x8]
call 0xc500
mov  rdx, QWORD PTR [rbp+0x10]
lea  r15, [r15+rax*1+0x3]
mov  rax, QWORD PTR [rbp+0x8]
cmp  r15, 0x22
jbe  0x1db9e
jmp  0x1dc46
nop  DWORD PTR [rax+rax*1+0x0]
mov  rsi, QWORD PTR [rbp+0x0]
mov  QWORD PTR [rbp+0x8], rdx
add  r15, 0x1
mov  BYTE PTR [rsi+rax*1], 0x20
mov  rdx, QWORD PTR [rbp+0x0]
mov  rax, QWORD PTR [rbp+0x8]
mov  BYTE PTR [rdx+rax*1], 0x0
cmp  r15, 0x24
je   0x1dbc6
mov  rax, QWORD PTR [rbp+0x8]
lea  rdx, [rax+0x1]
cmp  rdx, QWORD PTR [rbp+0x10]
jb   0x1db78
mov  edx, 0x20
mov  rsi, 0xffffffffffffffff
mov  rdi, rbp
add  r15, 0x1
call 0xcf60
cmp  r15, 0x24
jne  0x1db9a
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdi, rbp
call 0xc750
mov  rax, QWORD PTR [rbp+0x8]
lea  rdx, [rax+0x1]
cmp  rdx, QWORD PTR [rbp+0x10]
jae  0x1dcc0
mov  rcx, QWORD PTR [rbp+0x0]
mov  QWORD PTR [rbp+0x8], rdx
mov  BYTE PTR [rcx+rax*1], 0xa
mov  rdx, QWORD PTR [rbp+0x0]
mov  rax, QWORD PTR [rbp+0x8]
mov  BYTE PTR [rdx+rax*1], 0x0
add  r12d, 0x1
cmp  DWORD PTR [r13+0x8], r12d
ja   0x1db00
mov  rax, QWORD PTR [rbp+0x8]
test rax, rax
jne  0x1dcf2
add  rsp, 0x8
mov  rdi, rbp
xor  esi, esi
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xbd70
nop
add  r15, 0x2
mov  rax, QWORD PTR [rbp+0x8]
mov  rdx, QWORD PTR [rbp+0x10]
cmp  r15, 0x22
jbe  0x1db9e
lea  rcx, [rax+0x1]
cmp  rdx, rcx
jbe  0x1dcd9
mov  rdx, QWORD PTR [rbp+0x0]
mov  QWORD PTR [rbp+0x8], rcx
mov  BYTE PTR [rdx+rax*1], 0xa
mov  rdx, QWORD PTR [rbp+0x0]
mov  rax, QWORD PTR [rbp+0x8]
mov  BYTE PTR [rdx+rax*1], 0x0
mov  r15d, 0x24
jmp  0x1dc9a
nop  DWORD PTR [rax+rax*1+0x0]
mov  rsi, QWORD PTR [rbp+0x0]
mov  QWORD PTR [rbp+0x8], rdx
mov  BYTE PTR [rsi+rax*1], 0x20
mov  rdx, QWORD PTR [rbp+0x0]
mov  rax, QWORD PTR [rbp+0x8]
mov  BYTE PTR [rdx+rax*1], 0x0
sub  r15, 0x1
je   0x1dbc6
mov  rax, QWORD PTR [rbp+0x8]
lea  rdx, [rax+0x1]
cmp  rdx, QWORD PTR [rbp+0x10]
jb   0x1dc78
mov  edx, 0x20
mov  rsi, 0xffffffffffffffff
mov  rdi, rbp
call 0xcf60
jmp  0x1dc90
xchg ax, ax
mov  edx, 0xa
mov  rsi, 0xffffffffffffffff
mov  rdi, rbp
call 0xcf60
jmp  0x1dbfc
mov  edx, 0xa
mov  rsi, 0xffffffffffffffff
mov  rdi, rbp
call 0xcf60
jmp  0x1dc6b
lea  rsi, [rax-0x1]
mov  rdi, rbp
call 0xc7f0
endbr64
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rdi
xor  edi, edi
push rbx
sub  rsp, 0x28
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
call 0xc340
mov  rsi, r13
mov  rdi, rbp
mov  DWORD PTR [rsp], 0x0
mov  QWORD PTR [rsp+0x8], rax
mov  r12, rax
call 0xd260
test rax, rax
je   0x1e420
mov  rdi, rax
mov  rbp, rax
call 0xc0f0
mov  rcx, rsp
lea  rdx, [rip+0xffffffffffffc4b1]
lea  rsi, [rip+0xffffffffffffc33a]
mov  rdi, rax
mov  r13, rax
call 0xd1b0
mov  rdi, QWORD PTR [r12]
call 0xd1f0
mov  rdi, rbp
mov  rbx, rax
call 0xbb30
test r13, r13
je   0x1e3f2
mov  rdi, r13
call 0xbb30
mov  rdi, r12
mov  esi, 0x1
mov  r12, rbx
call 0xbd70
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1e429
add  rsp, 0x28
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
test r12, r12
je   0x1e402
xor  ebx, ebx
jmp  0x1e3f2
endbr64
push r13
push r12
push rbp
mov  rbp, rdx
test edi, 0x20000
je   0x1d708
test esi, esi
je   0x1d770
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xad09]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xc1fb]
mov  r12, rax
call 0xc920
lea  rdi, [rip+0xacf5]
mov  rdx, r12
mov  rsi, rax
xor  eax, eax
call 0xbc90
xor  edi, edi
call 0x1d380
test eax, eax
jne  0x1d770
mov  r12d, 0x1
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+rax*1+0x0]
test edi, 0x100
je   0x1d6f4
test esi, esi
je   0x1d75c
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xacc7]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xc1cb]
mov  r12, rax
call 0xc920
lea  rdi, [rip+0xac8d]
mov  rdx, r12
mov  rsi, rax
xor  eax, eax
call 0xbc90
xor  edi, edi
call 0x1d380
test eax, eax
je   0x1d6f4
mov  rdi, rbp
pop  rbp
pop  r12
pop  r13
jmp  0x1d5f0
nop  DWORD PTR [rax+0x0]
mov  rdx, rbp
xor  esi, esi
mov  edi, 0x1
xor  r12d, r12d
call 0xbe20
mov  r13, rax
test rax, rax
je   0x1d6fa
mov  esi, 0x1
lea  rdi, [rip+0xabef]
xor  eax, eax
xor  r12d, r12d
call 0xc6a0
sub  rsp, 0x8
mov  rdi, r13
lea  r8, [rip+0xac2e]
push rbp
mov  r9, rax
lea  rcx, [rip+0xc0eb]
lea  rdx, [rip+0xabd0]
push 0x0
lea  rsi, [rip+0xabdf]
push 0xffffffffffffffff
push 0x0
push 0x0
call 0xca00
add  rsp, 0x30
test rax, rax
mov  rdi, rax
setne  r12b
je   0x1d7ed
call 0xcab0
mov  rdi, r13
call 0xbb30
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
endbr64
push r15
push r14
mov  r14, rdi
xor  edi, edi
push r13
push r12
push rbp
push rbx
sub  rsp, 0x18
call 0xc340
lea  rdi, [rip+0x6278]
mov  r15, rax
call 0xbd20
test rax, rax
je   0x20c80
mov  eax, DWORD PTR [r14+0x8]
xor  r13d, r13d
lea  r12, [rip+0x8338]
lea  rbx, [rip+0x5ceb]
test eax, eax
je   0x20c40
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [r14]
mov  edx, r13d
add  r13d, 0x1
mov  rdi, QWORD PTR [rax+rdx*8]
call 0xbb80
mov  rdx, r12
mov  esi, 0x80
mov  rdi, rbx
mov  rcx, rax
mov  rbp, rax
xor  eax, eax
call 0xc8b0
mov  rdi, rbp
call 0xbb00
mov  eax, DWORD PTR [r14+0x8]
cmp  eax, r13d
ja   0x20aa8
xor  ebx, ebx
test eax, eax
je   0x20c40
mov  QWORD PTR [rsp], r14
jmp  0x20b7e
nop  WORD PTR [rax+rax*1+0x0]
xor  eax, eax
lea  rdx, [rip+0x8146]
mov  esi, 0x20
lea  rdi, [rip+0x5c3a]
call 0xbe90
cmp  QWORD PTR [r15+0x8], 0x0
mov  r9, rax
je   0x20c01
mov  r8, rbp
mov  rcx, r9
mov  rdx, r13
mov  rdi, r15
lea  rsi, [rip+0x8131]
xor  eax, eax
mov  QWORD PTR [rsp+0x8], r9
call 0xc4a0
mov  rdi, rbp
call 0xbb00
mov  rdi, QWORD PTR [rsp+0x8]
call 0xbb00
mov  rdi, r13
call 0xbb00
test r12, r12
je   0x20b6e
mov  rdi, r12
call 0xc2c0
mov  rax, QWORD PTR [rsp]
add  ebx, 0x1
cmp  DWORD PTR [rax+0x8], ebx
jbe  0x20c40
mov  rcx, QWORD PTR [rsp]
mov  eax, ebx
mov  rdx, QWORD PTR [rcx]
mov  r14, QWORD PTR [rdx+rax*8]
mov  rdi, r14
call 0xbeb0
mov  rdi, rax
call 0xc020
lea  rsi, [rip+0x80a7]
mov  rdi, rax
mov  r12, rax
call 0xc710
mov  rdi, r14
mov  r13, rax
call 0x1c330
mov  rbp, rax
test rax, rax
je   0x20c89
mov  esi, 0x1
mov  rdi, r14
call 0xc520
test eax, eax
jne  0x20b00
xor  eax, eax
lea  rdx, [rip+0x8071]
mov  esi, 0x1f
lea  rdi, [rip+0x5b61]
call 0xbe90
cmp  QWORD PTR [r15+0x8], 0x0
mov  r9, rax
jne  0x20b28
mov  edx, 0x5
lea  rsi, [rip+0x804a]
xor  edi, edi
mov  QWORD PTR [rsp+0x8], r9
call 0xc920
lea  rsi, [rip+0x5f25]
mov  rdi, r15
mov  rdx, rax
xor  eax, eax
call 0xc4a0
mov  r9, QWORD PTR [rsp+0x8]
jmp  0x20b28
nop  WORD PTR [rax+rax*1+0x0]
cmp  QWORD PTR [r15+0x8], 0x0
je   0x20c60
add  rsp, 0x18
mov  rdi, r15
xor  esi, esi
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xbd70
nop
mov  rdi, r15
mov  esi, 0x1
call 0xbd70
add  rsp, 0x18
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
xchg ax, ax
mov  eax, DWORD PTR [r14+0x8]
jmp  0x20ae4
xor  edi, edi
call 0xbb00
xor  edi, edi
endbr64
push r15
push r14
push r13
mov  r13, rdx
mov  edx, 0xffffffff
push r12
mov  r12, rsi
lea  rsi, [rip+0x8711]
push rbp
push rbx
sub  rsp, 0x18
mov  QWORD PTR [rsp+0x8], rcx
call 0xc640
mov  r14, rax
test r12, r12
je   0x1e2c0
test r13, r13
je   0x1e340
mov  rdi, QWORD PTR [rax]
test rdi, rdi
je   0x1e1f0
mov  rbx, r14
xor  ebp, ebp
lea  r15, [rip+0xa569]
jmp  0x1e1a9
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rbx]
lea  rdi, [rax+0x1]
call 0xc310
cmp  rax, 0xffffffffffffffff
je   0x1e246
mov  rdx, rax
and  rdx, QWORD PTR [r12]
jne  0x1e274
mov  rdx, QWORD PTR [r13+0x0]
test rdx, rax
jne  0x1e2f0
or   rdx, rax
mov  QWORD PTR [r13+0x0], rdx
lea  eax, [rbp+0x1]
lea  rbx, [r14+rax*8]
mov  rbp, rax
mov  rdi, QWORD PTR [rbx]
test rdi, rdi
je   0x1e1f0
mov  rsi, r15
call 0xcba0
test eax, eax
jne  0x1e160
mov  rdi, QWORD PTR [rbx]
mov  DWORD PTR [rsp+0x4], eax
call 0xc310
mov  r9d, DWORD PTR [rsp+0x4]
cmp  rax, 0xffffffffffffffff
je   0x1e21a
mov  rdx, rax
and  rdx, QWORD PTR [r13+0x0]
jne  0x1e292
mov  rdx, QWORD PTR [r12]
test rdx, rax
jne  0x1e311
or   rdx, rax
mov  QWORD PTR [r12], rdx
jmp  0x1e197
nop
mov  r9d, 0x1
mov  rdi, r14
mov  DWORD PTR [rsp+0x4], r9d
call 0xd590
mov  r9d, DWORD PTR [rsp+0x4]
add  rsp, 0x18
mov  eax, r9d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rbx, QWORD PTR [rbx]
call 0xc200
lea  rcx, [rip+0xa49d]
mov  esi, eax
mov  r8, rbx
mov  rdi, QWORD PTR [rsp+0x8]
mov  edx, 0xa
xor  eax, eax
call 0xc160
mov  r9d, DWORD PTR [rsp+0x4]
jmp  0x1e1f6
mov  rbx, QWORD PTR [rbx]
call 0xc200
lea  rcx, [rip+0xa471]
add  rbx, 0x1
mov  esi, eax
mov  r8, rbx
mov  rdi, QWORD PTR [rsp+0x8]
mov  edx, 0xa
xor  eax, eax
call 0xc160
xor  r9d, r9d
jmp  0x1e1f6
mov  rdi, rax
call 0xd310
mov  rbx, rax
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0xa44f]
mov  esi, eax
jmp  0x1e25e
mov  rdi, rax
mov  DWORD PTR [rsp+0x4], r9d
call 0xd310
mov  rbx, rax
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0xa447]
mov  esi, eax
jmp  0x1e22e
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xa45c]
lea  rsi, [rip+0xb092]
lea  rdi, [rip+0x84af]
call 0xc580
xor  r9d, r9d
test r14, r14
je   0x1e208
jmp  0x1e1f6
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rax
call 0xd310
mov  rbx, rax
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0xa3ee]
mov  esi, eax
jmp  0x1e25e
mov  rdi, rax
mov  DWORD PTR [rsp+0x4], r9d
call 0xd310
mov  rbx, rax
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0xa3ad]
mov  esi, eax
jmp  0x1e22e
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xa3cc]
lea  rsi, [rip+0xb012]
lea  rdi, [rip+0x842f]
call 0xc580
endbr64
test rsi, rsi
je   0x1d298
push r15
xor  eax, eax
push r14
push r13
push r12
mov  r12, rdi
push rbp
mov  rbp, rsi
mov  rsi, rdi
lea  rdi, [rip+0xb16b]
push rbx
sub  rsp, 0x18
call 0xbc90
mov  rdi, r12
call 0xc500
lea  rsi, [rip+0x9c8e]
mov  edx, 0xffffffff
mov  rdi, rbp
lea  r14, [rax+0x1]
call 0xc640
mov  rsi, QWORD PTR [rax]
mov  QWORD PTR [rsp+0x8], rax
test rsi, rsi
je   0x1d280
mov  ebp, 0x8
mov  r13d, 0x1
lea  r15, [rip+0x9940]
cmp  r14, 0x18
ja   0x1d22c
mov  r12, QWORD PTR [rsp+0x8]
mov  ebp, 0x8
mov  r13d, 0x1
lea  r15, [rip+0x9923]
jmp  0x1d254
nop  DWORD PTR [rax+0x0]
mov  rsi, QWORD PTR [r12]
xor  eax, eax
mov  rdi, r15
call 0xbc90
mov  rax, QWORD PTR [rsp+0x8]
lea  r12, [rax+rbp*1]
cmp  QWORD PTR [r12], 0x0
je   0x1d280
lea  ebp, [r13+0x1]
xor  r14d, r14d
mov  r13, rbp
shl  rbp, 0x3
lea  rbx, [rip+0xa52c]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbx
xor  eax, eax
add  r14, 0x1
call 0xbc90
cmp  r14, 0x19
jne  0x1d260
jmp  0x1d228
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rsp+0x8]
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xd590
endbr64
push r15
push r14
mov  r14, rcx
push r13
mov  r13, rdi
xor  edi, edi
push r12
mov  r12, rsi
push rbp
push rbx
mov  ebx, edx
sub  rsp, 0x18
call 0xc340
mov  rdi, r12
mov  rbp, rax
call 0xcdc0
mov  rdi, r13
mov  r15, rax
call 0xd0b0
mov  rsi, r15
mov  rdi, rax
call 0xcca0
test eax, eax
jne  0x21e60
mov  rdi, r12
call 0xcdd0
mov  rdi, rax
test rax, rax
je   0x21f06
mov  rsi, r14
call 0x1e360
mov  r15, rax
test rax, rax
je   0x21e48
mov  rsi, rax
mov  rdi, rbp
call 0xc750
mov  rdi, r12
call 0xd510
mov  r12, rax
test rax, rax
je   0x21f78
mov  rdi, r13
call 0xbea0
mov  r13, rax
test rax, rax
je   0x21f58
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x6ff7]
call 0xc920
mov  rdx, r12
mov  rsi, r13
mov  rdi, rax
xor  eax, eax
call 0xbe90
mov  rsi, QWORD PTR [rbp+0x0]
mov  r12, rax
or   rax, rsi
je   0x21e04
mov  edx, 0x50
mov  rdi, r12
call 0x216a0
mov  r13d, 0x1
test ebx, ebx
je   0x21f18
mov  rdi, rbp
mov  esi, 0x1
mov  rbp, r15
call 0xbd70
mov  rdi, r12
call 0xbb00
mov  rdi, rbp
call 0xbb00
add  rsp, 0x18
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
xor  r13d, r13d
xor  r12d, r12d
xor  r15d, r15d
test rbp, rbp
je   0x21e22
jmp  0x21e12
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, r13
call 0xd0b0
mov  rdi, r12
mov  QWORD PTR [rsp+0x8], rax
call 0xcdc0
mov  edx, 0x5
lea  rsi, [rip+0x8257]
xor  edi, edi
mov  r15, rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x8]
mov  rdx, r15
mov  rdi, rbp
mov  rsi, rax
xor  eax, eax
call 0xc4a0
lea  r8, [rip+0x4fb7]
mov  rdi, rbp
mov  rsi, r8
call 0xc750
mov  rdi, r13
call 0xd0b0
mov  edx, 0x5
lea  rsi, [rip+0x825a]
xor  edi, edi
mov  r15, rax
call 0xc920
mov  rdx, r15
mov  rdi, rbp
mov  rsi, rax
xor  eax, eax
call 0xc4a0
lea  r8, [rip+0x4f77]
mov  rdi, rbp
mov  rsi, r8
call 0xc750
mov  rdi, r12
call 0xcdd0
mov  rdi, rax
test rax, rax
jne  0x21d81
mov  r13d, 0x1
jmp  0x21e4b
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0x826c]
xor  edi, edi
call 0xc920
lea  rdi, [rip+0x5327]
mov  rsi, rax
xor  eax, eax
call 0xbc90
xor  edi, edi
call 0x1d380
mov  r13d, eax
test eax, eax
je   0x21f98
mov  r13d, 0x1
jmp  0x21e12
nop  DWORD PTR [rax]
mov  edx, 0x5
lea  rsi, [rip+0x524f]
xor  edi, edi
call 0xc920
mov  r13, rax
jmp  0x21dc8
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0x522f]
xor  edi, edi
call 0xc920
mov  r12, rax
jmp  0x21db4
nop  DWORD PTR [rax+rax*1+0x0]
call 0xc200
lea  rcx, [rip+0x6e46]
mov  edx, 0x9
mov  rdi, r14
mov  esi, eax
call 0xd520
endbr64
push r14
push r13
mov  r13, rdx
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x10d50
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x10acf
cmp  rsi, QWORD PTR [rax]
je   0x10adf
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x10d50
call 0xbc70
mov  rsi, rax
test rbp, rbp
je   0x10de0
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x10afe
cmp  rsi, QWORD PTR [rax]
je   0x10b0e
mov  rdi, rbp
call 0xd0f0
test eax, eax
je   0x10de0
mov  rsi, r13
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
je   0x10d15
lea  r14, [rbx+0x20]
mov  rdi, r14
call 0xbd80
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc660
mov  r12, rax
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc4d0
mov  r8, r12
lea  rdx, [rip+0x15e96]
mov  esi, 0x80
mov  rcx, rax
lea  rdi, [rip+0x15cff]
xor  eax, eax
call 0xc8b0
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x13d17]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x10da8
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xd1e0
mov  rdi, QWORD PTR [rsp]
mov  esi, 0x1
mov  edx, eax
call 0xbb90
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc240
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x2
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xd270
mov  rdi, QWORD PTR [rsp]
mov  esi, 0x3
and  eax, 0xffffff5f
mov  rdx, rax
call 0xcda0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc660
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x4
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xbdd0
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x5
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc440
mov  esi, 0x1
mov  rdi, rax
call 0xc490
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x6
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xcd00
mov  rdi, QWORD PTR [rsp]
mov  esi, 0x7
mov  rdx, rax
call 0xcda0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x10d70
mov  r12d, 0x1
mov  rdi, r14
call 0xcfe0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x10d23
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x10e02
add  rsp, 0x10
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x15c98]
lea  rsi, [rip+0x16d12]
xor  r12d, r12d
lea  rdi, [rip+0x15b13]
call 0xc580
jmp  0x10d15
nop
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x13363]
xor  eax, eax
call 0xc160
jmp  0x10d0d
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x13b6b]
xor  eax, eax
call 0xc160
jmp  0x10d0d
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x15c35]
lea  rsi, [rip+0x16c82]
xor  r12d, r12d
lea  rdi, [rip+0x15a83]
call 0xc580
jmp  0x10d15
endbr64
push r15
push r14
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rdi
xor  edi, edi
push rbx
sub  rsp, 0x38
mov  QWORD PTR [rsp+0x10], rdx
mov  QWORD PTR [rsp+0x8], rcx
call 0xc340
xor  edi, edi
mov  r12, rax
call 0xc340
mov  rdi, rbp
mov  r14, rax
call 0xcb90
mov  ebx, eax
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xbdd0
mov  rdi, r13
mov  r15, rax
call 0xbf30
mov  edx, ebx
mov  rsi, r15
mov  rdi, rax
call 0xbf80
mov  rdi, r13
test eax, eax
js   0x21c00
jne  0x21ba0
call 0xbf30
mov  rdi, rbp
mov  QWORD PTR [rsp+0x20], rax
call 0xc4d0
mov  edx, 0x5
lea  rsi, [rip+0x7336]
xor  edi, edi
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x20]
mov  rdx, QWORD PTR [rsp+0x18]
mov  rdi, r12
mov  rsi, rax
xor  eax, eax
call 0xc4a0
mov  rdi, r13
call 0x1a420
mov  r13, rax
test rax, rax
je   0x21aea
xor  esi, esi
mov  rdi, rax
call 0x1e360
mov  r8, rax
test rax, rax
je   0x21ae2
mov  QWORD PTR [rsp+0x18], rax
mov  rdx, rax
lea  rsi, [rip+0x72f6]
mov  rdi, r14
xor  eax, eax
call 0xc4a0
mov  r8, QWORD PTR [rsp+0x18]
mov  rdi, r8
call 0xbb00
mov  rdi, rbp
call 0xd270
test ah, 0x20
jne  0x21b0d
test eax, 0x20000000
je   0x21c60
test eax, 0x10000000
je   0x21ca8
mov  rsi, QWORD PTR [r14]
mov  rdi, QWORD PTR [r12]
mov  rax, rsi
or   rax, rdi
je   0x21b26
mov  edx, 0x50
call 0x216a0
mov  edx, 0x5
lea  rsi, [rip+0x560c]
xor  edi, edi
call 0xc920
lea  rdi, [rip+0x5513]
mov  rsi, rax
xor  eax, eax
call 0xbc90
mov  edi, 0x1
call 0x1d380
mov  ebx, eax
test eax, eax
je   0x21c38
mov  ebx, 0x1
mov  rdi, r14
mov  esi, 0x1
call 0xbd70
mov  rdi, r12
mov  esi, 0x1
call 0xbd70
mov  rdi, r13
call 0xbb00
add  rsp, 0x38
mov  eax, ebx
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
call 0xbf30
mov  rdi, rbp
mov  QWORD PTR [rsp+0x28], rax
call 0xbdd0
mov  rdi, rbp
mov  QWORD PTR [rsp+0x20], rax
call 0xc4d0
mov  edx, 0x5
lea  rsi, [rip+0x71d0]
mov  QWORD PTR [rsp+0x18], rax
xor  edi, edi
call 0xc920
mov  r8, QWORD PTR [rsp+0x28]
mov  rcx, QWORD PTR [rsp+0x20]
mov  rdi, r12
mov  rdx, QWORD PTR [rsp+0x18]
mov  rsi, rax
xor  eax, eax
call 0xc4a0
jmp  0x21aa2
nop  DWORD PTR [rax+rax*1+0x0]
call 0xbf30
mov  rdi, rbp
mov  QWORD PTR [rsp+0x28], rax
call 0xbdd0
mov  rdi, rbp
mov  QWORD PTR [rsp+0x20], rax
call 0xc4d0
mov  edx, 0x5
lea  rsi, [rip+0x7154]
mov  QWORD PTR [rsp+0x18], rax
jmp  0x21bd0
nop  WORD PTR [rax+rax*1+0x0]
call 0xc200
mov  rdi, QWORD PTR [rsp+0x8]
mov  edx, 0x9
lea  rcx, [rip+0x4f08]
mov  esi, eax
call 0xd520
jmp  0x21b63
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x51f7]
mov  rdi, r14
call 0xc750
mov  rdi, rbp
call 0xc4d0
mov  edx, 0x5
lea  rsi, [rip+0x8365]
mov  rbx, rax
xor  edi, edi
call 0xc920
mov  rdx, rbx
mov  rdi, r14
mov  rsi, rax
xor  eax, eax
call 0xc4a0
jmp  0x21b0d
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x51af]
mov  rdi, r14
mov  QWORD PTR [rsp+0x18], rax
call 0xc750
mov  rdx, QWORD PTR [rsp+0x18]
test dl, 0x1
je   0x21d00
and  edx, 0x8
je   0x21b0d
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x839b]
call 0xc920
mov  rdx, QWORD PTR [rsp+0x10]
mov  rdi, r14
mov  rsi, rax
xor  eax, eax
call 0xc4a0
jmp  0x21b0d
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0xc4d0
mov  edx, 0x5
lea  rsi, [rip+0x8314]
mov  rbx, rax
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x18
mov  QWORD PTR [rsp+0x8], rcx
mov  QWORD PTR [rsp], r8
test rsi, rsi
je   0x1d930
cmp  QWORD PTR [rsp+0x8], 0x0
je   0x1d960
cmp  QWORD PTR [rsp], 0x0
je   0x1d970
mov  r13, rdi
mov  r14, rdx
mov  rdi, rsi
mov  edx, 0xffffffff
lea  rsi, [rip+0x8fbf]
xor  ebx, ebx
call 0xc640
cmp  QWORD PTR [rax], 0x0
mov  rbp, rax
mov  r15, rax
jne  0x1d8d1
jmp  0x1d918
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rsp+0x8]
call 0xd3d0
mov  rdi, r14
mov  QWORD PTR [r12+0x10], rax
call 0xd3d0
mov  rsi, r12
mov  rdi, r13
mov  QWORD PTR [r12+0x8], rax
mov  rax, QWORD PTR [rsp]
mov  QWORD PTR [r12+0x18], rax
call 0xc540
lea  eax, [rbx+0x1]
lea  r15, [rbp+rax*8+0x0]
mov  rbx, rax
cmp  QWORD PTR [r15], 0x0
je   0x1d918
mov  edi, 0x20
call 0xbe60
mov  rdi, QWORD PTR [r15]
mov  r12, rax
call 0xd3d0
mov  QWORD PTR [r12], rax
test ebx, ebx
je   0x1d890
mov  r15, QWORD PTR [rbp+0x0]
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xaaf6]
call 0xc920
mov  rdi, rax
mov  rsi, r15
xor  eax, eax
call 0xbe90
jmp  0x1d89a
nop  DWORD PTR [rax+0x0]
add  rsp, 0x18
mov  rdi, rbp
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xd590
xchg ax, ax
lea  rdx, [rip+0xaaf0]
add  rsp, 0x18
lea  rsi, [rip+0xba3e]
lea  rdi, [rip+0x8e3b]
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xc580
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xaaac]
jmp  0x1d937
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0xaa8b]
endbr64
mov  rax, rdi
or   rax, rsi
jne  0x219d0
ret
nop  DWORD PTR [rax]
endbr64
push rbx
mov  rbx, rdi
mov  rdi, rsi
call 0xd2e0
mov  QWORD PTR [rbx+0x18], rax
pop  rbx
endbr64
push rbp
call 0x102a0
xor  esi, esi
mov  rdi, rax
xor  eax, eax
call 0xcbf0
mov  rbp, rax
call 0x102a0
mov  rdi, rbp
pop  rbp
mov  rsi, rax
endbr64
push r12
mov  r12d, edx
push rbp
mov  ebp, esi
push rbx
mov  rbx, rdi
call 0x1afa0
test rbx, rbx
je   0x1b830
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1b70e
cmp  rsi, QWORD PTR [rax]
je   0x1b71e
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x1b830
mov  eax, DWORD PTR [rbx+0x20]
cmp  ebp, 0x1
jne  0x1b72e
test eax, eax
je   0x1b850
mov  ecx, DWORD PTR [rbx+0x58]
test ebp, ebp
cmove  ebp, eax
test ecx, ecx
je   0x1b860
test r12d, r12d
sete dl
test eax, eax
setne  cl
and  edx, ecx
cmp  ebp, 0x1
setne  cl
test dl, cl
je   0x1b75a
cmp  ebp, 0xb
jne  0x1b7b0
cmp  eax, ebp
je   0x1b818
mov  rdi, QWORD PTR [rbx+0x38]
test r12d, r12d
je   0x1b7d0
test rdi, rdi
je   0x1b786
call 0xbb70
mov  QWORD PTR [rbx+0x38], 0x0
mov  rdi, QWORD PTR [rbx+0x48]
call 0xbd90
mov  QWORD PTR [rbx+0x24], 0x1
mov  edx, r12d
mov  esi, ebp
mov  rdi, rbx
call 0x1b070
mov  DWORD PTR [rbx+0x20], ebp
mov  DWORD PTR [rbx+0x34], r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
call 0xc210
sub  rax, QWORD PTR [rbx+0x40]
cmp  rax, 0xa027
jg   0x1b8a0
cmp  ebp, DWORD PTR [rbx+0x20]
je   0x1b890
xchg ax, ax
mov  rdi, QWORD PTR [rbx+0x38]
test rdi, rdi
je   0x1b7de
call 0xbb70
mov  edi, 0x28
call 0xd100
xor  ecx, ecx
mov  rdx, rbx
lea  rsi, [rip+0xfffffffffffffdec]
mov  QWORD PTR [rbx+0x38], rax
mov  rdi, rax
call 0xd5e0
mov  rsi, QWORD PTR [rbx+0x18]
mov  rdi, QWORD PTR [rbx+0x38]
call 0xd470
jmp  0x1b78e
nop  WORD PTR [rax+rax*1+0x0]
cmp  DWORD PTR [rbx+0x34], r12d
je   0x1b7a2
mov  rdi, QWORD PTR [rbx+0x38]
test r12d, r12d
jne  0x1b76b
jmp  0x1b7d0
nop  DWORD PTR [rax]
pop  rbx
lea  rdx, [rip+0xc49e]
lea  rsi, [rip+0xdbf1]
pop  rbp
lea  rdi, [rip+0xc4a7]
pop  r12
jmp  0xc580
xchg ax, ax
mov  DWORD PTR [rbx+0x20], 0x1
jmp  0x1b7a2
nop  DWORD PTR [rax+0x0]
mov  edi, ebp
call 0x1a0b0
mov  edx, r12d
lea  rdi, [rip+0xc45b]
mov  rsi, rax
xor  eax, eax
call 0xbc90
mov  DWORD PTR [rbx+0x20], ebp
mov  DWORD PTR [rbx+0x34], r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rbx+0x34]
test eax, eax
jne  0x1b7d0
jmp  0x1b7a2
call 0xc210
mov  edx, DWORD PTR [rbx+0x24]
mov  QWORD PTR [rbx+0x40], rax
mov  eax, DWORD PTR [rbx+0x28]
test edx, edx
je   0x1b8e0
mov  ecx, DWORD PTR [rbx+0x2c]
add  eax, 0x1
mov  DWORD PTR [rbx+0x28], eax
lea  edx, [rcx-0x3]
cmp  eax, edx
jbe  0x1b8ca
mov  DWORD PTR [rbx+0x24], 0x0
xor  edx, edx
mov  esi, ebp
mov  rdi, rbx
call 0x1b070
jmp  0x1b7c5
nop  DWORD PTR [rax+rax*1+0x0]
sub  eax, 0x1
mov  DWORD PTR [rbx+0x28], eax
jne  0x1b8ca
mov  DWORD PTR [rbx+0x24], 0x1
endbr64
lea  rdi, [rip+0xffffffffffffc785]
endbr64
mov  rax, rdi
test rdi, rdi
je   0x1dd20
ret
nop  DWORD PTR [rax]
mov  edx, 0x5
lea  rsi, [rip+0x9487]
xor  edi, edi
endbr64
push rbp
mov  ebp, esi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
call 0x1afa0
test rbx, rbx
je   0x1b940
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1b929
cmp  rsi, QWORD PTR [rax]
je   0x1b935
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x1b940
mov  DWORD PTR [rbx+0x58], ebp
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop
add  rsp, 0x8
lea  rdx, [rip+0xc38b]
lea  rsi, [rip+0xdabe]
pop  rbx
lea  rdi, [rip+0xc394]
pop  rbp
endbr64
mov  rdx, rdi
xor  eax, eax
lea  rdi, [rip+0x95cf]
endbr64
push r12
mov  r12d, 0x1
push rbp
mov  rbp, rdi
sub  rsp, 0x8
mov  rax, QWORD PTR [rip+0xed0d]
mov  rdi, QWORD PTR [rax]
call 0xd4a0
mov  edi, eax
call 0xce30
test eax, eax
je   0x212e0
add  rsp, 0x8
mov  eax, r12d
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  r12d, eax
call 0xc800
mov  rdi, rbp
mov  edx, 0xf
lea  rcx, [rip+0x7a25]
mov  esi, eax
call 0xd520
add  rsp, 0x8
mov  eax, r12d
pop  rbp
pop  r12
endbr64
push r14
push r13
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rdi, QWORD PTR [rip+0x1dc23]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
call 0xc870
mov  QWORD PTR [rsp], 0x0
mov  r12, rax
call 0x102a0
test rbx, rbx
je   0x124b8
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x123cb
cmp  rsi, QWORD PTR [rax]
je   0x123db
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x124b8
cmp  QWORD PTR [rbx+0x18], 0x0
je   0x124a0
lea  r13, [rbx+0x20]
mov  rdi, r13
call 0xd020
mov  rdi, QWORD PTR [rbx+0x18]
xor  r8d, r8d
mov  rcx, rsp
mov  edx, 0xffffffff
lea  rsi, [rip+0x12ac0]
call 0xcb40
test eax, eax
je   0x1243e
jmp  0x12530
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rsp]
xor  esi, esi
call 0xbcd0
mov  rdi, rax
call 0xd3d0
mov  rdi, r12
mov  rsi, rax
call 0xc540
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x64
je   0x12420
xor  r14d, r14d
cmp  eax, 0x65
jne  0x124f0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x12466
call 0xcbb0
mov  rdi, r13
call 0xc9e0
test r14, r14
je   0x1247b
mov  rdi, r14
call 0xbb20
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x12563
add  rsp, 0x10
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
test eax, eax
jne  0x123e6
jmp  0x124d2
nop  DWORD PTR [rax]
lea  rdx, [rip+0x14530]
lea  rsi, [rip+0x1541a]
lea  rdi, [rip+0x143ae]
call 0xc580
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x12558
call 0xcbb0
mov  r14, r12
xor  r12d, r12d
jmp  0x1246e
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
lea  rcx, [rip+0x11be8]
mov  esi, eax
mov  rdi, rbp
xor  eax, eax
mov  r14, r12
xor  r12d, r12d
call 0xc160
jmp  0x12458
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
lea  rcx, [rip+0x1288d]
xor  edx, edx
mov  esi, eax
jmp  0x12512
nop  DWORD PTR [rax+0x0]
mov  r14, r12
xor  r12d, r12d
jmp  0x1246e
endbr64
push r13
mov  r13, rsi
push r12
mov  r12, rdi
xor  edi, edi
push rbp
call 0xc340
mov  rdi, r12
48 be 00 00 00 00 00 20 00 00 movabs rsi, 0x200000000000
mov  rbp, rax
call 0xc080
test eax, eax
jne  0x22010
test rbp, rbp
jne  0x220bf
mov  r12d, 0x1
pop  rbp
mov  eax, r12d
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x81ba]
call 0xc920
mov  rdi, rbp
mov  rsi, rax
call 0xc750
lea  rsi, [rip+0x5752]
mov  rdi, rbp
call 0xc750
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x81dd]
call 0xc920
mov  rdi, rbp
mov  rsi, rax
call 0xc750
xor  edi, edi
mov  r12, QWORD PTR [rbp+0x0]
mov  edx, 0x5
lea  rsi, [rip+0x6d94]
call 0xc920
mov  rdi, rax
mov  rax, r12
or   rax, rdi
je   0x2208a
mov  edx, 0x50
mov  rsi, r12
call 0x216a0
mov  edx, 0x5
lea  rsi, [rip+0x50a8]
xor  edi, edi
call 0xc920
lea  rdi, [rip+0x4faf]
mov  rsi, rax
xor  eax, eax
call 0xbc90
mov  edi, 0x1
call 0x1d380
mov  r12d, eax
test eax, eax
je   0x220e0
mov  r12d, 0x1
mov  rdi, rbp
mov  esi, 0x1
call 0xbd70
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+rax*1+0x0]
call 0xc200
lea  rcx, [rip+0x4a6a]
mov  edx, 0x9
mov  rdi, r13
mov  esi, eax
call 0xd520
endbr64
push r15
push r14
mov  r14, rdi
push r13
push r12
push rbp
mov  ebp, esi
push rbx
sub  rsp, 0x28
call 0xc590
mov  rdi, r14
mov  QWORD PTR [rsp+0x8], rax
call 0xbbc0
xor  edi, edi
mov  QWORD PTR [rsp+0x10], rax
call 0xc340
mov  rdi, r14
mov  r13, rax
call 0xc730
mov  rbx, rax
call 0xbf60
test r14, r14
je   0x2006b
mov  rsi, rax
mov  rax, QWORD PTR [r14]
test rax, rax
je   0x1f891
cmp  rsi, QWORD PTR [rax]
je   0x1f8a1
mov  rdi, r14
call 0xd0f0
test eax, eax
je   0x2006b
mov  rdi, r14
call 0xcb00
xor  ecx, ecx
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
add  ebp, 0x1
call 0xcf80
mov  rdi, r14
call 0xbf30
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x9274]
mov  r12, rax
call 0xc920
mov  rdi, r13
mov  rcx, r12
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xcd10
test rax, rax
je   0x1f924
mov  rdi, r14
call 0xcd10
mov  edx, 0x5
lea  rsi, [rip+0x9108]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xc470
test rax, rax
je   0x1f95f
mov  rdi, r14
call 0xc470
mov  edx, 0x5
lea  rsi, [rip+0x90d7]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xd510
test rax, rax
je   0x1f99a
mov  rdi, r14
call 0xd510
mov  edx, 0x5
lea  rsi, [rip+0x8e96]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xc9f0
test rax, rax
je   0x1f9d5
mov  rdi, r14
call 0xc9f0
mov  edx, 0x5
lea  rsi, [rip+0x8de4]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xc8c0
test rax, rax
je   0x1fa10
mov  rdi, r14
call 0xc8c0
mov  edx, 0x5
lea  rsi, [rip+0x9031]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xc630
mov  r12, rax
test rax, rax
je   0x20096
lea  rsi, [rip+0x9004]
mov  rdi, rax
call 0xcca0
test eax, eax
je   0x1fe4b
lea  rsi, [rip+0x8ff8]
mov  rdi, r12
call 0xcca0
test eax, eax
je   0x1fe4b
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8ff2]
call 0xc920
mov  rdi, r13
mov  rcx, r12
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xc840
test rax, rax
jne  0x1ffd8
mov  rdi, r14
call 0xcac0
test rax, rax
jne  0x1fefd
mov  rdi, r14
call 0xcc20
test eax, eax
jne  0x1ff6e
mov  rdi, r14
call 0xcc90
test rax, rax
je   0x1fae2
mov  rdi, r14
call 0xcc90
mov  edx, 0x5
lea  rsi, [rip+0x8fc0]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xbe00
test rax, rax
je   0x1fb1d
mov  rdi, r14
call 0xbe00
mov  edx, 0x5
lea  rsi, [rip+0x90ad]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xcdc0
test rax, rax
je   0x1fb58
mov  rdi, r14
call 0xcdc0
mov  edx, 0x5
lea  rsi, [rip+0x8cc7]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xc2e0
test eax, eax
jne  0x1febb
mov  rdi, r14
call 0xca70
test rax, rax
je   0x1fba3
mov  rdi, r14
call 0xca70
mov  edx, 0x5
lea  rsi, [rip+0x8cef]
xor  edi, edi
mov  r12, rax
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  edx, 0x5
lea  rsi, [rip+0x8ee1]
xor  edi, edi
xor  r15d, r15d
call 0xc920
mov  QWORD PTR [rsp+0x18], r14
mov  r12, rax
nop  DWORD PTR [rax+0x0]
bt   rbx, r15
jae  0x1fda0
mov  edi, 0x1
mov  ecx, r15d
shl  rdi, cl
cmp  rdi, 0x20
ja   0x1fe70
lea  rdx, [rip+0x9542]
movsxd rax, DWORD PTR [rdx+rdi*4]
add  rax, rdx
notrack jmp rax
nop  DWORD PTR [rax+rax*1+0x0]
call 0xc700
mov  rsi, rax
nop  DWORD PTR [rax+rax*1+0x0]
test rsi, rsi
je   0x1fda0
lea  rdi, [rip+0x8d99]
xor  eax, eax
call 0xbe90
mov  rdx, r12
mov  esi, ebp
mov  rdi, r13
mov  r14, rax
mov  rcx, rax
lea  r12, [rip+0x7224]
call 0xcf80
mov  rdi, r14
call 0xbb00
add  r15d, 0x1
cmp  r15d, 0x40
jne  0x1fbc8
mov  r14, QWORD PTR [rsp+0x18]
mov  rdi, r14
call 0x1a420
mov  QWORD PTR [rsp+0x18], rax
test rax, rax
je   0x1fcaf
xor  esi, esi
mov  rdi, rax
call 0x1e360
mov  r12, rax
test rax, rax
je   0x200b1
mov  edx, 0x5
lea  rsi, [rip+0x8b17]
xor  edi, edi
call 0xc920
mov  rdi, r13
mov  rcx, r12
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r12
call 0xbb00
mov  r12, QWORD PTR [rsp+0x8]
mov  edx, DWORD PTR [r12+0x8]
test edx, edx
je   0x1fd3c
xor  r15d, r15d
lea  r14, [rip+0x7199]
lea  rbx, [rip+0x8e52]
jmp  0x1fd0e
mov  ecx, edx
mov  r8d, 0x5
mov  rsi, rbx
xor  edi, edi
lea  rdx, [rip+0x8e35]
mov  QWORD PTR [rsp+0x8], r9
add  r15d, 0x1
call 0xc810
mov  rcx, QWORD PTR [rsp+0x8]
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  edx, DWORD PTR [r12+0x8]
cmp  edx, r15d
jbe  0x1fd3c
mov  rcx, QWORD PTR [r12]
mov  eax, r15d
mov  r9, QWORD PTR [rcx+rax*8]
test r15d, r15d
je   0x1fcd0
mov  rdx, r14
mov  rcx, r9
mov  esi, ebp
mov  rdi, r13
call 0xcf80
mov  edx, DWORD PTR [r12+0x8]
add  r15d, 0x1
cmp  edx, r15d
ja   0x1fd0e
mov  rax, QWORD PTR [rsp+0x10]
mov  edx, DWORD PTR [rax+0x8]
test edx, edx
jne  0x2001b
xor  esi, esi
mov  rdi, r13
call 0xbd70
mov  r12, rax
mov  rdi, QWORD PTR [rsp+0x18]
call 0xbb00
add  rsp, 0x28
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
lea  rsi, [rip+0x8d68]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
test rsi, rsi
jne  0x1fc19
nop  WORD PTR [rax+rax*1+0x0]
xor  edi, edi
call 0xbb00
jmp  0x1fc49
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0x8d20]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x8cf3]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x8cc8]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x8c97]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x8c67]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
mov  edx, 0x5
lea  rsi, [rip+0x8bef]
xor  edi, edi
call 0xc920
mov  r12, rax
jmp  0x1fa52
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
cmp  r15d, 0x6
je   0x1fea0
cmp  r15d, 0x7
jne  0x1fc00
lea  rsi, [rip+0x8c7e]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x8c4d]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1fc10
mov  rdi, r14
call 0xc2e0
mov  edi, eax
call 0x1e430
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x894d]
mov  r12, rax
call 0xc920
mov  rdi, r13
mov  rcx, r12
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r12
call 0xbb00
jmp  0x1fb68
mov  rdi, r14
call 0xcac0
mov  rdi, rax
call 0xc020
lea  rsi, [rip+0x889f]
mov  rdi, rax
mov  r12, rax
call 0xc710
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8b32]
mov  r15, rax
call 0xc920
mov  rdi, r13
mov  rcx, r15
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r15
call 0xbb00
test r12, r12
je   0x1fa97
mov  rdi, r12
call 0xc2c0
mov  rdi, r14
call 0xcc20
test eax, eax
je   0x1faa7
mov  rdi, r14
call 0xcc20
mov  edx, 0x5
cmp  eax, 0x1
je   0x200df
cmp  eax, 0x2
je   0x200f5
cmp  eax, 0x3
je   0x2010b
cmp  eax, 0x4
je   0x200c9
lea  rsi, [rip+0x6f24]
xor  edi, edi
call 0xc920
mov  r12, rax
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8ac2]
call 0xc920
mov  rcx, r12
mov  esi, ebp
mov  rdi, r13
mov  rdx, rax
call 0xcf80
jmp  0x1faa7
mov  rdi, r14
call 0xc840
mov  rdi, rax
call 0xcb80
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8a64]
mov  r12, rax
call 0xc920
mov  rdi, r13
mov  rcx, r12
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r12
call 0xbb00
jmp  0x1fa86
mov  rbx, rax
mov  rsi, rax
lea  rdi, [rip+0x87d2]
call 0xcb10
mov  ecx, DWORD PTR [rbx+0x8]
mov  r8d, 0x5
xor  edi, edi
lea  rdx, [rip+0x8ae7]
lea  rsi, [rip+0x8ae5]
mov  r12, rax
call 0xc810
mov  rdi, r13
mov  rcx, r12
mov  esi, ebp
mov  rdx, rax
call 0xcf80
mov  rdi, r12
call 0xbb00
jmp  0x1fd4c
lea  rdx, [rip+0x8abd]
lea  rsi, [rip+0x92a7]
xor  r12d, r12d
lea  rdi, [rip+0x6701]
call 0xc580
mov  QWORD PTR [rsp+0x18], 0x0
jmp  0x1fd59
mov  edx, 0x5
lea  rsi, [rip+0x6e28]
xor  edi, edi
call 0xc920
mov  r12, rax
jmp  0x1fa52
mov  rdi, r14
call 0xcdd0
mov  rdi, rax
call 0xd3d0
mov  r12, rax
jmp  0x1fc84
lea  rsi, [rip+0x89a7]
xor  edi, edi
call 0xc920
mov  r12, rax
jmp  0x1ffb0
lea  rsi, [rip+0x8981]
xor  edi, edi
call 0xc920
mov  r12, rax
jmp  0x1ffb0
lea  rsi, [rip+0x896f]
xor  edi, edi
call 0xc920
mov  r12, rax
jmp  0x1ffb0
lea  rsi, [rip+0x8960]
xor  edi, edi
call 0xc920
mov  r12, rax
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xffffffffffffe6a1]
call QWORD PTR [rip+0x210a3]
endbr64
push r15
push r14
mov  r14, rdi
mov  rdi, rsi
push r13
mov  r13, rdx
push r12
push rbp
mov  rbp, rsi
push rbx
sub  rsp, 0x8
call 0xc6c0
test eax, eax
jne  0x1cdf0
mov  rdi, rbp
mov  ebx, eax
lea  r12, [rip+0xa4eb]
call 0xc770
mov  rsi, r12
mov  rdi, rax
mov  rbp, rax
call 0xc8f0
mov  r15d, eax
test eax, eax
je   0x1cdc0
mov  rsi, r12
mov  rdi, rbp
call 0xbb50
mov  r12, rax
jmp  0x1cda3
nop  DWORD PTR [rax+0x0]
mov  esi, ebx
mov  rdi, r12
call 0xccd0
xor  edi, edi
mov  r15, rax
call 0xd3e0
mov  rsi, r15
mov  rdx, r13
mov  rdi, rax
mov  rbp, rax
call 0xd3a0
mov  r15d, eax
test eax, eax
je   0x1ce10
mov  rsi, rbp
mov  rdi, r14
call 0xc110
test rbp, rbp
je   0x1cda0
mov  rdi, rbp
call 0xbb30
add  ebx, 0x1
mov  rdi, r12
call 0xbda0
cmp  ebx, eax
jb   0x1cd58
mov  r15d, 0x1
jmp  0x1cddb
nop  WORD PTR [rax+rax*1+0x0]
call 0xc800
lea  rcx, [rip+0xca84]
mov  edx, 0x23
mov  rdi, r13
mov  esi, eax
call 0xd520
add  rsp, 0x8
mov  eax, r15d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
call 0xc800
mov  edx, 0x23
mov  rdi, r13
xor  r15d, r15d
mov  esi, eax
lea  rcx, [rip+0xb55a]
call 0xd520
jmp  0x1cddb
test rbp, rbp
je   0x1cddb
mov  rdi, rbp
call 0xbb30
endbr64
push r15
push r14
push r13
push r12
push rbp
mov  rbp, rdi
xor  edi, edi
push rbx
sub  rsp, 0x58
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x48], rax
xor  eax, eax
lea  rbx, [rsp+0x20]
lea  r12, [rsp+0x10]
call 0xc340
mov  rsi, rbp
mov  rdi, rbx
lea  rbp, [rsp+0x18]
mov  r13, rax
lea  r15, [rsp+0xc]
call 0xc370
xchg ax, ax
mov  rdx, r12
mov  rsi, rbp
mov  rdi, rbx
call 0xd2c0
test eax, eax
je   0x21670
mov  rdi, QWORD PTR [rsp+0x18]
mov  DWORD PTR [rsp+0xc], 0x0
call 0x1a690
test eax, eax
je   0x21660
mov  rdi, QWORD PTR [rsp+0x18]
mov  rsi, r15
call 0x1a980
mov  r8, QWORD PTR [rsp+0x10]
lea  rdx, [rip+0x7705]
mov  r14, rax
mov  eax, DWORD PTR [rsp+0xc]
cmp  eax, 0x1
je   0x2163d
xor  edx, edx
cmp  eax, 0x2
lea  rax, [rip+0x76f5]
cmove  rdx, rax
mov  rdi, r13
mov  rcx, r14
xor  eax, eax
lea  rsi, [rip+0x76ff]
call 0xc4a0
mov  rdi, r14
call 0xbb00
jmp  0x215e0
nop  DWORD PTR [rax+rax*1+0x0]
xor  edi, edi
call 0xbb00
jmp  0x215e0
nop  DWORD PTR [rax+0x0]
xor  esi, esi
mov  rdi, r13
call 0xbd70
mov  rdx, QWORD PTR [rsp+0x48]
sub  rdx, QWORD PTR fs:0x28
jne  0x21699
add  rsp, 0x58
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
endbr64
push r14
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rdi
mov  rdi, rsi
push rbx
call 0xc1c0
lea  rsi, [rip+0xa681]
mov  rdi, r13
call 0xd550
mov  rdi, r13
call 0xc250
mov  rdi, rbp
call 0xbde0
mov  r14, rax
mov  eax, DWORD PTR [rax+0x8]
test eax, eax
je   0x1cc05
xor  ebx, ebx
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [r14]
mov  edx, ebx
add  ebx, 0x1
mov  rbp, QWORD PTR [rax+rdx*8]
mov  rdi, rbp
call 0xbeb0
mov  rdi, r13
mov  r12, rax
call 0xc1c0
xor  esi, esi
mov  rdi, rbp
call 0xcf00
mov  rsi, r13
mov  rdi, rbp
call 0xbef0
mov  rsi, r12
mov  rdi, rbp
call 0xcf00
mov  rdi, r13
call 0xc820
cmp  DWORD PTR [r14+0x8], ebx
ja   0x1cbb8
mov  rdi, r13
call 0xc1b0
mov  rdi, r13
call 0xc820
pop  rbx
mov  rdi, r14
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
push r15
push r14
push r13
push r12
mov  r12d, esi
push rbp
mov  rbp, rdi
xor  edi, edi
push rbx
sub  rsp, 0x8
call 0xc340
mov  rdi, rbp
mov  r13, rax
call 0xbdc0
mov  rdi, rbp
mov  ebx, eax
call 0xcc00
mov  r14d, eax
call 0xcb50
test rbp, rbp
je   0x20570
mov  rsi, rax
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x20186
cmp  rsi, QWORD PTR [rax]
je   0x20196
mov  rdi, rbp
call 0xd0f0
test eax, eax
je   0x20570
mov  rdi, rbp
call 0xc7d0
xor  ecx, ecx
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
add  r12d, 0x1
call 0xcf80
mov  rdi, rbp
call 0xcc30
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x884a]
mov  r15, rax
call 0xc920
mov  rcx, r15
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  edi, ebx
call 0xccc0
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8a2a]
mov  r15, rax
call 0xc920
mov  rcx, r15
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
test r14d, r14d
jne  0x204f0
mov  rdi, rbp
lea  r14, [rip+0x6a4f]
call 0xd160
mov  edx, 0x5
lea  rsi, [rip+0x7c28]
test eax, eax
lea  rax, [rip+0x65ca]
cmove  r14, rax
xor  edi, edi
call 0xc920
mov  esi, r12d
mov  rdi, r13
mov  rcx, r14
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xd070
mov  r14, rax
test rax, rax
je   0x2028c
mov  edx, 0x5
lea  rsi, [rip+0x88e5]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
cmp  ebx, 0x1
je   0x205a0
mov  rdi, rbp
call 0xcef0
test eax, eax
jne  0x20528
mov  rdi, rbp
call 0xc6f0
mov  r14, rax
test rax, rax
je   0x202d9
mov  edx, 0x5
lea  rsi, [rip+0x88b8]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xc090
mov  rdi, rax
test rax, rax
je   0x2032a
call 0xc500
mov  esi, 0x2a
mov  rdi, rax
call 0xc280
mov  edx, 0x5
lea  rsi, [rip+0x887b]
xor  edi, edi
mov  r14, rax
call 0xc920
mov  rdi, r13
mov  rcx, r14
mov  esi, r12d
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xbb00
mov  rdi, rbp
call 0xc4f0
mov  r14, rax
test rax, rax
je   0x2035e
mov  edx, 0x5
lea  rsi, [rip+0x8845]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xc220
mov  r14, rax
test rax, rax
je   0x20392
mov  edx, 0x5
lea  rsi, [rip+0x881a]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xc8a0
mov  r14, rax
test rax, rax
je   0x203c6
mov  edx, 0x5
lea  rsi, [rip+0x87f9]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xcdb0
mov  r14, rax
test rax, rax
je   0x203fa
mov  edx, 0x5
lea  rsi, [rip+0x87d5]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xcfc0
mov  r14, rax
test rax, rax
je   0x2042e
mov  edx, 0x5
lea  rsi, [rip+0x87ae]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xbc10
mov  r14, rax
test rax, rax
je   0x20462
mov  edx, 0x5
lea  rsi, [rip+0x878d]
xor  edi, edi
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
mov  rdi, rbp
call 0xce00
mov  r14, rax
test rax, rax
je   0x204d6
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8769]
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
lea  r14, [rip+0x67d9]
call 0xcf80
mov  rdi, rbp
call 0xca30
mov  edx, 0x5
lea  rsi, [rip+0x8743]
test eax, eax
lea  rax, [rip+0x634c]
cmove  r14, rax
xor  edi, edi
call 0xc920
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
mov  rcx, r14
call 0xcf80
add  rsp, 0x8
mov  rdi, r13
xor  esi, esi
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xbd70
xchg ax, ax
mov  edi, r14d
call 0xbb40
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x864b]
mov  r14, rax
call 0xc920
mov  rcx, r14
mov  esi, r12d
mov  rdi, r13
mov  rdx, rax
call 0xcf80
jmp  0x20218
nop  DWORD PTR [rax+0x0]
mov  esi, eax
lea  rdi, [rip+0x863c]
xor  eax, eax
call 0xbe90
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x862a]
mov  r14, rax
call 0xc920
mov  rdi, r13
mov  rcx, r14
mov  esi, r12d
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xbb00
jmp  0x202a5
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x8691]
lea  rsi, [rip+0x8d82]
lea  rdi, [rip+0x61ff]
call 0xc580
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0xc9c0
test rax, rax
je   0x20295
mov  rdi, rbp
call 0xc9c0
cmp  rax, 0xffffffffffffffff
je   0x20295
mov  rdi, rbp
call 0xc9c0
test rax, rax
js   0x20688
pxor xmm0, xmm0
cvtsi2sd xmm0, rax
movsd  xmm1, QWORD PTR [rip+0x9d93]
lea  rsi, [rip+0x87df]
comisd xmm0, xmm1
jbe  0x205fd
divsd  xmm0, xmm1
lea  rsi, [rip+0x7699]
comisd xmm0, xmm1
jbe  0x2060e
lea  rsi, [rip+0x8211]
divsd  xmm0, xmm1
movsd  xmm1, QWORD PTR [rip+0x9d72]
comisd xmm0, xmm1
jbe  0x20627
lea  rsi, [rip+0x6836]
divsd  xmm0, xmm1
movsd  xmm1, QWORD PTR [rip+0x9d61]
comisd xmm0, xmm1
jbe  0x20640
lea  rsi, [rip+0x842d]
divsd  xmm0, xmm1
lea  rdi, [rip+0x851b]
mov  eax, 0x1
call 0xbe90
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x850a]
mov  r14, rax
call 0xc920
mov  rdi, r13
mov  rcx, r14
mov  esi, r12d
mov  rdx, rax
call 0xcf80
mov  rdi, r14
call 0xbb00
jmp  0x20295
nop  DWORD PTR [rax]
mov  rdx, rax
and  eax, 0x1
pxor xmm0, xmm0
shr  rdx, 1
or   rdx, rax
cvtsi2sd xmm0, rdx
addsd  xmm0, xmm0
endbr64
push r12
push rbp
mov  rbp, QWORD PTR [rsi]
push rbx
mov  r12, QWORD PTR [rdi]
mov  rdi, r12
call 0xc910
mov  rdi, rbp
mov  ebx, eax
call 0xc910
mov  r8d, eax
mov  eax, 0xffffffff
cmp  ebx, r8d
jl   0x1aa77
mov  rdi, r12
call 0xc910
mov  rdi, rbp
mov  ebx, eax
call 0xc910
cmp  ebx, eax
setg al
movzx  eax, al
pop  rbx
pop  rbp
pop  r12
endbr64
push r15
mov  r15, rdi
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x38
mov  DWORD PTR [rsp+0x14], esi
call 0xd080
mov  rdi, r15
mov  QWORD PTR [rsp+0x8], rax
call 0xcaa0
mov  rdi, r15
mov  QWORD PTR [rsp+0x18], rax
call 0xbec0
mov  rdi, r15
mov  r12, rax
call 0xd270
mov  rdi, r15
mov  rbx, rax
call 0xcd00
xor  edi, edi
mov  r13, rax
call 0xc340
lea  rdi, [rip+0x872c]
mov  rbp, rax
call 0xbd20
mov  rdi, r15
test rax, rax
jne  0x1f103
call 0xc4d0
mov  rdx, rax
test rax, rax
je   0x1f2a2
mov  r14d, DWORD PTR [rsp+0x14]
xor  ecx, ecx
mov  rdi, rbp
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xc660
test rax, rax
mov  QWORD PTR [rsp+0x20], rax
je   0x1e632
mov  edx, 0x5
lea  rsi, [rip+0xa181]
xor  edi, edi
add  r14d, 0x1
call 0xc920
mov  rcx, QWORD PTR [rsp+0x20]
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  rdi, r15
call 0xc790
test rax, rax
mov  QWORD PTR [rsp+0x20], rax
je   0x1e672
mov  edx, 0x5
lea  rsi, [rip+0xa14f]
xor  edi, edi
call 0xc920
mov  rcx, QWORD PTR [rsp+0x20]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xd4c0
mov  r14, rax
test rax, rax
je   0x1e6d5
xor  esi, esi
mov  rdi, rax
call 0x1e360
mov  r8, rax
test rax, rax
je   0x1f31a
mov  edx, 0x5
lea  rsi, [rip+0xa103]
xor  edi, edi
mov  QWORD PTR [rsp+0x20], r8
call 0xc920
mov  rcx, QWORD PTR [rsp+0x20]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x20]
call 0xbb00
mov  rdi, r15
call 0xbdd0
mov  rdi, rax
test rax, rax
je   0x1e759
call 0xc340
mov  rdi, r15
mov  QWORD PTR [rsp+0x20], rax
call 0xd360
test rax, rax
jne  0x1f2bd
mov  eax, DWORD PTR [rsp+0x14]
mov  edx, 0x5
lea  rsi, [rip+0xa0a6]
lea  r14d, [rax+0x1]
mov  rax, QWORD PTR [rsp+0x20]
mov  rcx, QWORD PTR [rax]
mov  QWORD PTR [rsp+0x28], rcx
test ebx, 0x400000
jne  0x1e730
lea  rsi, [rip+0xa097]
xor  edi, edi
call 0xc920
mov  rcx, QWORD PTR [rsp+0x28]
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x20]
mov  esi, 0x1
call 0xbd70
mov  rdi, r15
call 0xd250
test rax, rax
mov  QWORD PTR [rsp+0x20], rax
je   0x1e799
mov  edx, 0x5
lea  rsi, [rip+0xa060]
xor  edi, edi
call 0xc920
mov  rcx, QWORD PTR [rsp+0x20]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xd4e0
test rax, rax
mov  QWORD PTR [rsp+0x20], rax
je   0x1e7d9
mov  edx, 0x5
lea  rsi, [rip+0xa030]
xor  edi, edi
call 0xc920
mov  rcx, QWORD PTR [rsp+0x20]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xd0b0
mov  rcx, rax
test rax, rax
je   0x1ea84
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  rax, QWORD PTR [rsp+0x18]
mov  esi, DWORD PTR [rax+0x8]
test esi, esi
jne  0x1f22f
mov  edx, 0x5
lea  rsi, [rip+0x9ff4]
xor  edi, edi
mov  QWORD PTR [rsp+0x18], rcx
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  rdi, r15
call 0xbea0
test rax, rax
je   0x1e878
mov  rdi, r15
call 0xbea0
mov  edx, 0x5
lea  rsi, [rip+0x9fbd]
xor  edi, edi
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xd390
test eax, eax
jne  0x1f14d
mov  rdi, r15
call 0xd420
test rax, rax
mov  QWORD PTR [rsp+0x18], rax
je   0x1e8c8
mov  edx, 0x5
lea  rsi, [rip+0x9f88]
xor  edi, edi
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xd1e0
test eax, eax
jne  0x1f20b
mov  rdi, r15
call 0xc240
mov  rdx, rax
test rax, rax
je   0x1e932
mov  esi, 0x1f
lea  rdi, [rip+0x7e5b]
xor  eax, eax
call 0xbe90
mov  edx, 0x5
lea  rsi, [rip+0x9f80]
xor  edi, edi
mov  r15, rax
call 0xc920
mov  rdi, rbp
mov  rcx, r15
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, r15
call 0xbb00
test r13, r13
jne  0x1f19e
mov  rdx, QWORD PTR [rip+0x1166e]
mov  rsi, QWORD PTR [rip+0x11677]
xor  r14d, r14d
mov  rdi, QWORD PTR [rip+0x1167d]
mov  rcx, rdx
call 0xc1a0
mov  edx, DWORD PTR [r12+0x8]
mov  QWORD PTR [rsp+0x18], rax
test edx, edx
je   0x1e9ba
mov  r13, QWORD PTR [rsp+0x18]
mov  QWORD PTR [rsp+0x20], rbx
mov  rbx, r12
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbx]
mov  edx, r14d
add  r14d, 0x1
mov  r12, QWORD PTR [rax+rdx*8]
mov  rdi, r12
call 0xd3d0
mov  rdi, r12
mov  r15, rax
call 0xc560
mov  rdx, r15
mov  rdi, r13
mov  rsi, rax
call 0xcf70
cmp  DWORD PTR [rbx+0x8], r14d
ja   0x1e980
mov  rbx, QWORD PTR [rsp+0x20]
mov  eax, DWORD PTR [rsp+0x14]
xor  r12d, r12d
lea  r15, [rip+0x9eed]
lea  r14d, [rax+0x1]
mov  rax, QWORD PTR [rsp+0x8]
mov  eax, DWORD PTR [rax+0x8]
test eax, eax
je   0x1eb05
mov  QWORD PTR [rsp+0x20], rbx
mov  rbx, QWORD PTR [rsp+0x8]
jmp  0x1ea35
nop  DWORD PTR [rax+rax*1+0x0]
mov  ecx, DWORD PTR [rbx+0x8]
lea  rdx, [rip+0x9ec5]
xor  edi, edi
mov  r8d, 0x5
lea  rsi, [rip+0x8adf]
call 0xc810
mov  rcx, r13
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  rdi, r13
add  r12d, 0x1
call 0xbb00
cmp  DWORD PTR [rbx+0x8], r12d
jbe  0x1eb00
mov  rdx, QWORD PTR [rbx]
mov  eax, r12d
mov  rdi, QWORD PTR [rsp+0x18]
mov  r13, QWORD PTR [rdx+rax*8]
mov  rsi, r13
call 0xd0e0
mov  rdx, rax
test rax, rax
je   0x1eae8
mov  rsi, r13
mov  rdi, r15
xor  eax, eax
call 0xbe90
mov  r13, rax
test r12d, r12d
je   0x1e9f0
mov  rcx, r13
lea  rdx, [rip+0x83e9]
mov  esi, r14d
mov  rdi, rbp
call 0xcf80
jmp  0x1ea1f
mov  rax, QWORD PTR [rsp+0x18]
mov  ecx, DWORD PTR [rax+0x8]
test ecx, ecx
je   0x1e830
mov  rsi, rax
lea  rdi, [rip+0x9d6e]
call 0xcb10
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x9d54]
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x18]
call 0xbb00
jmp  0x1e830
nop  DWORD PTR [rax]
mov  rdi, r13
call 0xd3d0
mov  r13, rax
jmp  0x1ea68
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rsp+0x20]
mov  edx, 0x5
lea  rsi, [rip+0x9d97]
xor  edi, edi
xor  r15d, r15d
call 0xc920
lea  r14, [rip+0x9e97]
mov  r12, rax
jmp  0x1ebe1
nop  WORD PTR [rax+rax*1+0x0]
cmp  r15d, 0x8
je   0x1f0c8
cmp  rax, 0x100
jbe  0x1ec90
cmp  r15d, 0xd
je   0x1f0e8
cmp  rax, 0x2000
jbe  0x1ed98
cmp  r15d, 0xf
je   0x1efa8
cmp  r15d, 0x11
jne  0x1ec6a
lea  rsi, [rip+0xae31]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
test rsi, rsi
je   0x1ebd3
mov  eax, DWORD PTR [rsp+0x14]
mov  rdi, r14
lea  r13d, [rax+0x1]
xor  eax, eax
test r12, r12
je   0x1ef30
call 0xbe90
mov  rdx, r12
mov  esi, r13d
mov  rdi, rbp
mov  rcx, rax
mov  QWORD PTR [rsp+0x8], rax
xor  r12d, r12d
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x8]
call 0xbb00
add  r15d, 0x1
cmp  r15d, 0x40
je   0x1ef70
bt   rbx, r15
jae  0x1ebd3
mov  eax, 0x1
mov  ecx, r15d
shl  rax, cl
cmp  r15d, 0x14
je   0x1efe8
cmp  rax, 0x100000
jbe  0x1eb30
cmp  r15d, 0x25
je   0x1ed50
48 ba 00 00 00 00 20 00 00 00 movabs rdx, 0x2000000000
cmp  rax, rdx
ja   0x1ee20
cmp  r15d, 0x1c
je   0x1f0a8
cmp  rax, 0x10000000
jbe  0x1edf0
cmp  r15d, 0x1e
je   0x1f088
cmp  r15d, 0x1f
jne  0x1edc7
lea  rsi, [rip+0xaefa]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
cmp  r15d, 0xe
jne  0x1ebd3
lea  rsi, [rip+0xad75]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop
cmp  rax, 0x20
ja   0x1ed70
lea  rdx, [rip+0xa36f]
movsxd rax, DWORD PTR [rdx+rax*4]
add  rax, rdx
notrack jmp rax
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x9c52]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x9c21]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xac61]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x9bc8]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x9b8e]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x9b7e]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
cmp  r15d, 0x6
jne  0x1ebd3
lea  rsi, [rip+0x9ba3]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax]
cmp  r15d, 0xa
je   0x1f048
cmp  r15d, 0xc
jne  0x1ee68
lea  rsi, [rip+0xac1d]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
cmp  r15d, 0x1d
jne  0x1ebd3
lea  rsi, [rip+0xad10]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+0x0]
cmp  r15d, 0x19
je   0x1f068
cmp  r15d, 0x1b
jne  0x1ee8d
lea  rsi, [rip+0x9b76]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop
cmp  r15d, 0x2b
je   0x1f028
48 ba 00 00 00 00 00 08 00 00 movabs rdx, 0x80000000000
cmp  rax, rdx
jbe  0x1eee0
cmp  r15d, 0x2d
je   0x1f008
cmp  r15d, 0x2e
jne  0x1eeb2
lea  rsi, [rip+0x9b59]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
cmp  r15d, 0x9
jne  0x1ebd3
lea  rsi, [rip+0x9ac1]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
cmp  r15d, 0x18
jne  0x1ebd3
lea  rsi, [rip+0xabba]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
cmp  r15d, 0x2c
jne  0x1ebd3
lea  rsi, [rip+0x9ad4]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  WORD PTR [rax+rax*1+0x0]
cmp  r15d, 0x28
je   0x1efc8
cmp  r15d, 0x2a
jne  0x1ef0b
lea  rsi, [rip+0xad01]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
cmp  r15d, 0x27
jne  0x1ebd3
lea  rsi, [rip+0xac6c]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
call 0xbe90
mov  esi, r13d
mov  rdi, rbp
add  r15d, 0x1
mov  rcx, rax
lea  rdx, [rip+0x7f17]
mov  QWORD PTR [rsp+0x8], rax
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x8]
call 0xbb00
cmp  r15d, 0x40
jne  0x1ebe1
nop  WORD PTR [rax+rax*1+0x0]
xor  esi, esi
mov  rdi, rbp
call 0xbd70
cmp  QWORD PTR [rsp+0x18], 0x0
mov  rbp, rax
je   0x1ef8f
mov  rdi, QWORD PTR [rsp+0x18]
call 0xd2a0
add  rsp, 0x38
mov  rax, rbp
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0xaa69]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xabf9]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xaa49]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xac51]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xac09]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x9905]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xaa21]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xaa89]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xaa11]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0xa8b1]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
nop  DWORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x987c]
mov  edx, 0x5
xor  edi, edi
call 0xc920
mov  rsi, rax
jmp  0x1eb90
call 0xc450
lea  rdi, [rip+0x7675]
mov  esi, 0x80
lea  rdx, [rip+0x9caf]
mov  r12, rax
mov  rcx, rax
xor  eax, eax
call 0xc8b0
mov  rdi, r12
call 0xbb00
test rbp, rbp
je   0x1ef8f
mov  rdi, rbp
mov  esi, 0x1
xor  ebp, ebp
call 0xbd70
jmp  0x1ef8f
mov  rdi, r15
call 0xd390
mov  edi, eax
call 0x1e430
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x96b3]
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x18]
call 0xbb00
jmp  0x1e888
mov  rdi, r13
call 0xc020
lea  rsi, [rip+0x96e7]
mov  rdi, rax
mov  r15, rax
call 0xc710
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x96d4]
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  rdi, rbp
mov  rdx, rax
mov  eax, DWORD PTR [rsp+0x14]
lea  r14d, [rax+0x1]
mov  esi, r14d
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x18]
call 0xbb00
test r15, r15
je   0x1e93b
mov  rdi, r15
call 0xc2c0
jmp  0x1e93b
mov  ecx, DWORD PTR [rsp+0x14]
lea  r14d, [rcx+0x1]
cmp  eax, 0x5
ja   0x1f457
lea  rdx, [rip+0x9e71]
mov  eax, eax
movsxd rax, DWORD PTR [rdx+rax*4]
add  rax, rdx
notrack jmp rax
mov  rsi, rax
lea  rdi, [rip+0x95c1]
mov  QWORD PTR [rsp+0x28], rcx
call 0xcb10
mov  rsi, QWORD PTR [rsp+0x28]
lea  rdi, [rip+0x95ae]
mov  QWORD PTR [rsp+0x20], rax
mov  rdx, rax
xor  eax, eax
call 0xbe90
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x9599]
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x18]
call 0xbb00
mov  rdi, QWORD PTR [rsp+0x20]
call 0xbb00
jmp  0x1e830
mov  edx, 0x5
lea  rsi, [rip+0x94d8]
xor  edi, edi
call 0xc920
mov  rdx, rax
jmp  0x1e5e4
mov  rdi, r15
call 0xd360
mov  rdi, rax
call 0xc020
lea  rsi, [rip+0x94df]
mov  rdi, rax
mov  r14, rax
call 0xc710
mov  rdi, QWORD PTR [rsp+0x20]
lea  rsi, [rip+0x77b2]
mov  QWORD PTR [rsp+0x28], rax
mov  rdx, rax
xor  eax, eax
call 0xc4a0
mov  rdi, QWORD PTR [rsp+0x28]
call 0xbb00
test r14, r14
je   0x1e700
mov  rdi, r14
call 0xc2c0
jmp  0x1e700
mov  rdi, r14
call 0xd3d0
mov  r8, rax
jmp  0x1e698
mov  edx, 0x5
lea  rsi, [rip+0x950e]
xor  edi, edi
call 0xc920
mov  edx, 0x5
lea  rsi, [rip+0x9503]
xor  edi, edi
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  rdi, r15
call 0xc400
mov  rdx, rax
test rax, rax
je   0x1e8d8
mov  esi, 0x22
lea  rdi, [rip+0x73c7]
xor  eax, eax
call 0xbe90
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x94db]
mov  QWORD PTR [rsp+0x18], rax
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  rdi, rbp
mov  esi, r14d
mov  rdx, rax
call 0xcf80
mov  rdi, QWORD PTR [rsp+0x18]
call 0xbb00
jmp  0x1e8d8
mov  edx, 0x5
lea  rsi, [rip+0x9484]
xor  edi, edi
call 0xc920
mov  rcx, rax
xor  edi, edi
mov  edx, 0x5
mov  QWORD PTR [rsp+0x18], rcx
lea  rsi, [rip+0x945a]
call 0xc920
mov  rcx, QWORD PTR [rsp+0x18]
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
jmp  0x1e8d8
mov  edx, 0x5
lea  rsi, [rip+0x8ef2]
xor  edi, edi
call 0xc920
mov  rcx, rax
jmp  0x1f3df
mov  edx, 0x5
lea  rsi, [rip+0x9438]
xor  edi, edi
call 0xc920
mov  rcx, rax
jmp  0x1f3df
mov  edx, 0x5
lea  rsi, [rip+0x93f1]
xor  edi, edi
call 0xc920
mov  rcx, rax
jmp  0x1f3df
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x93e7]
call 0xc920
xor  ecx, ecx
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
endbr64
cmp  edi, 0xe
ja   0x1c32b
lea  rdx, [rip+0xce00]
mov  edi, edi
movsxd rax, DWORD PTR [rdx+rdi*4]
add  rax, rdx
notrack jmp rax
mov  edx, 0x5
lea  rsi, [rip+0xc01d]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbc57]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbfa1]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf7b]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf69]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf44]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf4a]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf3b]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf2d]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbc7d]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbf09]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbefb]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbee9]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbedb]
xor  edi, edi
jmp  0xc920
xor  eax, eax
endbr64
push r13
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x12668
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x125ba
cmp  rsi, QWORD PTR [rax]
je   0x125ca
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x12668
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
jne  0x12610
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x125ea
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x126f1
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  r13, [rbx+0x20]
mov  rdi, r13
call 0xbd80
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x144ad]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x126c0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x12690
mov  r12d, 0x1
mov  rdi, r13
call 0xcfe0
jmp  0x125dc
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x14380]
lea  rsi, [rip+0x1522a]
xor  r12d, r12d
lea  rdi, [rip+0x141fb]
call 0xc580
jmp  0x125dc
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x11a43]
xor  eax, eax
call 0xc160
jmp  0x12656
xchg ax, ax
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x1280b]
xor  eax, eax
call 0xc160
jmp  0x12656
endbr64
push r12
mov  r12, rsi
push rbp
mov  rbp, rdi
sub  rsp, 0x8
mov  eax, DWORD PTR [rdi+0x58]
test eax, eax
je   0x1b696
lea  rdi, [rip+0xb0d6]
xor  eax, eax
call 0xbc90
mov  rsi, r12
lea  rdi, [rip+0xb4a5]
xor  eax, eax
call 0xbc90
mov  edx, DWORD PTR [rbp+0x34]
mov  esi, DWORD PTR [rbp+0x20]
add  rsp, 0x8
mov  rdi, rbp
pop  rbp
pop  r12
endbr64
push r14
push r13
push r12
mov  r12, rdi
push rbp
sub  rsp, 0x8
call 0xbf40
mov  rdi, r12
lea  r12, [rip+0xae28]
mov  rbp, rax
call 0xc930
mov  rdi, r12
mov  r13, rax
call 0xbd20
test rax, rax
je   0x1d574
mov  rdi, r12
call 0xbd20
mov  rbp, rax
xor  edx, edx
lea  rsi, [rip+0xb96b]
mov  rdi, rbp
xor  eax, eax
call 0xbe30
mov  esi, 0x4
mov  rdi, rax
mov  r12, rax
call 0xbba0
test eax, eax
jne  0x1d5d8
xor  ecx, ecx
mov  rdx, r13
lea  rsi, [rip+0x9e96]
mov  rdi, rbp
xor  eax, eax
call 0xbe30
mov  r14, rax
mov  rdi, r12
call 0xbb00
mov  rdi, r13
call 0xbb00
add  rsp, 0x8
mov  rax, r14
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
xor  edx, edx
mov  rsi, r13
mov  rdi, r12
xor  eax, eax
call 0xbe30
mov  r14, rax
endbr64
push r13
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x120f8
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1204a
cmp  rsi, QWORD PTR [rax]
je   0x1205a
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x120f8
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
jne  0x120a0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x1207a
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x12181
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  r13, [rbx+0x20]
mov  rdi, r13
call 0xbd80
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x12d46]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x12150
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x12120
mov  r12d, 0x1
mov  rdi, r13
call 0xcfe0
jmp  0x1206c
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x148f0]
lea  rsi, [rip+0x1583a]
xor  r12d, r12d
lea  rdi, [rip+0x1476b]
call 0xc580
jmp  0x1206c
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x11fb3]
xor  eax, eax
call 0xc160
jmp  0x120e6
xchg ax, ax
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x12cb3]
xor  eax, eax
call 0xc160
jmp  0x120e6
endbr64
endbr64
push r15
xor  r15d, r15d
push r14
mov  r14d, esi
push r13
push r12
mov  r12, rdi
xor  edi, edi
push rbp
push rbx
sub  rsp, 0x18
mov  DWORD PTR [rsp+0xc], esi
call 0xc340
mov  rdi, r12
mov  rbp, rax
call 0xc880
mov  rdi, r12
mov  rbx, rax
call 0xc4c0
xor  ecx, ecx
mov  esi, r14d
mov  rdi, rbp
mov  rdx, rax
call 0xcf80
mov  edx, 0x5
lea  rsi, [rip+0x9227]
xor  edi, edi
call 0xc920
mov  r12, rax
test rbx, rbx
jne  0x1f733
jmp  0x1f7cb
mov  edi, 0x1
mov  ecx, r15d
shl  rdi, cl
cmp  r15d, 0x3
je   0x1f7a8
cmp  rdi, 0x8
ja   0x1f770
lea  rax, [rdi-0x2]
test rax, 0xfffffffffffffffd
je   0x1f73d
test r15d, r15d
je   0x1f7a8
call 0xc430
mov  rdi, rax
call 0xd3d0
mov  r14, rax
test r14, r14
je   0x1f73d
mov  rsi, r14
lea  rdi, [rip+0x92c6]
xor  eax, eax
add  r15d, 0x1
call 0xbe90
mov  rdx, r12
mov  rdi, rbp
lea  r12, [rip+0x7755]
mov  r13, rax
mov  eax, DWORD PTR [rsp+0xc]
mov  rcx, r13
lea  esi, [rax+0x1]
call 0xcf80
mov  rdi, r14
call 0xbb00
mov  rdi, r13
call 0xbb00
cmp  r15d, 0x40
je   0x1f755
bt   rbx, r15
jb   0x1f6a0
xor  edi, edi
add  r15d, 0x1
call 0xbb00
xor  edi, edi
call 0xbb00
cmp  r15d, 0x40
jne  0x1f733
add  rsp, 0x18
mov  rdi, rbp
xor  esi, esi
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xbd70
nop  DWORD PTR [rax]
cmp  r15d, 0xa
jne  0x1f6d4
mov  edi, 0x400
call 0x1f480
mov  esi, 0x20
lea  rdi, [rip+0x6fbf]
mov  rdx, rax
xor  eax, eax
call 0xbe90
mov  r14, rax
jmp  0x1f6e4
nop  WORD PTR [rax+rax*1+0x0]
call 0x1f480
mov  esi, 0x1e
lea  rdi, [rip+0x6f96]
mov  rdx, rax
xor  eax, eax
call 0xbe90
mov  r14, rax
jmp  0x1f6e4
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x8682]
call 0xc920
mov  esi, 0x20
lea  rdi, [rip+0x6f65]
mov  rdx, rax
xor  eax, eax
call 0xbe90
lea  rdi, [rip+0x91be]
mov  rsi, rax
xor  eax, eax
call 0xbe90
mov  esi, DWORD PTR [rsp+0xc]
mov  rdi, rbp
mov  rdx, r12
mov  r14, rax
mov  rcx, rax
add  esi, 0x1
call 0xcf80
mov  rdi, r14
call 0xbb00
endbr64
push rbp
call 0x1afa0
xor  esi, esi
mov  rdi, rax
xor  eax, eax
call 0xcbf0
mov  rbp, rax
call 0x1afa0
mov  rdi, rbp
pop  rbp
mov  rsi, rax
endbr64
cmp  rdi, 0x40
je   0x1f5f8
ja   0x1f4b0
cmp  rdi, 0x20
ja   0x1f548
lea  rdx, [rip+0x9c0b]
movsxd rax, DWORD PTR [rdx+rdi*4]
add  rax, rdx
notrack jmp rax
nop  DWORD PTR [rax+rax*1+0x0]
cmp  rdi, 0x400
je   0x1f5e0
jbe  0x1f4d8
cmp  rdi, 0x1000
je   0x1f5c8
cmp  rdi, 0xffffffffffffffff
jne  0x1f508
xor  eax, eax
ret
nop  DWORD PTR [rax]
cmp  rdi, 0x100
je   0x1f610
cmp  rdi, 0x200
jne  0x1f528
mov  edx, 0x5
lea  rsi, [rip+0x94e2]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+0x0]
cmp  rdi, 0x800
jne  0x1f548
mov  edx, 0x5
lea  rsi, [rip+0x94db]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+0x0]
cmp  rdi, 0x80
jne  0x1f548
mov  edx, 0x5
lea  rsi, [rip+0xa893]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+0x0]
jmp  0xc430
nop  DWORD PTR [rax]
mov  edx, 0x5
lea  rsi, [rip+0x88ff]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa72c]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa76c]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa794]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0x8c01]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa7a4]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0x93d4]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa79c]
xor  edi, edi
jmp  0xc920
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa6a4]
xor  edi, edi
endbr64
push r15
mov  r15d, edi
push r14
lea  r14, [rip+0xafe4]
push r13
lea  r13, [rip+0xafd8]
push r12
lea  r12, [rip+0x9abb]
push rbp
push rbx
sub  rsp, 0x18
mov  rbp, QWORD PTR [rip+0x12c3f]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
lea  rbx, [rsp+0x4]
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [rbp+0x0]
mov  esi, 0x4
mov  rdi, rbx
call 0xc7a0
test rax, rax
je   0x1d3d0
mov  rdi, rbx
call 0xc3b0
cmp  rax, 0x3
je   0x1d3d0
mov  rsi, r12
mov  rdi, rbx
call 0xcca0
test eax, eax
je   0x1d450
movsx  edi, BYTE PTR [rsp+0x4]
call 0xd300
mov  rsi, r13
mov  rdi, rbx
mov  BYTE PTR [rsp+0x4], al
call 0xcca0
test eax, eax
je   0x1d458
mov  rsi, r14
mov  rdi, rbx
call 0xcca0
test eax, eax
jne  0x1d3d0
mov  rdx, QWORD PTR [rsp+0x8]
sub  rdx, QWORD PTR fs:0x28
jne  0x1d45f
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
xchg ax, ax
mov  eax, r15d
jmp  0x1d42f
nop  DWORD PTR [rax]
mov  eax, 0x1
jmp  0x1d42f
endbr64
push r15
mov  r15, rsi
push r14
push r13
push r12
push rbp
mov  rbp, rdi
call 0xbf10
mov  rdi, rbp
mov  rsi, rax
mov  r12, rax
call 0x1cb70
mov  rdi, r12
call 0xcbe0
mov  r13, rax
call 0xcea0
mov  esi, 0x1
mov  rbp, rax
mov  rdi, rax
call 0xc3f0
mov  rsi, r13
mov  rdi, rbp
call 0xbfd0
xor  esi, esi
mov  rdi, rbp
call 0xc720
mov  r14, rax
test rax, rax
je   0x1ccd0
test r13, r13
je   0x1cca0
mov  rdi, r13
call 0xc9a0
test r12, r12
je   0x1ccad
mov  rdi, r12
call 0xbb30
test rbp, rbp
je   0x1ccba
mov  rdi, rbp
call 0xbb30
xor  edi, edi
call 0xbb00
pop  rbp
mov  rax, r14
pop  r12
pop  r13
pop  r14
pop  r15
ret
xchg ax, ax
call 0xc200
lea  rcx, [rip+0xcb44]
xor  edx, edx
mov  rdi, r15
mov  esi, eax
xor  eax, eax
call 0xc160
endbr64
push r15
push r14
push r13
push r12
push rbp
test rdi, rdi
je   0x22558
mov  r13, rdi
mov  rdi, rsi
mov  rbp, rsi
xor  r15d, r15d
call 0x1ab20
mov  r12, rax
test rax, rax
je   0x22547
mov  rsi, r13
mov  rdx, rbp
mov  rdi, r12
call 0x1abd0
mov  r13, rax
test rax, rax
je   0x22580
mov  rdi, r12
call 0xc860
push rbp
lea  rcx, [rip+0x5779]
xor  esi, esi
push 0x0
mov  rdi, rax
lea  r9, [rip+0x69af]
mov  r8, r13
xor  edx, edx
call 0xc120
pop  rcx
pop  rsi
mov  r14, rax
test rax, rax
je   0x22590
mov  rdi, r13
call 0xbb00
lea  rsi, [rip+0x69a6]
lea  rdi, [rip+0x576a]
xor  eax, eax
call 0xc6a0
sub  rsp, 0x8
mov  rdi, r14
xor  r9d, r9d
push rbp
mov  rdx, rax
mov  r8d, 0xffffffff
xor  ecx, ecx
lea  rsi, [rip+0x6983]
call 0xca40
mov  rdi, rax
pop  rax
pop  rdx
test rdi, rdi
je   0x22537
call 0xcab0
mov  r15d, 0x1
mov  rdi, r14
call 0xbb30
mov  rdi, r12
call 0xbb30
pop  rbp
mov  eax, r15d
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
xor  r15d, r15d
lea  rdx, [rip+0x6943]
lea  rsi, [rip+0x6cf7]
xor  edi, edi
call 0xc580
pop  rbp
mov  eax, r15d
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
xor  edi, edi
call 0xbb00
jmp  0x2253f
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
mov  rdx, r13
lea  rsi, [rip+0x7d03]
xor  eax, eax
call 0xc950
mov  rdi, r13
call 0xbb00
endbr64
push rbp
mov  ebp, esi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
call 0x1afa0
test rbx, rbx
je   0x1b9d0
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1b989
cmp  rsi, QWORD PTR [rax]
je   0x1b995
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x1b9d0
cmp  ebp, 0x3
ja   0x1b9c0
lea  rdx, [rip+0xc35b]
add  rsp, 0x8
lea  rsi, [rip+0xda34]
lea  rdi, [rip+0xc33b]
pop  rbx
pop  rbp
jmp  0xc580
nop  WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rbx+0x30], ebp
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xc2ff]
endbr64
lea  rsi, [rip+0xffffffffffffca95]
endbr64
push r12
push rbp
push rbx
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  QWORD PTR [rsp], rdi
mov  QWORD PTR [rsp+0x8], 0x0
test rdi, rdi
je   0x22750
mov  rdi, rsi
mov  rbx, rsi
xor  r12d, r12d
call 0x1ab20
mov  rbp, rax
test rax, rax
je   0x2272e
mov  rsi, rsp
mov  edx, 0x1
xor  eax, eax
xor  r12d, r12d
lea  rdi, [rip+0x67de]
call 0xc6a0
sub  rsp, 0x8
xor  r9d, r9d
xor  ecx, ecx
push rbx
mov  rdx, rax
mov  rdi, rbp
mov  r8d, 0xffffffff
lea  rsi, [rip+0x67c3]
call 0xca40
mov  rdi, rax
pop  rax
pop  rdx
test rdi, rdi
setne  r12b
je   0x22726
call 0xcab0
mov  rdi, rbp
call 0xbb30
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x2276a
add  rsp, 0x20
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x674e]
lea  rsi, [rip+0x6ac2]
xor  edi, edi
xor  r12d, r12d
call 0xc580
jmp  0x2272e
endbr64
push r15
push r14
push r13
mov  r13, rcx
push r12
mov  r12, rdx
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x20], 0x0
call 0x102a0
test rbx, rbx
je   0x11970
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x114e5
cmp  rsi, QWORD PTR [rax]
je   0x114f5
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x11970
call 0xbc70
mov  rsi, rax
test rbp, rbp
je   0x11998
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x11514
cmp  rsi, QWORD PTR [rax]
je   0x11524
mov  rdi, rbp
call 0xd0f0
test eax, eax
je   0x11998
call 0xbf60
mov  rsi, rax
test r12, r12
je   0x119a8
mov  rax, QWORD PTR [r12]
test rax, rax
je   0x11543
cmp  rsi, QWORD PTR [rax]
je   0x11553
mov  rdi, r12
call 0xd0f0
test eax, eax
je   0x119a8
mov  rsi, r13
mov  rdi, rbx
call 0x10300
test eax, eax
je   0x11574
mov  rdx, r13
mov  rsi, rbp
mov  rdi, rbx
call 0x11220
test eax, eax
jne  0x115c0
xor  r15d, r15d
xor  r14d, r14d
mov  rdi, QWORD PTR [rsp+0x20]
test rdi, rdi
je   0x11589
call 0xcbb0
mov  rdi, r15
call 0xbb00
mov  rax, QWORD PTR [rsp+0x28]
sub  rax, QWORD PTR fs:0x28
jne  0x11a26
add  rsp, 0x38
mov  eax, r14d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc660
mov  r14, rax
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc4d0
mov  r8, r14
lea  rdx, [rip+0x15493]
mov  esi, 0x80
mov  rcx, rax
lea  rdi, [rip+0x1526f]
xor  eax, eax
call 0xc8b0
mov  rdi, r12
call 0xd3b0
mov  esi, 0x1
mov  rdi, rax
call 0xc490
mov  QWORD PTR [rsp+0x10], rax
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc440
mov  esi, 0x1
mov  rdi, rax
call 0xc490
mov  rdi, r12
mov  QWORD PTR [rsp+0x18], rax
call 0xcae0
mov  rdi, rax
call 0xf7b0
lea  r9, [rbx+0x20]
mov  rdi, r9
mov  QWORD PTR [rsp+0x8], r9
mov  r15, rax
call 0xbd80
mov  rdi, QWORD PTR [rbx+0x18]
xor  r8d, r8d
lea  rcx, [rsp+0x20]
mov  edx, 0xffffffff
lea  rsi, [rip+0x1339d]
call 0xcb40
mov  r9, QWORD PTR [rsp+0x8]
test eax, eax
mov  r14d, eax
jne  0x119b8
mov  QWORD PTR [rsp+0x8], r9
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc660
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x1
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xd1e0
mov  rdi, QWORD PTR [rsp+0x20]
mov  esi, 0x2
mov  edx, eax
call 0xbb90
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc240
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x3
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xd270
mov  rdi, QWORD PTR [rsp+0x20]
mov  esi, 0x4
and  eax, 0xffffff5f
mov  rdx, rax
call 0xcda0
mov  rdi, r12
call 0xbff0
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x5
call 0xcbd0
mov  rdx, QWORD PTR [rsp+0x10]
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  esi, 0x6
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc4d0
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x7
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc5b0
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x8
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xd120
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x9
call 0xcbd0
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  rdx, r15
mov  ecx, 0xffffffff
mov  esi, 0xa
call 0xcbd0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xce90
mov  rdi, QWORD PTR [rsp+0x20]
mov  esi, 0xb
mov  rdx, rax
call 0xcda0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xcd00
mov  rdi, QWORD PTR [rsp+0x20]
mov  esi, 0xc
mov  rdx, rax
call 0xcda0
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xbdd0
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0xd
call 0xcbd0
mov  rdi, r12
call 0xbf30
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0xe
call 0xcbd0
mov  rdx, QWORD PTR [rsp+0x18]
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  esi, 0xf
call 0xcbd0
mov  rdi, r12
call 0xd400
mov  rdi, QWORD PTR [rsp+0x20]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x10
call 0xcbd0
mov  rdi, QWORD PTR [rsp+0x20]
call 0xc0a0
mov  r9, QWORD PTR [rsp+0x8]
cmp  eax, 0x65
jne  0x119f0
mov  r14d, 0x1
mov  rdi, r9
call 0xcfe0
jmp  0x1157a
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x15078]
lea  rsi, [rip+0x160b2]
lea  rdi, [rip+0x14ef6]
xor  r15d, r15d
xor  r14d, r14d
call 0xc580
jmp  0x1157a
nop  DWORD PTR [rax]
lea  rdx, [rip+0x1507d]
jmp  0x11977
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x150f4]
jmp  0x11977
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r14d, r14d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x13163]
xor  eax, eax
call 0xc160
mov  r9, QWORD PTR [rsp+0x8]
jmp  0x1195b
xchg ax, ax
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x126e3]
xor  eax, eax
call 0xc160
mov  r9, QWORD PTR [rsp+0x8]
jmp  0x1195b
endbr64
push r15
push r14
mov  r14, rdx
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rcx
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x12a18
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x12934
cmp  rsi, QWORD PTR [rax]
je   0x12944
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x12a18
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
jne  0x12990
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x12964
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x12aa1
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  r15, [rbx+0x20]
mov  rdi, r15
call 0xbd80
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x125ae]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x12a70
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, r13
mov  esi, 0x1
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  rdx, r14
mov  ecx, 0xffffffff
mov  esi, 0x2
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x12a40
mov  r12d, 0x1
mov  rdi, r15
call 0xcfe0
jmp  0x12956
nop  DWORD PTR [rax]
lea  rdx, [rip+0x13fd0]
lea  rsi, [rip+0x14e1a]
xor  r12d, r12d
lea  rdi, [rip+0x13e4b]
call 0xc580
jmp  0x12956
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x11693]
xor  eax, eax
call 0xc160
jmp  0x12a08
xchg ax, ax
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x1250b]
xor  eax, eax
call 0xc160
jmp  0x12a08
endbr64
push r15
push r14
push r13
push r12
push rbp
mov  rbp, rdi
push rbx
sub  rsp, 0x18
call 0xcb00
mov  rdi, rbp
mov  QWORD PTR [rsp+0x8], rax
call 0xd180
mov  edx, DWORD PTR [rax+0x8]
test edx, edx
je   0x1df36
mov  r12, rax
xor  ebx, ebx
lea  r13, [rip+0xa6ca]
lea  r14, [rip+0xa6dd]
lea  r15, [rip+0xa6fe]
mov  rdx, QWORD PTR [r12]
mov  eax, ebx
mov  rsi, r13
mov  rbp, QWORD PTR [rdx+rax*8]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1df70
mov  rsi, r14
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1df80
mov  rsi, r15
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1df90
lea  rsi, [rip+0xa6ce]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1dfa0
lea  rsi, [rip+0xa6ea]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1dfb0
lea  rsi, [rip+0xa6f3]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1dfc0
lea  rsi, [rip+0xa70f]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1dfd8
lea  rsi, [rip+0xa729]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1dff0
lea  rsi, [rip+0xa734]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e008
lea  rsi, [rip+0xa735]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e020
lea  rsi, [rip+0xa745]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e038
lea  rsi, [rip+0xa74a]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e050
lea  rsi, [rip+0xa74d]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e068
lea  rsi, [rip+0xa74a]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e080
lea  rsi, [rip+0xa751]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e098
lea  rsi, [rip+0xa752]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e0b0
lea  rsi, [rip+0xa759]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e0c8
lea  rsi, [rip+0xa773]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1e0e0
add  ebx, 0x1
cmp  DWORD PTR [r12+0x8], ebx
ja   0x1dd8c
mov  edx, 0x5
lea  rsi, [rip+0xa778]
xor  edi, edi
call 0xc920
mov  rsi, QWORD PTR [rsp+0x8]
add  rsp, 0x18
pop  rbx
mov  rdi, rax
pop  rbp
xor  eax, eax
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xbe90
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa4d5]
jmp  0x1df42
xchg ax, ax
mov  edx, 0x5
lea  rsi, [rip+0xa4e6]
jmp  0x1df42
xchg ax, ax
mov  edx, 0x5
lea  rsi, [rip+0xa4f7]
jmp  0x1df42
xchg ax, ax
mov  edx, 0x5
lea  rsi, [rip+0xa50d]
jmp  0x1df42
xchg ax, ax
mov  edx, 0x5
lea  rsi, [rip+0xa52e]
jmp  0x1df42
xchg ax, ax
mov  edx, 0x5
lea  rsi, [rip+0xa547]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa561]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa56c]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xb91c]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa578]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa582]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa585]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa584]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa585]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa588]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa58b]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa59a]
jmp  0x1df42
nop  DWORD PTR [rax+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xa5b2]
endbr64
push rbp
mov  ebp, esi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
call 0x1afa0
test rbx, rbx
je   0x1ba50
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1ba09
cmp  rsi, QWORD PTR [rax]
je   0x1ba15
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x1ba50
cmp  ebp, 0x3
ja   0x1ba40
lea  rdx, [rip+0xc2db]
add  rsp, 0x8
lea  rsi, [rip+0xd974]
lea  rdi, [rip+0xc2bb]
pop  rbx
pop  rbp
jmp  0xc580
nop  WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rbx+0x2c], ebp
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xc27f]
endbr64
push rbp
mov  rbp, rdi
call 0xd320
mov  edi, eax
call 0x1c1c0
test rax, rax
je   0x1c8e0
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  esi, 0x1
mov  rdi, rbp
call 0xc520
mov  edx, 0x5
test eax, eax
jne  0x1c908
lea  rsi, [rip+0xba10]
xor  edi, edi
pop  rbp
jmp  0xc920
nop  DWORD PTR [rax]
lea  rsi, [rip+0xb9fb]
xor  edi, edi
pop  rbp
endbr64
sub  rsp, 0x8
lea  rdi, [rip+0xa09f]
call 0xbd20
lea  rdx, [rip+0xa07a]
test rax, rax
lea  rax, [rip+0xa07b]
cmovne rax, rdx
add  rsp, 0x8
endbr64
push r15
push r14
mov  r14, rdi
push r13
push r12
push rbp
push rbx
mov  rbx, rdx
sub  rsp, 0x58
mov  QWORD PTR [rsp+0x20], rdi
mov  rdi, QWORD PTR [rip+0xd36c]
mov  DWORD PTR [rsp+0x1c], esi
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x48], rax
xor  eax, eax
call 0xc870
mov  QWORD PTR [rsp+0x40], 0x0
mov  QWORD PTR [rsp+0x10], rax
call 0x102a0
test r14, r14
je   0x23010
mov  rsi, rax
mov  rax, QWORD PTR [r14]
test rax, rax
je   0x22cb9
cmp  rsi, QWORD PTR [rax]
je   0x22ccb
mov  rdi, QWORD PTR [rsp+0x20]
call 0xd0f0
test eax, eax
je   0x23010
mov  rax, QWORD PTR [rsp+0x20]
cmp  QWORD PTR [rax+0x18], 0x0
je   0x22fd0
mov  r14, QWORD PTR [rsp+0x20]
lea  rax, [r14+0x20]
mov  rdi, rax
mov  QWORD PTR [rsp+0x38], rax
call 0xd020
mov  rdi, QWORD PTR [r14+0x18]
lea  rcx, [rsp+0x40]
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x75ef]
call 0xcb40
mov  DWORD PTR [rsp+0x8], 0x0
test eax, eax
jne  0x2303d
xchg ax, ax
mov  rdi, QWORD PTR [rsp+0x40]
call 0xc0a0
cmp  eax, 0x64
jne  0x22e78
call 0xd110
mov  r13, rax
call 0xbc30
mov  rdi, QWORD PTR [rsp+0x40]
xor  esi, esi
mov  rbp, rax
call 0xbcd0
mov  r12, rax
test rax, rax
je   0x22ef8
mov  rdi, QWORD PTR [rsp+0x40]
mov  esi, 0x1
call 0xbcd0
mov  r15, rax
test rax, rax
je   0x22ef8
mov  rdi, rax
call 0xbb10
mov  DWORD PTR [rsp+0x18], eax
cmp  DWORD PTR [rsp+0x8], eax
je   0x22ed8
call 0xd530
mov  rcx, r12
lea  rdx, [rip+0x61f7]
mov  esi, 0x80
mov  r14, rax
lea  rdi, [rip+0x3ad1]
xor  eax, eax
call 0xc8b0
mov  rcx, rbx
mov  rsi, r15
mov  rdi, r14
mov  rdx, 0xffffffffffffffff
call 0xd150
test eax, eax
je   0x22f90
mov  rdi, r14
call 0xc900
mov  rdx, rbx
mov  rdi, r13
mov  rsi, rax
call 0x1ccf0
test eax, eax
je   0x22f90
mov  rsi, rbp
mov  rdi, r12
call 0xc680
mov  QWORD PTR [rsp+0x8], rax
test rax, rax
jne  0x22f20
mov  r15, QWORD PTR [rsp+0x10]
mov  rsi, r13
mov  rdi, r15
call 0xc540
mov  eax, DWORD PTR [rsp+0x1c]
test eax, eax
je   0x22e27
cmp  DWORD PTR [r15+0x8], eax
jae  0x2307e
test rbp, rbp
je   0x22e34
mov  rdi, rbp
call 0xcc80
mov  rax, QWORD PTR [rsp+0x8]
test rax, rax
je   0x22e46
mov  rdi, rax
call 0xc2c0
mov  eax, DWORD PTR [rsp+0x18]
mov  DWORD PTR [rsp+0x8], eax
test r14, r14
je   0x22d20
mov  rdi, r14
call 0xbb30
mov  rdi, QWORD PTR [rsp+0x40]
call 0xc0a0
cmp  eax, 0x64
je   0x22d33
nop  WORD PTR [rax+rax*1+0x0]
xor  r14d, r14d
cmp  eax, 0x65
jne  0x230b6
mov  rdi, QWORD PTR [rsp+0x38]
call 0xc9e0
mov  rdi, QWORD PTR [rsp+0x40]
test rdi, rdi
je   0x22e9d
call 0xcbb0
test r14, r14
je   0x22eaa
mov  rdi, r14
call 0xbb20
mov  rax, QWORD PTR [rsp+0x48]
sub  rax, QWORD PTR fs:0x28
jne  0x230df
mov  rax, QWORD PTR [rsp+0x10]
add  rsp, 0x58
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, r12
lea  rdx, [rip+0x6097]
mov  esi, 0x80
xor  eax, eax
lea  rdi, [rip+0x398b]
call 0xc8b0
nop  DWORD PTR [rax]
test rbp, rbp
je   0x22f05
mov  rdi, rbp
call 0xcc80
test r13, r13
je   0x22d20
mov  rdi, r13
call 0xbb30
jmp  0x22d20
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rax
call 0xd380
mov  rdi, r13
mov  QWORD PTR [rsp+0x28], rax
call 0xbde0
mov  r15, rax
mov  eax, DWORD PTR [rax+0x8]
test eax, eax
je   0x22f80
mov  QWORD PTR [rsp+0x30], rbp
mov  rbp, r15
mov  r15, rbx
mov  rbx, QWORD PTR [rsp+0x28]
xor  r12d, r12d
nop  WORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [rbp+0x0]
mov  ecx, r12d
mov  rsi, rbx
add  r12d, 0x1
mov  rdi, QWORD PTR [rdx+rcx*8]
call 0xcf00
cmp  DWORD PTR [rbp+0x8], r12d
ja   0x22f58
mov  rbx, r15
mov  r15, rbp
mov  rbp, QWORD PTR [rsp+0x30]
mov  rdi, r15
call 0xbb20
jmp  0x22e05
nop  DWORD PTR [rax]
test rbp, rbp
je   0x22f9d
mov  rdi, rbp
call 0xcc80
test r14, r14
je   0x22faa
mov  rdi, r14
call 0xbb30
test r13, r13
je   0x22ff8
mov  rdi, r13
call 0xbb30
mov  r14, QWORD PTR [rsp+0x10]
mov  QWORD PTR [rsp+0x10], 0x0
jmp  0x22e84
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rsp+0x20]
mov  rsi, rbx
call 0x10300
test eax, eax
jne  0x22cdb
mov  r14, QWORD PTR [rsp+0x10]
mov  QWORD PTR [rsp+0x10], 0x0
jmp  0x22e8e
mov  r14, QWORD PTR [rsp+0x10]
mov  QWORD PTR [rsp+0x10], 0x0
jmp  0x22e84
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x39d8]
lea  rsi, [rip+0x6432]
lea  rdi, [rip+0x3856]
call 0xc580
mov  r14, QWORD PTR [rsp+0x10]
mov  QWORD PTR [rsp+0x10], 0x0
jmp  0x22e8e
mov  rax, QWORD PTR [rsp+0x20]
mov  rdi, QWORD PTR [rax+0x18]
call 0xd500
mov  rbp, rax
call 0xc200
mov  r8, rbp
lea  rcx, [rip+0x72e3]
xor  edx, edx
mov  esi, eax
mov  rdi, rbx
xor  eax, eax
call 0xc160
mov  r14, QWORD PTR [rsp+0x10]
mov  QWORD PTR [rsp+0x10], 0x0
jmp  0x22e84
test rbp, rbp
je   0x2308b
mov  rdi, rbp
call 0xcc80
mov  rax, QWORD PTR [rsp+0x8]
test rax, rax
je   0x2309d
mov  rdi, rax
call 0xc2c0
test r14, r14
je   0x22e84
mov  rdi, r14
xor  r14d, r14d
call 0xbb30
jmp  0x22e84
mov  rax, QWORD PTR [rsp+0x20]
mov  rdi, QWORD PTR [rax+0x18]
call 0xd500
mov  rbp, rax
call 0xc200
mov  r8, rbp
mov  edx, 0x6
lea  rcx, [rip+0x101d]
mov  esi, eax
jmp  0x23061
endbr64
push r15
push r14
push r13
push r12
push rbp
lea  rbp, [rip+0x19e39]
push rbx
sub  rsp, 0x4c8
mov  QWORD PTR [rsp+0x30], rsi
lea  r14, [rsp+0x90]
mov  DWORD PTR [rsp+0x3c], edi
mov  edi, 0x88
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x4b8], rax
xor  eax, eax
mov  DWORD PTR [rsp+0x6c], 0x0
mov  DWORD PTR [rsp+0x68], 0x0
mov  DWORD PTR [rsp+0x64], 0x0
mov  DWORD PTR [rsp+0x60], 0x0
mov  DWORD PTR [rsp+0x5c], 0x0
mov  DWORD PTR [rsp+0x58], 0x0
mov  DWORD PTR [rsp+0x54], 0x0
mov  DWORD PTR [rsp+0x50], 0x0
mov  DWORD PTR [rsp+0x4c], 0x0
call 0xbe60
mov  r12, rax
call 0xc2a0
lea  rbx, [r12+0x4c]
mov  QWORD PTR [rsp+0x80], 0x0
mov  QWORD PTR [rsp], rax
mov  QWORD PTR [rsp+0x78], 0x0
call 0x1d800
mov  ecx, 0x84
mov  rdi, r14
mov  edx, 0x5
mov  r13, rax
xor  eax, eax
lea  rsi, [rip+0x1847a]
mov  QWORD PTR [rsp+0x70], 0x0
rep stos QWORD PTR es:[rdi], rax
lea  rax, [rip+0x19bfc]
xor  edi, edi
mov  BYTE PTR [rsp+0x98], 0x76
mov  QWORD PTR [rsp+0x90], rax
lea  rax, [rsp+0x50]
mov  QWORD PTR [rsp+0xa8], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1845d]
mov  QWORD PTR [rsp+0xb0], rax
lea  rax, [rip+0x1a9f0]
mov  QWORD PTR [rsp+0xc0], rax
lea  rax, [rsp+0x4c]
mov  QWORD PTR [rsp+0xd8], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18446]
mov  QWORD PTR [rsp+0xe0], rax
lea  rax, [rip+0x19b8c]
mov  QWORD PTR [rsp+0xf0], rax
lea  rax, [rsp+0x54]
mov  QWORD PTR [rsp+0x108], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18447]
mov  QWORD PTR [rsp+0x110], rax
lea  rax, [rip+0x19b5d]
mov  QWORD PTR [rsp+0x120], rax
lea  rax, [rsp+0x60]
mov  QWORD PTR [rsp+0x138], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18440]
mov  QWORD PTR [rsp+0x140], rax
lea  rax, [rip+0x19b36]
mov  QWORD PTR [rsp+0x150], rax
lea  rax, [rsp+0x64]
mov  QWORD PTR [rsp+0x168], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18431]
mov  QWORD PTR [rsp+0x170], rax
lea  rax, [rip+0x19b0b]
mov  QWORD PTR [rsp+0x180], rax
lea  rax, [rsp+0x68]
mov  QWORD PTR [rsp+0x198], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1841a]
mov  QWORD PTR [rsp+0x1a0], rax
lea  rax, [rip+0x19ae8]
mov  QWORD PTR [rsp+0x1b0], rax
lea  rax, [rsp+0x6c]
mov  QWORD PTR [rsp+0x1c8], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19ad1]
mov  QWORD PTR [rsp+0x1d0], rax
lea  rax, [rip+0x19ab7]
mov  QWORD PTR [rsp+0x1e0], rax
lea  rax, [r12+0x44]
mov  BYTE PTR [rsp+0x1e8], 0x79
mov  QWORD PTR [rsp+0x1f8], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x183dc]
mov  QWORD PTR [rsp+0x200], rax
lea  rax, [rip+0x19a9f]
mov  QWORD PTR [rsp+0x210], rax
lea  rax, [r12+0x48]
mov  QWORD PTR [rsp+0x228], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x183dd]
mov  QWORD PTR [rsp+0x230], rax
lea  rax, [rip+0x19a6d]
mov  QWORD PTR [rsp+0x240], rax
lea  rax, [r12+0x3c]
mov  QWORD PTR [rsp+0x258], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19a6b]
mov  QWORD PTR [rsp+0x260], rax
lea  rax, [rip+0x19a4a]
mov  QWORD PTR [rsp+0x270], rax
lea  rax, [r12+0x34]
mov  QWORD PTR [rsp+0x288], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18397]
mov  QWORD PTR [rsp+0x290], rax
lea  rax, [rip+0x19a43]
mov  QWORD PTR [rsp+0x2a0], rax
lea  rax, [r12+0x30]
mov  QWORD PTR [rsp+0x2b8], rax
call 0xc920
mov  edx, 0x5
lea  rsi, [rip+0x1839a]
xor  edi, edi
mov  QWORD PTR [rsp+0x2c0], rax
lea  rax, [rip+0x19a1c]
mov  QWORD PTR [rsp+0x2d0], rax
lea  rax, [r12+0x38]
mov  QWORD PTR [rsp+0x2e8], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18391]
mov  QWORD PTR [rsp+0x2f0], rax
lea  rax, [rip+0x199f5]
mov  QWORD PTR [rsp+0x300], rax
lea  rax, [r12+0x40]
mov  QWORD PTR [rsp+0x318], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18382]
mov  QWORD PTR [rsp+0x320], rax
lea  rax, [rip+0x199ce]
mov  QWORD PTR [rsp+0x330], rax
lea  rax, [rsp+0x58]
mov  QWORD PTR [rsp+0x348], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x199ba]
mov  QWORD PTR [rsp+0x350], rax
lea  rax, [rip+0x199a2]
mov  QWORD PTR [rsp+0x360], rax
mov  QWORD PTR [rsp+0x378], rbx
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18341]
mov  QWORD PTR [rsp+0x380], rax
lea  rax, [rip+0x1998a]
mov  QWORD PTR [rsp+0x390], rax
mov  DWORD PTR [rsp+0x39c], 0x1
mov  QWORD PTR [rsp+0x3a8], rbx
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1832c]
mov  QWORD PTR [rsp+0x3b0], rax
lea  rax, [rip+0x1995e]
mov  QWORD PTR [rsp+0x3c0], rax
lea  rax, [r12+0x50]
mov  QWORD PTR [rsp+0x3d8], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18325]
mov  QWORD PTR [rsp+0x3e0], rax
lea  rax, [rip+0x1993a]
mov  QWORD PTR [rsp+0x3f0], rax
lea  rax, [rsp+0x5c]
mov  QWORD PTR [rsp+0x408], rax
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18316]
mov  QWORD PTR [rsp+0x410], rax
lea  rax, [rip+0x19908]
mov  QWORD PTR [rsp+0x420], rax
lea  rax, [rsp+0x70]
mov  DWORD PTR [rsp+0x430], 0x1
mov  QWORD PTR [rsp+0x438], rax
call 0xc920
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x198e1]
mov  QWORD PTR [rsp+0x440], rax
lea  rax, [rip+0x198cd]
mov  QWORD PTR [rsp+0x450], rax
lea  rax, [r12+0x54]
mov  QWORD PTR [rsp+0x468], rax
call 0xc920
lea  rsi, [rip+0x192fc]
mov  edi, 0x6
mov  QWORD PTR [rsp+0x470], rax
call 0xca80
lea  rsi, [rip+0x198ae]
mov  rdi, rbp
call 0xc330
lea  rsi, [rip+0x198b7]
mov  rdi, rbp
call 0xc3a0
mov  rdi, rbp
call 0xcd70
call 0xc200
mov  rax, QWORD PTR [rsp+0x30]
lea  rsi, [rip+0x1989c]
mov  rdi, QWORD PTR [rax]
call 0xc350
test eax, eax
jne  0xe71a
call 0xc030
lea  rbp, [rip+0x198c4]
lea  rbx, [rip+0x1990e]
mov  QWORD PTR [r12+0x8], rax
call 0x1ba60
mov  rdi, QWORD PTR [rip+0x223ff]
mov  QWORD PTR [r12+0x28], rax
call 0xc870
mov  rsi, QWORD PTR [r12+0x8]
mov  rdi, QWORD PTR [r12+0x28]
mov  QWORD PTR [r12+0x68], rax
call 0x1b6c0
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x182ab]
call 0xc920
lea  r8, [rip+0x81a7]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x1982c]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x182ad]
call 0xc920
lea  r8, [rip+0x6129]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x19817]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x182a7]
call 0xc920
lea  r8, [rip+0x707b]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x197f5]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x182a9]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x197de]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x6d84]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19624]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18294]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x197af]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x63ef]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19795]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18277]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x95ee]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19760]
call 0x1d820
mov  edx, 0x5
lea  rsi, [rip+0x18268]
xor  edi, edi
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0xa3ad]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19738]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1827d]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x545c]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19706]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1826c]
call 0xc920
mov  rsi, rbx
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x6b8b]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x196db]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18253]
call 0xc920
mov  rsi, rbx
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x52ba]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x196a1]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1823a]
call 0xc920
mov  rsi, rbx
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
lea  rbx, [rip+0x19745]
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x9be2]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19667]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1821a]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x63f1]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19632]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1962c]
call 0xc920
lea  r8, [rip+0x6625]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x1962d]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x181cb]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0xa732]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x1ab82]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x181b2]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x195d2]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x92fd]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x195cd]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18195]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x519c]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19594]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1958f]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19594]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x15c7]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19589]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19584]
call 0xc920
xor  edi, edi
mov  edx, 0x5
mov  rsi, rbx
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x5896]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19577]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19572]
call 0xc920
xor  edi, edi
mov  edx, 0x5
mov  rsi, rbx
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x1635]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x1955c]
call 0x1d820
mov  edx, 0x5
lea  rsi, [rip+0x1955a]
xor  edi, edi
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x4cf4]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x18a9d]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1808c]
call 0xc920
lea  r8, [rip+0x1988]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x1950d]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18086]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1809b]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x1811]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x194de]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18099]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x194ce]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0xb2bc]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x194b9]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1807c]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
lea  rbp, [rip+0x194cc]
call 0xc920
mov  rcx, r15
lea  r8, [rip+0xa6d4]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19112]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18064]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19459]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0xaccf]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19454]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1804f]
call 0xc920
lea  r8, [rip+0xb303]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x19434]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18049]
call 0xc920
lea  r8, [rip+0xa8c5]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x18ebb]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1805b]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x5122]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x193db]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1804a]
call 0xc920
mov  rsi, rbp
xor  edi, edi
mov  edx, 0x5
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x52d1]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19398]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18041]
call 0xc920
lea  r8, [rip+0x1905]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x1937b]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1803b]
call 0xc920
lea  r8, [rip+0x63a7]
xor  edx, edx
mov  rdi, r13
mov  rcx, rax
lea  rsi, [rip+0x19362]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x1935b]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19358]
mov  r15, rax
call 0xc920
mov  rcx, r15
lea  r8, [rip+0x1170]
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x19342]
call 0x1d820
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x18000]
call 0xc920
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x19325]
mov  r15, rax
call 0xc920
lea  r8, [rip+0x7b4e]
mov  rcx, r15
mov  rdi, r13
mov  rdx, rax
lea  rsi, [rip+0x1931e]
call 0x1d820
call 0xc2d0
mov  edi, 0x2
mov  QWORD PTR [r12], rax
call 0xce70
xor  ecx, ecx
mov  rdx, r12
lea  rsi, [rip+0x17ea]
mov  rdi, rax
mov  rbp, rax
call 0xd5e0
mov  rsi, QWORD PTR [r12+0x8]
mov  rdi, rbp
call 0xd470
mov  rdi, r13
call 0x1d810
xor  edi, edi
call 0xbc20
mov  rdi, r13
mov  QWORD PTR [r12+0x10], rax
call 0x1dac0
mov  rdi, QWORD PTR [r12+0x10]
mov  rsi, rax
mov  QWORD PTR [rsp+0x10], rax
call 0xcc60
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x17f7e]
call 0xc920
mov  rdi, QWORD PTR [r12+0x10]
mov  rsi, rax
call 0xbe80
mov  edx, 0x5
lea  rsi, [rip+0x19294]
xor  edi, edi
call 0xc920
mov  rdi, rax
call 0xbfb0
mov  rdi, QWORD PTR [r12+0x10]
xor  edx, edx
mov  rsi, r14
call 0xc390
mov  rdi, QWORD PTR [r12+0x10]
lea  rdx, [rsp+0x30]
lea  rax, [rsp+0x80]
lea  rsi, [rsp+0x3c]
mov  rcx, rax
mov  QWORD PTR [rsp+0x8], rax
call 0xc0b0
test eax, eax
je   0xec7a
mov  ebx, DWORD PTR [r12+0x50]
test ebx, ebx
jne  0xe78d
mov  rdi, QWORD PTR [rsp]
call 0xcf10
cmp  eax, 0x7e4
jle  0xe736
lea  rdi, [rsp+0x78]
call 0x212a0
mov  DWORD PTR [rsp+0x38], eax
test eax, eax
je   0xe7fc
mov  DWORD PTR [rsp+0x38], 0x1
mov  rdi, QWORD PTR [r12+0x28]
mov  esi, DWORD PTR [rsp+0x38]
call 0x1b900
mov  rdi, QWORD PTR [rsp+0x70]
test rdi, rdi
je   0xe538
mov  rcx, QWORD PTR [rsp+0x8]
lea  rdx, [r12+0x80]
lea  rsi, [r12+0x78]
call 0x1e100
test eax, eax
je   0xecba
mov  r11d, DWORD PTR [rsp+0x50]
test r11d, r11d
jne  0xe6eb
xor  ecx, ecx
lea  rdx, [rip+0xb21]
mov  esi, 0x80
lea  rdi, [rip+0x18229]
call 0xc0e0
mov  r10d, DWORD PTR [rsp+0x54]
test r10d, r10d
je   0xe570
or   DWORD PTR [r12+0x18], 0x1
mov  r9d, DWORD PTR [rsp+0x60]
test r9d, r9d
je   0xe580
or   DWORD PTR [r12+0x18], 0x2
mov  r8d, DWORD PTR [rsp+0x64]
test r8d, r8d
je   0xe590
or   DWORD PTR [r12+0x18], 0x4
mov  edi, DWORD PTR [rsp+0x68]
test edi, edi
je   0xe59e
or   DWORD PTR [r12+0x18], 0x20
mov  esi, DWORD PTR [rsp+0x6c]
test esi, esi
je   0xe5ac
or   DWORD PTR [r12+0x18], 0x8
mov  ecx, DWORD PTR [rsp+0x58]
test ecx, ecx
je   0xe5ba
or   DWORD PTR [r12+0x18], 0x10
mov  edx, DWORD PTR [rsp+0x5c]
test edx, edx
je   0xe5c8
or   DWORD PTR [r12+0x1c], 0x1
mov  eax, DWORD PTR [rsp+0x38]
test eax, eax
jne  0xe93a
call 0xd4d0
mov  rsi, QWORD PTR [r12+0x8]
lea  r14, [rip+0x44cb]
mov  QWORD PTR [r12+0x20], rax
mov  rdi, rax
call 0xc170
mov  rbp, QWORD PTR [r12+0x20]
call 0xc890
mov  rsi, rax
mov  rdi, rbp
call 0xbd50
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r12
mov  rdx, r14
mov  rdi, rax
lea  rsi, [rip+0x19147]
call 0xbfc0
mov  rbp, QWORD PTR [r12+0x20]
call 0xc890
mov  rsi, rax
mov  rdi, rbp
call 0xbd50
xor  r9d, r9d
xor  r8d, r8d
mov  rdx, r14
mov  rdi, rax
lea  rsi, [rip+0x1912d]
mov  rcx, r12
call 0xbfc0
mov  rdi, QWORD PTR [r12+0x20]
mov  rdx, QWORD PTR [rsp+0x8]
mov  rsi, QWORD PTR [r12]
call 0xc140
test eax, eax
je   0xe841
mov  rdi, QWORD PTR [r12+0x20]
call 0xc5e0
test eax, eax
jne  0xedb2
cmp  DWORD PTR [rsp+0x4c], 0x0
mov  rsi, QWORD PTR [r12]
mov  rdi, QWORD PTR [r12+0x20]
je   0xe976
mov  rdx, QWORD PTR [rsp+0x8]
call 0xcfb0
mov  rbp, rax
test rax, rax
je   0xee42
mov  eax, DWORD PTR [r12+0x54]
mov  DWORD PTR [rsp+0x38], eax
test eax, eax
jne  0xee1b
mov  rdi, rbp
call 0x21590
lea  rdi, [rip+0x1a701]
mov  rsi, rax
mov  r14, rax
xor  eax, eax
call 0xbc90
mov  rdi, r14
call 0xbb00
mov  rdi, rbp
call 0xd2a0
jmp  0xe863
xor  edx, edx
lea  rsi, [rip+0x18cd7]
lea  rdi, [rip+0x19058]
call 0xd140
xor  edx, edx
lea  rsi, [rip+0x1a759]
lea  rdi, [rip+0x185db]
call 0xd140
jmp  0xe560
lea  rdi, [rip+0x17747]
xor  eax, eax
call 0xd050
mov  DWORD PTR [r12+0x54], 0x1
jmp  0xdbbd
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x18ff3]
call 0xc920
mov  esi, 0x1f
mov  rdi, rax
call 0x1d170
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x17d84]
mov  rbp, rax
call 0xc920
mov  rsi, rbp
lea  rdi, [rip+0x1a4fd]
mov  rdx, rax
xor  eax, eax
call 0xd050
mov  rdi, rbp
call 0xbb00
jmp  0xe4e3
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x18f9c]
call 0xc920
mov  esi, 0x1f
mov  rdi, rax
call 0x1d170
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x17cb5]
mov  rbp, rax
call 0xc920
mov  rsi, rbp
lea  rdi, [rip+0x1a4a6]
mov  rdx, rax
xor  eax, eax
call 0xd050
mov  edx, 0x1
lea  rsi, [rip+0x1a67f]
lea  rdi, [rip+0x18f56]
call 0xd140
mov  rdi, rbp
call 0xbb00
jmp  0xe4cf
mov  rax, QWORD PTR [rsp+0x78]
lea  rdx, [rip+0x17d30]
mov  esi, 0x80
lea  rdi, [rip+0x17f70]
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xc8b0
48 b8 01 00 00 00 01 00 00 00 movabs rax, 0x100000001
mov  DWORD PTR [r12+0x40], 0x1
mov  QWORD PTR [r12+0x30], rax
mov  QWORD PTR [r12+0x38], rax
jmp  0xe501
mov  rax, QWORD PTR [rsp+0x80]
lea  rdi, [rip+0x17d68]
mov  rsi, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xd050
mov  DWORD PTR [rsp+0x38], 0x1
mov  rdi, QWORD PTR [rsp+0x70]
call 0xbb00
mov  rdi, QWORD PTR [rsp+0x10]
call 0xbb00
test r13, r13
je   0xe884
mov  rdi, r13
call 0xbb20
mov  rdi, QWORD PTR [rsp+0x78]
test rdi, rdi
je   0xe893
call 0xc3d0
mov  rdi, QWORD PTR [rsp+0x80]
test rdi, rdi
je   0xe8a5
call 0xc3d0
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0xe8b6
mov  rdi, rax
call 0xc2c0
mov  rdi, QWORD PTR [r12+0x20]
test rdi, rdi
je   0xe8c5
call 0xbb30
mov  rdi, QWORD PTR [r12+0x60]
test rdi, rdi
je   0xe8d4
call 0xbb30
mov  rdi, QWORD PTR [r12+0x68]
call 0xbb20
mov  rdi, QWORD PTR [r12+0x8]
call 0xd5c0
mov  rdi, QWORD PTR [r12]
call 0xbb30
mov  rdi, QWORD PTR [r12+0x28]
call 0xbb30
mov  rdi, QWORD PTR [r12+0x10]
call 0xbf90
mov  rdi, r12
call 0xbb00
mov  rax, QWORD PTR [rsp+0x4b8]
sub  rax, QWORD PTR fs:0x28
jne  0xef21
mov  eax, DWORD PTR [rsp+0x38]
add  rsp, 0x4c8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
lea  rdi, [rsp+0x88]
mov  QWORD PTR [rsp+0x88], 0x0
call 0x22100
test eax, eax
je   0xed13
mov  rdi, QWORD PTR [rsp+0x88]
test rdi, rdi
je   0xe5d4
call 0xc3d0
jmp  0xe5d4
xor  edx, edx
call 0xc650
mov  QWORD PTR [rsp+0x18], rax
mov  rbp, rax
test rax, rax
je   0xeb45
xor  r14d, r14d
cmp  DWORD PTR [rax+0x8], 0x0
je   0xe9df
xor  ebx, ebx
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [rbp+0x0]
mov  eax, ebx
mov  esi, 0x1
mov  r15, QWORD PTR [rdx+rax*8]
mov  rdi, r15
call 0xc260
test eax, eax
jne  0xe9d7
mov  esi, 0x2
mov  rdi, r15
call 0xc260
test eax, eax
je   0xe9d7
mov  rdi, r15
call 0xc880
or   r14, rax
add  ebx, 0x1
cmp  ebx, DWORD PTR [rbp+0x8]
jb   0xe9a0
mov  QWORD PTR [rsp+0x20], r13
and  r14d, 0xfffffbf6
xor  ebx, ebx
mov  QWORD PTR [rsp+0x28], r12
jmp  0xeaeb
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, r15
call 0x1f480
mov  r13, rax
test rax, rax
je   0xeb09
mov  edx, 0x5
lea  rsi, [rip+0x18d17]
xor  edi, edi
add  ebx, 0x1
call 0xc920
mov  esi, 0x1f
lea  rdi, [rip+0x17d19]
mov  rdx, rax
xor  eax, eax
call 0xbe90
mov  rcx, r13
lea  rsi, [rip+0x1a229]
mov  rdi, rbp
mov  rdx, rax
mov  r12, rax
xor  eax, eax
call 0xc4a0
mov  rdi, r15
call 0xc430
lea  rdi, [rip+0x17bd7]
mov  rsi, rax
xor  eax, eax
call 0xbe90
lea  rsi, [rip+0x18d0c]
mov  rdi, rbp
mov  r15, rax
call 0xc750
mov  edx, 0x5
lea  rsi, [rip+0x18cf8]
xor  edi, edi
call 0xc920
mov  rdx, r15
mov  rdi, rbp
mov  rsi, rax
xor  eax, eax
call 0xc4a0
lea  rsi, [rip+0x183b0]
mov  rdi, rbp
call 0xc750
mov  rsi, QWORD PTR [rbp+0x0]
lea  rdi, [rip+0x1a308]
xor  eax, eax
call 0xd050
mov  esi, 0x1
mov  rdi, rbp
call 0xbd70
mov  rdi, r15
call 0xbb00
mov  rdi, r12
call 0xbb00
cmp  ebx, 0x40
je   0xeb31
mov  ecx, ebx
mov  r15d, 0x1
xor  edi, edi
shl  r15, cl
call 0xc340
mov  rbp, rax
test r14, r15
jne  0xea00
test rbp, rbp
je   0xeb1b
mov  esi, 0x1
mov  rdi, rbp
call 0xbd70
xor  edi, edi
add  ebx, 0x1
call 0xbb00
xor  edi, edi
call 0xbb00
cmp  ebx, 0x40
jne  0xeaeb
mov  rdi, QWORD PTR [rsp+0x18]
mov  r13, QWORD PTR [rsp+0x20]
mov  r12, QWORD PTR [rsp+0x28]
call 0xbb20
lea  rbx, [rip+0x18c5a]
mov  rdi, QWORD PTR [r12+0x20]
lea  rsi, [rip+0x1a390]
mov  rdx, rbx
call 0xcb60
test BYTE PTR [r12+0x18], 0x8
je   0xed32
mov  edi, 0xc
call 0xc570
xor  edx, edx
lea  rsi, [rip+0x18c4a]
mov  rdi, rax
mov  rbp, rax
xor  eax, eax
call 0xbe30
mov  esi, 0x1
mov  rdi, rax
mov  r14, rax
call 0xbba0
test eax, eax
je   0xee4e
mov  rdi, r14
call 0xbb00
mov  rdi, rbp
call 0xbb00
cmp  DWORD PTR [rsp+0x38], 0x0
jne  0xecd4
mov  rax, QWORD PTR [rsp+0x30]
mov  r8, QWORD PTR [rsp+0x8]
mov  rsi, r12
mov  rdi, r13
mov  rdx, QWORD PTR [rax+0x8]
lea  rcx, [rax+0x10]
call 0x1d980
test eax, eax
jne  0xee09
mov  rax, QWORD PTR [rsp+0x80]
lea  r14, [rip+0x17f52]
mov  rdi, r14
mov  rsi, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xd050
call 0xc200
mov  rdi, QWORD PTR [rsp+0x80]
mov  edx, 0x13
mov  esi, eax
call 0xcc70
test eax, eax
jne  0xee80
call 0xc200
mov  rdi, QWORD PTR [rsp+0x80]
mov  edx, 0x9
mov  esi, eax
call 0xcc70
mov  DWORD PTR [rsp+0x38], 0x1
test eax, eax
je   0xe863
mov  rax, QWORD PTR [rsp+0x80]
mov  rdx, r14
mov  esi, 0x80
lea  rdi, [rip+0x17b22]
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xc8b0
mov  DWORD PTR [rsp+0x38], 0x2
jmp  0xe863
mov  rax, QWORD PTR [rsp+0x80]
mov  edx, 0x5
lea  rsi, [rip+0x18a8f]
mov  r14, QWORD PTR [rax+0x8]
xor  edi, edi
call 0xc920
mov  rdx, r14
lea  rdi, [rip+0x17e7f]
mov  rsi, rax
xor  eax, eax
call 0xbc90
mov  DWORD PTR [rsp+0x38], 0x1
jmp  0xe863
mov  rax, QWORD PTR [rsp+0x80]
mov  edx, 0x5
lea  rsi, [rip+0x1789a]
mov  r14, QWORD PTR [rax+0x8]
jmp  0xec92
mov  rdi, QWORD PTR [r12+0x20]
mov  rcx, QWORD PTR [rsp+0x8]
mov  esi, 0x7f
mov  rdx, QWORD PTR [r12]
call 0xc690
test eax, eax
jne  0xebbf
mov  rax, QWORD PTR [rsp+0x80]
lea  rdi, [rip+0x17a15]
mov  rsi, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xd050
jmp  0xe863
mov  rax, QWORD PTR [rsp+0x88]
lea  rdi, [rip+0x1786e]
mov  rsi, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xd050
jmp  0xe95b
mov  rdi, QWORD PTR [r12+0x20]
call 0xc320
mov  rbp, rax
test rax, rax
je   0xeeb1
mov  rsi, rbx
mov  rdi, rax
call 0xcca0
test eax, eax
jne  0xeee5
test BYTE PTR [r12+0x18], 0x8
jne  0xeb6c
mov  rdi, QWORD PTR [r12+0x20]
call 0xc050
test eax, eax
jne  0xeb6c
mov  rdi, QWORD PTR [rsp+0x8]
call 0x227f0
test eax, eax
jne  0xeb6c
mov  rax, QWORD PTR [rsp+0x80]
lea  rdi, [rip+0x17dab]
mov  rsi, QWORD PTR [rax+0x8]
xor  eax, eax
call 0xd050
mov  DWORD PTR [rsp+0x38], 0x1
jmp  0xe863
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x18977]
call 0xc920
mov  esi, 0x1f
mov  rdi, rax
call 0x1d170
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x17800]
mov  rbp, rax
call 0xc920
mov  rsi, rbp
lea  rdi, [rip+0x19e81]
mov  rdx, rax
xor  eax, eax
call 0xd050
mov  rdi, rbp
call 0xbb00
jmp  0xe67f
call 0x222e0
mov  DWORD PTR [rsp+0x38], 0x0
jmp  0xe863
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdi, rbp
call 0x213d0
xor  edi, edi
mov  ebx, eax
call 0xbb00
mov  rdi, rbp
call 0xd2a0
test ebx, ebx
jne  0xee0e
jmp  0xed8b
xor  edi, edi
call 0xbb00
jmp  0xed8b
call 0xc200
mov  rdi, QWORD PTR [rsp+0x8]
mov  edx, 0x4
lea  rcx, [rip+0x1784c]
mov  esi, eax
call 0xd520
mov  rdi, r14
call 0xbb00
mov  rdi, rbp
call 0xbb00
jmp  0xed8b
mov  edx, 0x5
lea  rsi, [rip+0x1895a]
xor  edi, edi
call 0xc920
lea  rdi, [rip+0x17e25]
mov  rsi, rax
xor  eax, eax
call 0xd050
mov  DWORD PTR [rsp+0x38], 0x1
jmp  0xe863
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x188ed]
call 0xc920
mov  r14, rax
call 0xc200
mov  rdi, QWORD PTR [rsp+0x8]
mov  rcx, r14
mov  edx, 0xa
mov  esi, eax
call 0xd520
jmp  0xed8b
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0x17785]
call 0xc920
mov  r14, rax
call 0xc200
mov  rdi, QWORD PTR [rsp+0x8]
mov  r9, rbx
mov  r8, rbp
mov  esi, eax
mov  rcx, r14
mov  edx, 0xa
xor  eax, eax
call 0xc160
jmp  0xed8b
endbr64
push r15
push r14
push r13
push r12
mov  r12, rdi
push rbp
mov  rbp, rsi
push rbx
xor  ebx, ebx
sub  rsp, 0x28
mov  r15, QWORD PTR [rip+0x1317f]
mov  r14, QWORD PTR [rip+0x13188]
mov  rsi, r15
mov  rdi, r14
call 0xcb70
mov  rsi, r15
mov  rdi, r14
mov  r13, rax
call 0xcb70
mov  rdi, r12
mov  r15, rax
call 0xbde0
mov  rdi, rbp
mov  r12, rax
call 0xbde0
mov  rdi, QWORD PTR [rip+0x13162]
mov  rbp, rax
call 0xc870
mov  edi, DWORD PTR [r12+0x8]
mov  QWORD PTR [rsp+0x18], rax
test edi, edi
je   0x1d0f8
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [r12]
mov  edx, ebx
add  ebx, 0x1
mov  r14, QWORD PTR [rax+rdx*8]
mov  rdi, r14
call 0xbee0
mov  rdx, r14
mov  rdi, r13
mov  rsi, rax
call 0xcf70
cmp  DWORD PTR [r12+0x8], ebx
ja   0x1cea0
mov  esi, DWORD PTR [rbp+0x8]
test esi, esi
je   0x1d0e0
xor  ebx, ebx
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbp+0x0]
mov  edx, ebx
add  ebx, 0x1
mov  r14, QWORD PTR [rax+rdx*8]
mov  rdi, r14
call 0xbee0
mov  rdx, r14
mov  rdi, r15
mov  rsi, rax
call 0xcf70
mov  eax, DWORD PTR [rbp+0x8]
cmp  eax, ebx
ja   0x1cee0
test eax, eax
je   0x1d0e0
xor  ebx, ebx
nop  DWORD PTR [rax+0x0]
mov  rdx, QWORD PTR [rbp+0x0]
mov  eax, ebx
mov  r14, QWORD PTR [rdx+rax*8]
mov  rdi, r14
call 0xbee0
mov  rdi, r13
mov  rsi, rax
call 0xd0e0
test rax, rax
je   0x1d0c0
mov  eax, DWORD PTR [rbp+0x8]
add  ebx, 0x1
cmp  eax, ebx
ja   0x1cf18
mov  ecx, DWORD PTR [r12+0x8]
test ecx, ecx
je   0x1cf8b
xor  ebx, ebx
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [r12]
mov  eax, ebx
mov  r14, QWORD PTR [rdx+rax*8]
mov  rdi, r14
call 0xbee0
mov  rdi, r15
mov  rsi, rax
call 0xd0e0
test rax, rax
je   0x1d080
add  ebx, 0x1
cmp  DWORD PTR [r12+0x8], ebx
ja   0x1cf58
mov  eax, DWORD PTR [rbp+0x8]
xor  ebx, ebx
test eax, eax
je   0x1d042
nop  DWORD PTR [rax]
mov  rdx, QWORD PTR [rbp+0x0]
mov  eax, ebx
mov  r14, QWORD PTR [rdx+rax*8]
mov  rdi, r14
call 0xbee0
mov  rdi, r13
mov  rsi, rax
call 0xd0e0
test rax, rax
je   0x1d036
mov  rdi, rax
mov  QWORD PTR [rsp+0x10], rax
call 0xd320
mov  rdi, r14
mov  DWORD PTR [rsp+0x8], eax
call 0xd320
cmp  DWORD PTR [rsp+0x8], eax
je   0x1d036
mov  rdi, QWORD PTR [rsp+0x10]
call 0xd240
mov  rdi, r14
mov  QWORD PTR [rsp+0x8], rax
call 0xd320
mov  rdi, QWORD PTR [rsp+0x8]
mov  esi, eax
call 0xbcf0
mov  rdi, QWORD PTR [rsp+0x10]
call 0xd320
mov  rdi, QWORD PTR [rsp+0x8]
mov  esi, eax
call 0xbfa0
mov  rdi, r14
call 0xcd40
mov  r14, QWORD PTR [rsp+0x8]
mov  esi, eax
mov  rdi, r14
call 0xcf40
mov  rdi, QWORD PTR [rsp+0x18]
mov  rsi, r14
call 0xc540
add  ebx, 0x1
cmp  DWORD PTR [rbp+0x8], ebx
ja   0x1cf98
mov  rdi, rbp
call 0xbb20
mov  rdi, r12
call 0xbb20
test r15, r15
je   0x1d05f
mov  rdi, r15
call 0xd2a0
test r13, r13
je   0x1d06c
mov  rdi, r13
call 0xd2a0
mov  rax, QWORD PTR [rsp+0x18]
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rdi, r14
call 0xd240
xor  esi, esi
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0xbcf0
mov  rdi, r14
call 0xd320
mov  rdi, QWORD PTR [rsp+0x8]
mov  esi, eax
call 0xbfa0
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdi, QWORD PTR [rsp+0x18]
call 0xc540
jmp  0x1cf7e
nop
mov  rdi, r14
call 0xd240
mov  rdi, QWORD PTR [rsp+0x18]
mov  rsi, rax
call 0xc540
jmp  0x1cf3e
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, DWORD PTR [r12+0x8]
test edx, edx
jne  0x1cf51
jmp  0x1d042
nop  WORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rbp+0x8]
test eax, eax
jne  0x1ced5
endbr64
push r13
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x11180
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x110ba
cmp  rsi, QWORD PTR [rax]
je   0x110ca
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x11180
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
jne  0x11110
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x110ea
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x11211
add  rsp, 0x18
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  r13, [rbx+0x20]
mov  rdi, r13
call 0xbd80
lea  rdx, [rip+0x1592d]
mov  esi, 0x80
xor  eax, eax
lea  rdi, [rip+0x1574a]
call 0xc8b0
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x15919]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x111e0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x111a8
mov  r12d, 0x1
mov  rdi, r13
call 0xcfe0
jmp  0x110dc
nop  DWORD PTR [rax]
lea  rdx, [rip+0x15868]
lea  rsi, [rip+0x16882]
xor  r12d, r12d
lea  rdi, [rip+0x156e3]
call 0xc580
jmp  0x110dc
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x12f2b]
xor  eax, eax
call 0xc160
jmp  0x11170
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x137cb]
xor  eax, eax
call 0xc160
jmp  0x11170
endbr64
push r14
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rdi
sub  rsp, 0x18
mov  rdi, QWORD PTR [rip+0x1e364]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
call 0xc870
mov  QWORD PTR [rsp], 0x0
mov  r12, rax
call 0x102a0
test rbp, rbp
je   0x11d90
mov  rsi, rax
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x11cbb
cmp  rsi, QWORD PTR [rax]
je   0x11ccb
mov  rdi, rbp
call 0xd0f0
test eax, eax
je   0x11d90
cmp  QWORD PTR [rbp+0x18], 0x0
je   0x11d70
lea  r14, [rbp+0x20]
mov  rdi, r14
call 0xd020
mov  rdi, QWORD PTR [rbp+0x18]
xor  r8d, r8d
mov  rcx, rsp
mov  edx, 0xffffffff
lea  rsi, [rip+0x12fc0]
call 0xcb40
test eax, eax
jne  0x11db8
mov  rsi, QWORD PTR [rsp]
mov  rdi, rbp
mov  rcx, r13
mov  rdx, r12
xor  ebp, ebp
call 0xfde0
test eax, eax
je   0x11df0
mov  rdi, r14
call 0xc9e0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x11d37
call 0xcbb0
test rbp, rbp
je   0x11d44
mov  rdi, rbp
call 0xbb20
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x11dfb
add  rsp, 0x18
mov  rax, r12
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rsi, r13
mov  rdi, rbp
call 0x10300
test eax, eax
jne  0x11cd6
mov  rbp, r12
xor  r12d, r12d
jmp  0x11d29
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x14c58]
lea  rsi, [rip+0x15c12]
mov  rbp, r12
xor  r12d, r12d
lea  rdi, [rip+0x14ad0]
call 0xc580
jmp  0x11d29
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbp+0x18]
call 0xd500
mov  rbp, rax
call 0xc200
mov  r8, rbp
xor  edx, edx
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x12eae]
xor  eax, eax
mov  rbp, r12
call 0xc160
xor  r12d, r12d
jmp  0x11d21
nop  DWORD PTR [rax+0x0]
mov  rbp, r12
xor  r12d, r12d
jmp  0x11d21
endbr64
push r13
push r12
push rbp
test rdi, rdi
je   0x227c8
mov  r12, rdi
mov  rdi, rsi
mov  r13, rsi
call 0x1ab20
mov  rbp, rax
test rax, rax
je   0x227dd
mov  rdx, r13
mov  rsi, r12
mov  rdi, rbp
xor  r12d, r12d
call 0x1abd0
mov  rdi, rax
test rax, rax
setne  r12b
call 0xbb00
mov  rdi, rbp
call 0xbb30
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax]
lea  rdx, [rip+0x66d6]
lea  rsi, [rip+0x6a2a]
xor  edi, edi
call 0xc580
xor  r12d, r12d
xor  edi, edi
call 0xbb00
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
endbr64
push r12
xor  r12d, r12d
call 0x1ce20
mov  rdi, rax
mov  eax, DWORD PTR [rax+0x8]
test eax, eax
sete r12b
call 0xbb20
mov  eax, r12d
pop  r12
endbr64
push r12
mov  r12, rdi
push rbp
sub  rsp, 0x8
call 0xbee0
lea  rsi, [rip+0xc25a]
mov  rdi, rax
mov  rbp, rax
call 0xcca0
test eax, eax
je   0x1bd68
lea  rsi, [rip+0xc263]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bd40
lea  rsi, [rip+0xc26b]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bda8
lea  rsi, [rip+0xc27d]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bd90
lea  rsi, [rip+0xc297]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bdd0
lea  rsi, [rip+0xda80]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1be10
lea  rsi, [rip+0xda91]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1be30
lea  rsi, [rip+0xdaa2]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bdf0
lea  rsi, [rip+0xdab3]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1be50
lea  rsi, [rip+0xdac4]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1be68
lea  rsi, [rip+0xdad5]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1be80
lea  rsi, [rip+0xc2b9]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1be98
lea  rsi, [rip+0xc2d1]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1beb0
lea  rsi, [rip+0xc2dd]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bec8
lea  rsi, [rip+0xc2ef]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bee0
lea  rsi, [rip+0xc2f2]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bef8
lea  rsi, [rip+0xc30f]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bf10
lea  rsi, [rip+0xc322]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bf28
lea  rsi, [rip+0xc330]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bf40
lea  rsi, [rip+0xc343]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bf58
lea  rsi, [rip+0xc358]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bf88
lea  rsi, [rip+0xc369]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1bf70
lea  rsi, [rip+0xc381]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c08b
lea  rsi, [rip+0xd9ca]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c073
lea  rsi, [rip+0xc395]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c000
lea  rsi, [rip+0xd9c4]
mov  rdi, rbp
call 0xcca0
test eax, eax
jne  0x1bfb3
lea  rsi, [rip+0xc38c]
mov  rdi, r12
call 0xd170
mov  edx, 0x5
lea  rsi, [rip+0xc37d]
mov  rbp, rax
test rax, rax
je   0x1bfa0
xor  edi, edi
call 0xc920
pop  rdx
mov  rsi, rbp
pop  rbp
mov  rdi, rax
pop  r12
xor  eax, eax
jmp  0xbe90
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbff1]
xor  edi, edi
call 0xc920
add  rsp, 0x8
mov  rdi, rax
pop  rbp
pop  r12
jmp  0xd3d0
nop  WORD PTR [rax+rax*1+0x0]
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xbfa7]
call 0xc920
add  rsp, 0x8
pop  rbp
mov  rdi, rax
pop  r12
jmp  0xd3d0
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbff0]
xor  edi, edi
call 0xc920
jmp  0x1bd53
nop  DWORD PTR [rax]
xor  edi, edi
mov  edx, 0x5
lea  rsi, [rip+0xbfa9]
call 0xc920
add  rsp, 0x8
pop  rbp
mov  rdi, rax
pop  r12
jmp  0xd3d0
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbfdb]
xor  edi, edi
call 0xc920
jmp  0x1bd53
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xc001]
xor  edi, edi
call 0xc920
jmp  0x1bd53
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbfb3]
xor  edi, edi
call 0xc920
jmp  0x1bd53
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbfa3]
xor  edi, edi
call 0xc920
jmp  0x1bd53
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x5
lea  rsi, [rip+0xbfbf]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfc4]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfc5]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfdd]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfee]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbffc]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc006]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc012]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc02d]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc03c]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc04a]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc05d]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc09b]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc053]
xor  edi, edi
call 0xc920
jmp  0x1bd53
lea  rsi, [rip+0xc103]
xor  edi, edi
call 0xc920
jmp  0x1bd53
lea  rsi, [rip+0xd71e]
mov  rdi, rbp
call 0xcca0
test eax, eax
jne  0x1c018
lea  rsi, [rip+0xc0c2]
mov  rdi, r12
call 0xd170
mov  edx, 0x5
lea  rsi, [rip+0xc0e0]
mov  rbp, rax
test rax, rax
jne  0x1bd23
lea  rsi, [rip+0xc0d9]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc07a]
xor  edi, edi
call 0xc920
jmp  0x1bd53
lea  rsi, [rip+0xc0bb]
mov  rdi, rbp
call 0xcca0
test eax, eax
jne  0x1c0e2
mov  rdi, r12
lea  rsi, [rip+0xc056]
call 0xd170
mov  rdi, r12
lea  rsi, [rip+0xc0c2]
mov  rbp, rax
call 0xd170
mov  r12, rax
test rbp, rbp
je   0x1c0ca
test rax, rax
jne  0x1c0a3
test rbp, rbp
je   0x1c0ca
mov  edx, 0x5
lea  rsi, [rip+0xc08d]
jmp  0x1bd23
mov  edx, 0x5
lea  rsi, [rip+0xbfd3]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfac]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc045]
xor  edi, edi
call 0xc920
pop  rcx
mov  rdx, r12
mov  rsi, rbp
mov  rdi, rax
pop  rbp
xor  eax, eax
pop  r12
jmp  0xbe90
mov  edx, 0x5
lea  rsi, [rip+0xc030]
xor  edi, edi
call 0xc920
jmp  0x1bd53
lea  rsi, [rip+0xc029]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c152
lea  rsi, [rip+0xd5fc]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c19a
lea  rsi, [rip+0xc041]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c182
lea  rsi, [rip+0xd5f2]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c16a
lea  rsi, [rip+0xc058]
mov  rdi, rbp
call 0xcca0
test eax, eax
je   0x1c16a
mov  rdi, r12
call 0xcd80
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfd0]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xc008]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbfe2]
xor  edi, edi
call 0xc920
jmp  0x1bd53
mov  edx, 0x5
lea  rsi, [rip+0xbf99]
xor  edi, edi
call 0xc920
endbr64
push rbp
push rbx
sub  rsp, 0x18
mov  edi, DWORD PTR [rip+0xdd48]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
test edi, edi
jle  0x22351
mov  esi, 0xf
call 0xccf0
mov  edi, DWORD PTR [rip+0xdd24]
mov  esi, 0x12
call 0xccf0
mov  ebx, DWORD PTR [rip+0xdd14]
test ebx, ebx
jle  0x22370
lea  rbp, [rsp+0x4]
xor  edx, edx
mov  rsi, rbp
mov  edi, ebx
call 0xceb0
test eax, eax
jns  0x22347
call 0xd0c0
cmp  DWORD PTR [rax], 0x4
je   0x2232d
mov  DWORD PTR [rip+0xdce7], 0x0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x22387
add  rsp, 0x18
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x6ae4]
lea  rsi, [rip+0x6f02]
xor  edi, edi
call 0xc580
jmp  0x22347
endbr64
push r14
push r13
mov  r13, rdx
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x113d0
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x1126f
cmp  rsi, QWORD PTR [rax]
je   0x1127f
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x113d0
call 0xbc70
mov  rsi, rax
test rbp, rbp
je   0x11460
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x1129e
cmp  rsi, QWORD PTR [rax]
je   0x112ae
mov  rdi, rbp
call 0xd0f0
test eax, eax
je   0x11460
mov  rsi, r13
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
je   0x11396
lea  r14, [rbx+0x20]
mov  rdi, r14
call 0xbd80
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc660
mov  r12, rax
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc4d0
mov  r8, r12
lea  rdx, [rip+0x1576d]
mov  esi, 0x80
mov  rcx, rax
lea  rdi, [rip+0x1555f]
xor  eax, eax
call 0xc8b0
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x136c7]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x11428
call 0xce20
mov  rdi, rbp
mov  rsi, rax
call 0xbd50
mov  rdi, rax
call 0xc660
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x1
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x113f0
mov  r12d, 0x1
mov  rdi, r14
call 0xcfe0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x113a4
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x11482
add  rsp, 0x10
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x15618]
lea  rsi, [rip+0x16612]
xor  r12d, r12d
lea  rdi, [rip+0x15493]
call 0xc580
jmp  0x11396
nop
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x12ce3]
xor  eax, eax
call 0xc160
jmp  0x1138e
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, r13
mov  esi, eax
lea  rcx, [rip+0x13583]
xor  eax, eax
call 0xc160
jmp  0x1138e
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x155b5]
lea  rsi, [rip+0x16582]
xor  r12d, r12d
lea  rdi, [rip+0x15403]
call 0xc580
jmp  0x11396
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x1ab20
test rax, rax
je   0x22450
sub  rsp, 0x8
xor  edx, edx
xor  r9d, r9d
mov  r8d, 0xffffffff
push rbx
xor  ecx, ecx
lea  rsi, [rip+0x6a84]
mov  rdi, rax
mov  rbp, rax
xor  r13d, r13d
call 0xca40
mov  r12, rax
pop  rax
pop  rdx
test r12, r12
je   0x22420
mov  rdx, rsp
lea  rsi, [rip+0x6a73]
mov  rdi, r12
xor  eax, eax
call 0xbca0
mov  rdi, QWORD PTR [rsp]
call 0xd3d0
mov  rdi, r12
mov  r13, rax
call 0xcab0
mov  rdi, rbp
call 0xbb30
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x22455
add  rsp, 0x18
mov  rax, r13
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
xor  r13d, r13d
jmp  0x22428
endbr64
push r12
mov  r12, rdi
push rbp
sub  rsp, 0x8
call 0xd2f0
xor  ecx, ecx
mov  rdx, r12
xor  esi, esi
mov  rdi, rax
mov  rbp, rax
xor  r12d, r12d
call 0xbed0
test eax, eax
sete r12b
test rbp, rbp
je   0x2128b
mov  rdi, rbp
call 0xd5a0
add  rsp, 0x8
mov  eax, r12d
pop  rbp
pop  r12
endbr64
push r15
push r14
push r13
mov  r13, rdx
push r12
mov  r12, rsi
push rbp
mov  rbp, rcx
push rbx
mov  rbx, rdi
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x10f98
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x10e64
cmp  rsi, QWORD PTR [rax]
je   0x10e74
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x10f98
test r12, r12
je   0x11040
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
test eax, eax
jne  0x10ed8
mov  r13, QWORD PTR [rsp]
xor  r14d, r14d
test r13, r13
je   0x10ea6
mov  rdi, r13
xor  r14d, r14d
xor  r13d, r13d
call 0xcbb0
mov  rdi, r13
call 0xbb00
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x1105f
add  rsp, 0x18
mov  eax, r14d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
lea  r15, [rbx+0x20]
mov  rdi, r15
call 0xbd80
mov  rcx, r12
mov  esi, 0x80
xor  eax, eax
lea  rdx, [rip+0x15b3c]
lea  rdi, [rip+0x1597f]
call 0xc8b0
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x13a51]
call 0xcb40
mov  r14d, eax
test eax, eax
jne  0x11008
mov  rdi, r13
call 0xf7b0
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, rax
mov  esi, 0x1
mov  r13, rax
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  rdx, r12
mov  ecx, 0xffffffff
mov  esi, 0x2
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x10fd0
mov  r14d, 0x1
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x10f86
call 0xcbb0
mov  rdi, r15
call 0xcfe0
jmp  0x10ea6
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x15a50]
lea  rsi, [rip+0x16aaa]
xor  r14d, r14d
lea  rdi, [rip+0x158cb]
call 0xc580
mov  r13, QWORD PTR [rsp]
test r13, r13
jne  0x10e98
jmp  0x10ea6
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x13103]
xor  eax, eax
call 0xc160
jmp  0x10f78
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r13d, r13d
xor  r14d, r14d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x13970]
xor  eax, eax
call 0xc160
jmp  0x10f78
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x159f7]
lea  rsi, [rip+0x16a02]
lea  rdi, [rip+0x15826]
call 0xc580
jmp  0x10e8c
endbr64
push r14
push r13
mov  r13, rsi
push r12
push rbp
mov  rbp, rdx
push rbx
mov  rbx, rdi
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
call 0x102a0
test rbx, rbx
je   0x122b0
mov  rsi, rax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x121df
cmp  rsi, QWORD PTR [rax]
je   0x121ef
mov  rdi, rbx
call 0xd0f0
test eax, eax
je   0x122b0
test r13, r13
je   0x12348
mov  rsi, rbp
mov  rdi, rbx
call 0x10300
mov  r12d, eax
test eax, eax
jne  0x12240
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0x12218
call 0xcbb0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x1236a
add  rsp, 0x10
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
lea  r14, [rbx+0x20]
mov  rdi, r14
call 0xbd80
mov  rdi, QWORD PTR [rbx+0x18]
mov  rcx, rsp
xor  r8d, r8d
mov  edx, 0xffffffff
lea  rsi, [rip+0x12bfe]
call 0xcb40
mov  r12d, eax
test eax, eax
jne  0x12310
mov  rdi, QWORD PTR [rsp]
xor  r8d, r8d
mov  ecx, 0xffffffff
mov  rdx, r13
mov  esi, 0x1
call 0xcbd0
mov  rdi, QWORD PTR [rsp]
call 0xc0a0
cmp  eax, 0x65
jne  0x122d8
mov  r12d, 0x1
mov  rdi, r14
call 0xcfe0
jmp  0x1220a
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x14738]
lea  rsi, [rip+0x15642]
xor  r12d, r12d
lea  rdi, [rip+0x145b3]
call 0xc580
jmp  0x1220a
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
mov  edx, 0x6
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x11dfb]
xor  eax, eax
call 0xc160
jmp  0x1229f
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x18]
xor  r12d, r12d
call 0xd500
mov  rbx, rax
call 0xc200
mov  r8, rbx
xor  edx, edx
mov  rdi, rbp
mov  esi, eax
lea  rcx, [rip+0x12b63]
xor  eax, eax
call 0xc160
jmp  0x1229f
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0x1477f]
lea  rsi, [rip+0x155aa]
xor  r12d, r12d
lea  rdi, [rip+0x1451b]
call 0xc580
jmp  0x1220a
endbr64
push r14
push r13
mov  r13, rsi
push r12
push rbp
sub  rsp, 0x8
call 0xcbe0
mov  r14, rax
call 0xcea0
mov  esi, 0x1
mov  rbp, rax
mov  rdi, rax
call 0xc3f0
mov  rsi, r14
mov  rdi, rbp
call 0xbfd0
xor  esi, esi
mov  rdi, rbp
call 0xc720
mov  r12, rax
test rax, rax
je   0x213a8
mov  rsi, rax
lea  rdi, [rip+0x57df]
xor  eax, eax
mov  r13d, 0x1
call 0xbc90
test r14, r14
je   0x21380
mov  rdi, r14
call 0xc9a0
test rbp, rbp
je   0x2138d
mov  rdi, rbp
call 0xbb30
mov  rdi, r12
call 0xbb00
add  rsp, 0x8
mov  eax, r13d
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax+0x0]
call 0xc200
mov  rdi, r13
lea  rcx, [rip+0x46f9]
xor  edx, edx
mov  esi, eax
xor  r13d, r13d
call 0xd520
endbr64
push rbx
test rdi, rdi
jne  0x1e460
lea  rdx, [rip+0xa33c]
lea  rsi, [rip+0xaef8]
lea  rdi, [rip+0x8335]
call 0xc580
xor  eax, eax
pop  rbx
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  rbx, rdi
cmp  rdi, 0x3b
jbe  0x1e500
cmp  rbx, 0xe0f
jbe  0x1e520
cmp  rbx, 0x34bbf
jbe  0x1e4c8
mov  rax, rbx
mov  r8d, 0x5
48 ba b7 4a 89 72 06 45 2e c2 movabs rdx, 0xc22e450672894ab7
mul  rdx
lea  rsi, [rip+0xa2d6]
mov  rbx, rdx
lea  rdx, [rip+0xa2c4]
shr  rbx, 0x10
movsxd rcx, ebx
xor  edi, edi
call 0xc810
mov  esi, ebx
pop  rbx
mov  rdi, rax
xor  eax, eax
jmp  0xbe90
nop  DWORD PTR [rax]
shr  rbx, 0x4
mov  r8d, 0x5
48 ba 81 6f 5e 4d 3c 2b 1a 09 movabs rdx, 0x91a2b3c4d5e6f81
mov  rax, rbx
lea  rsi, [rip+0xa280]
mul  rdx
shr  rdx, 0x3
mov  rbx, rdx
mov  rcx, rdx
lea  rdx, [rip+0xa263]
jmp  0x1e4b1
nop  DWORD PTR [rax+0x0]
mov  r8d, 0x5
mov  rcx, rbx
lea  rdx, [rip+0xa223]
lea  rsi, [rip+0xa227]
jmp  0x1e4b1
nop  DWORD PTR [rax+0x0]
mov  rax, rbx
mov  r8d, 0x5
48 ba 89 88 88 88 88 88 88 88 movabs rdx, 0x8888888888888889
mul  rdx
lea  rsi, [rip+0xa216]
mov  rbx, rdx
lea  rdx, [rip+0xa201]
shr  rbx, 0x5
mov  rcx, rbx
endbr64
push r15
lea  r15, [rip+0x7962]
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x68
mov  QWORD PTR [rsp+0x8], rsi
lea  rbx, [rsp+0x30]
lea  r14, [rsp+0x20]
lea  r13, [rsp+0x28]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x58], rax
xor  eax, eax
call 0xbf10
mov  rbp, rax
mov  rdi, rax
call 0xc1c0
lea  rsi, [rip+0x790f]
mov  rdi, rbp
call 0xd550
mov  rdi, rbp
call 0xc250
mov  rsi, r12
mov  rdi, rbx
call 0xc370
nop  WORD PTR [rax+rax*1+0x0]
mov  rdx, r14
mov  rsi, r13
mov  rdi, rbx
call 0xd2c0
test eax, eax
je   0x21538
mov  rdi, QWORD PTR [rsp+0x28]
mov  DWORD PTR [rsp+0x1c], 0x0
call 0x1a690
test eax, eax
je   0x214e0
mov  rdi, QWORD PTR [rsp+0x28]
lea  rsi, [rsp+0x1c]
call 0x1a980
mov  rdi, rbp
mov  r12, rax
call 0xc1c0
mov  edx, DWORD PTR [rsp+0x1c]
test edx, edx
jne  0x214f0
mov  rsi, r15
mov  rdi, rbp
call 0xd550
mov  rsi, r12
mov  rdi, rbp
call 0xbdf0
mov  rdi, rbp
lea  rsi, [rip+0x7329]
call 0xd550
mov  rsi, QWORD PTR [rsp+0x20]
mov  rdi, rbp
call 0xbdf0
mov  rdi, rbp
call 0xc820
mov  rdi, r12
call 0xbb00
jmp  0x21448
nop  DWORD PTR [rax]
xor  edi, edi
call 0xbb00
jmp  0x21448
nop  DWORD PTR [rax+0x0]
lea  rsi, [rip+0x7729]
mov  rdi, rbp
mov  DWORD PTR [rsp+0x4], edx
call 0xd550
mov  edx, DWORD PTR [rsp+0x4]
lea  rsi, [rip+0x7818]
cmp  edx, 0x1
je   0x21526
cmp  edx, 0x2
lea  rsi, [rip+0x7811]
mov  eax, 0x0
cmovne rsi, rax
mov  rdi, rbp
call 0xbdf0
jmp  0x21496
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0xc1b0
mov  rdi, rbp
call 0xc820
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdi, rbp
call 0x21310
mov  r12d, eax
test rbp, rbp
je   0x21565
mov  rdi, rbp
call 0xbb30
mov  rax, QWORD PTR [rsp+0x58]
sub  rax, QWORD PTR fs:0x28
jne  0x21587
add  rsp, 0x68
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
endbr64
mov  rax, QWORD PTR [rip+0x15095]
test rax, rax
je   0x1afc0
mov  rax, QWORD PTR [rip+0x15089]
ret
nop  DWORD PTR [rax+rax*1+0x0]
push rbp
lea  rbp, [rip+0x15078]
mov  rdi, rbp
call 0xc360
test eax, eax
jne  0x1afe0
mov  rax, QWORD PTR [rip+0x15065]
pop  rbp
ret
nop  DWORD PTR [rax]
call 0x1a030
mov  rdi, rbp
mov  rsi, rax
call 0xd220
mov  rax, QWORD PTR [rip+0x15049]
pop  rbp
ret
endbr64
push rbp
mov  rbp, rdi
mov  edi, 0x17
call 0xbc10
test rax, rax
jne  0x1a660
mov  rdi, rbp
pop  rbp
jmp  0xb760
xor  eax, eax
pop  rbp
endbr64
push rbp
mov  rbp, rdi
lea  rdi, [rsi+0x1]
push rbx
mov  rbx, rsi
sub  rsp, 0x8
call 0xbb60
mov  r8, rax
test rax, rax
je   0x1a436
mov  rdx, rbx
mov  rsi, rbp
mov  rdi, rax
call 0xb7e0
mov  BYTE PTR [rax+rbx*1], 0x0
mov  r8, rax
add  rsp, 0x8
mov  rax, r8
pop  rbx
pop  rbp
ret
endbr64
push rbp
mov  ebp, edx
push rbx
sub  rsp, 0x8
test rdi, rdi
je   0xb3a0
mov  eax, DWORD PTR [rdi+0x1c]
mov  rbx, rdi
test al, 0x2
jne  0xb392
test rsi, rsi
je   0xb392
or   dl, 0x80
test al, 0x40
mov  r8, QWORD PTR [rdi+0x40]
cmovne ebp, edx
mov  rdx, rsi
mov  rsi, rdi
mov  rdi, QWORD PTR [rdi]
mov  ecx, ebp
call 0x9c80
test BYTE PTR [rbx+0x1c], 0x20
jne  0xb392
test ebp, 0x100
jne  0xb3c7
and  ebp, 0x200
jne  0xb3c0
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+0x0]
test rsi, rsi
je   0xb392
mov  rax, QWORD PTR [rip+0x5374]
mov  rdx, rsi
mov  ecx, ebp
xor  esi, esi
xor  edi, edi
mov  r8, QWORD PTR [rax]
call 0x9c80
jmp  0xb382
nop
xor  edi, edi
call 0x28a0
lea  rax, [rip+0x5cf2]
mov  edi, DWORD PTR [rax]
endbr64
mov  rax, QWORD PTR [rip+0x39b5]
mov  edx, 0x106
mov  rsi, QWORD PTR [rax]
endbr64
push rbp
mov  rbp, rsp
push r15
mov  r15d, ecx
push r14
mov  r14d, esi
push r13
mov  r13, rdx
push r12
push rbx
mov  rbx, rdi
sub  rsp, 0x158
mov  QWORD PTR [rbp-0x178], r8
mov  QWORD PTR [rbp-0x170], r9
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x38], rax
xor  eax, eax
and  ecx, 0x1
jne  0xbcc8
mov  rax, QWORD PTR [rip+0x4a63]
cmp  QWORD PTR [rax], 0x0
je   0xc8ca
mov  rdi, QWORD PTR [rip+0x4a62]
cmp  QWORD PTR [rdi], 0x0
je   0xc8e1
mov  eax, r15d
and  eax, 0x4
sete sil
mov  DWORD PTR [rbp-0x17c], eax
movzx  esi, sil
test r15b, 0x10
je   0xbd30
mov  QWORD PTR [rbp-0x150], rsi
mov  QWORD PTR [rbp-0x148], 0x0
mov  QWORD PTR [rbp-0x140], 0x0
mov  QWORD PTR [rbp-0x138], 0x0
test rbx, rbx
jne  0xbe2c
mov  r12d, 0x68
mov  r8d, 0x48
xor  r9d, r9d
mov  ecx, 0x48
jmp  0xbe7c
nop  DWORD PTR [rax+0x0]
mov  rax, rsp
cmp  rsp, rax
je   0xbd4d
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rax
jne  0xbd38
sub  rsp, 0x90
or   QWORD PTR [rsp+0x88], 0x0
lea  rdx, [rsp+0xf]
mov  rax, rsp
and  rdx, 0xfffffffffffffff0
cmp  rsp, rax
je   0xbd83
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rax
jne  0xbd6e
sub  rsp, 0x40
or   QWORD PTR [rsp+0x38], 0x0
pxor xmm0, xmm0
xor  eax, eax
mov  ecx, 0x10
lea  r8, [rsp+0xf]
mov  rdi, rdx
rep stos QWORD PTR es:[rdi], rax
and  r8, 0xfffffffffffffff0
mov  rax, rdx
movaps XMMWORD PTR [r8+0x20], xmm0
mov  QWORD PTR [r8+0x30], 0x0
mov  QWORD PTR [r8+0x20], rdx
movaps XMMWORD PTR [r8], xmm0
movaps XMMWORD PTR [r8+0x10], xmm0
test rbx, rbx
je   0xbdd0
mov  QWORD PTR [rdx], rbx
add  rax, 0x20
lea  rdx, [rip+0x54e9]
lea  rcx, [rip+0x43e2]
mov  QWORD PTR [rax], rcx
cmp  QWORD PTR [rdx], 0x0
je   0xcca0
lea  rcx, [rip+0x438e]
lea  rdx, [rax+0x40]
mov  QWORD PTR [rax+0x20], rcx
mov  QWORD PTR [rdx], 0x0
mov  rbx, r8
mov  QWORD PTR [rbp-0x150], rsi
mov  QWORD PTR [rbp-0x148], 0x0
mov  QWORD PTR [rbp-0x140], 0x0
mov  QWORD PTR [rbp-0x138], 0x0
lea  rsi, [rbp-0x150]
mov  rdi, rbx
call 0x3160
mov  rax, QWORD PTR [rbp-0x140]
mov  rsi, QWORD PTR [rbp-0x150]
lea  rdi, [rax+rax*8+0x9]
mov  rax, QWORD PTR [rbp-0x138]
lea  rcx, [rdi*8+0x0]
lea  r9, [rax*8+0x0]
mov  rax, QWORD PTR [rbp-0x148]
lea  r8, [r9+rcx*1]
lea  rdx, [rax+0x1]
shl  rdx, 0x5
lea  r12, [rdx+r8*1]
lea  rdi, [rsi+r12*1+0x1]
mov  QWORD PTR [rbp-0x168], rcx
mov  QWORD PTR [rbp-0x160], r9
mov  QWORD PTR [rbp-0x158], r8
call 0x27b0
mov  r8, QWORD PTR [rbp-0x158]
mov  r9, QWORD PTR [rbp-0x160]
test rax, rax
mov  QWORD PTR [rbp-0x40], rax
mov  rcx, QWORD PTR [rbp-0x168]
je   0xcd2e
add  r8, rax
lea  rdi, [rax+rcx*1]
add  r12, rax
mov  rdx, r9
mov  QWORD PTR [rbp-0xc0], rax
xor  esi, esi
48 b8 01 00 00 00 01 00 00 00 movabs rax, 0x100000001
mov  QWORD PTR [rbp-0x100], r8
mov  QWORD PTR [rbp-0x158], r8
mov  QWORD PTR [rbp-0xb0], rdi
mov  QWORD PTR [rbp-0x108], r12
mov  QWORD PTR [rbp-0xf8], rax
mov  DWORD PTR [rbp-0xf0], 0x0
mov  QWORD PTR [rbp-0xe8], 0x0
mov  DWORD PTR [rbp-0xe0], 0x0
mov  QWORD PTR [rbp-0xd8], 0x0
mov  QWORD PTR [rbp-0xd0], 0x0
mov  QWORD PTR [rbp-0xc8], 0x0
call 0x2690
mov  r8, QWORD PTR [rbp-0x158]
lea  r9, [rbp-0x110]
mov  QWORD PTR [rbp-0x128], r12
mov  QWORD PTR [rbp-0x130], r9
mov  QWORD PTR [rbp-0x120], r8
mov  QWORD PTR [rbp-0x118], rax
test r15b, 0x8
jne  0xc378
mov  edx, DWORD PTR [rbp-0x17c]
mov  rax, r12
test edx, edx
je   0xbf96
add  rax, 0x1
mov  BYTE PTR [r12], 0x2b
mov  QWORD PTR [rbp-0x128], rax
mov  BYTE PTR [rax], 0x0
mov  rax, QWORD PTR [rbp-0x120]
mov  QWORD PTR [rax], 0x0
mov  QWORD PTR [rbp-0x110], rbx
test rbx, rbx
je   0xc5c0
mov  rcx, QWORD PTR [rbp-0xc0]
xor  edx, edx
mov  rdi, rbx
xor  esi, esi
lea  r8, [rbp-0x130]
mov  QWORD PTR [rbp-0x158], r9
call 0x4720
mov  rdx, QWORD PTR [rbp-0x110]
mov  r9, QWORD PTR [rbp-0x158]
pxor xmm0, xmm0
mov  rbx, QWORD PTR [rbp-0xc0]
0f 11 85 68 ff ff ff  movups XMMWORD PTR [rbp-0x98], xmm0
mov  QWORD PTR [rbp-0xa0], rdx
mov  rdx, QWORD PTR [rip+0x472a]
0f 11 85 78 ff ff ff  movups XMMWORD PTR [rbp-0x88], xmm0
mov  rdx, QWORD PTR [rdx]
mov  QWORD PTR [rbp-0xb8], rax
mov  DWORD PTR [rbp-0x98], r14d
mov  QWORD PTR [rbp-0x58], rdx
mov  rdx, QWORD PTR [rip+0x46d7]
mov  QWORD PTR [rbp-0x90], r13
mov  rdx, QWORD PTR [rdx]
mov  QWORD PTR [rbp-0x48], r9
mov  DWORD PTR [rbp-0x84], r15d
mov  QWORD PTR [rbp-0x50], rdx
mov  DWORD PTR [rbp-0xa8], 0x1
movups XMMWORD PTR [rbp-0x78], xmm0
movups XMMWORD PTR [rbp-0x68], xmm0
cmp  rax, rbx
jbe  0xc632
mov  rax, QWORD PTR [rbp-0x170]
add  rbx, 0x48
lea  r12, [rbp-0xa0]
mov  QWORD PTR [rbx-0x18], rax
jmp  0xc0cd
nop  DWORD PTR [rax]
mov  rdx, QWORD PTR [rbx-0x8]
xor  esi, esi
mov  edi, 0x1000003
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx-0x18]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx-0x10]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx-0x30]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx-0x8], rax
cmp  QWORD PTR [rbp-0xb8], rbx
jbe  0xc6b8
test r15d, r15d
je   0xc0c9
cmp  r15d, 0x7
jne  0xc34d
add  rbx, 0x48
mov  rax, QWORD PTR [rbx-0x28]
test rax, rax
je   0xc0e5
mov  rax, QWORD PTR [rax+0x38]
mov  edx, DWORD PTR [rbx-0x20]
mov  rax, QWORD PTR [rax+rdx*8]
mov  QWORD PTR [rbx-0x18], rax
mov  rax, QWORD PTR [rbx-0x48]
test rax, rax
jne  0xc078
mov  rax, QWORD PTR [rbx-0x40]
mov  rax, QWORD PTR [rax+0x20]
test rax, rax
je   0xc120
cmp  QWORD PTR [rax], 0x0
je   0xc120
mov  rax, QWORD PTR [rbx-0x10]
mov  rdx, QWORD PTR [rbx-0x18]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbx-0x48]
test rax, rax
jne  0xc078
nop  DWORD PTR [rax+0x0]
cmp  QWORD PTR [rbp-0xb8], rbx
ja   0xc0c9
nop  DWORD PTR [rax+0x0]
mov  r15d, DWORD PTR [rbp-0x84]
mov  rax, QWORD PTR [rbp-0x90]
mov  r14d, DWORD PTR [rbp-0x98]
test r15b, 0x2
je   0xc63f
mov  DWORD PTR [rbp-0xf4], 0x0
and  r15d, 0x1
jne  0xc8af
cmp  r13, rax
je   0xc652
mov  rax, QWORD PTR [rip+0x45ad]
mov  rdx, QWORD PTR [rax]
mov  eax, DWORD PTR [rbp-0x88]
mov  QWORD PTR [rbp-0x60], rdx
lea  r12, [rbp-0xa0]
mov  edx, DWORD PTR [rbp-0xa8]
mov  DWORD PTR [rbp-0x158], eax
mov  eax, DWORD PTR [rbp-0x7c]
test eax, eax
je   0xc1a9
cmp  eax, DWORD PTR [rbp-0x158]
jle  0xc1b1
mov  DWORD PTR [rbp-0x7c], 0x0
test edx, edx
jne  0xc448
48 63 85 a8 fe ff ff  movsxd rax, DWORD PTR [rbp-0x158]
cmp  eax, r14d
jge  0xc510
test BYTE PTR [rbp-0x84], 0x4
jne  0xc720
mov  rdx, QWORD PTR [rbp-0x90]
mov  r14, QWORD PTR [rdx+rax*8]
mov  QWORD PTR [rbp-0xe8], r14
mov  edx, DWORD PTR [rbp-0x158]
mov  rbx, QWORD PTR [rbp-0xc0]
mov  DWORD PTR [rbp-0x88], edx
cmp  rbx, QWORD PTR [rbp-0xb8]
jae  0xc4f7
lea  eax, [rdx+0x1]
mov  DWORD PTR [rbp-0x88], eax
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0xc4e0
mov  rdx, QWORD PTR [rbx+0x40]
mov  rsi, r14
xor  edi, edi
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx+0x40], rax
cmp  r15d, 0x7
je   0xc390
lea  r13, [rbx+0x48]
test r15d, r15d
je   0xc410
cmp  r15d, 0x7
je   0xc943
mov  rbx, QWORD PTR [rbp-0xb8]
mov  r12, QWORD PTR [rbp-0xc0]
cmp  r12, rbx
jae  0xc2e0
lea  r13, [rbp-0xa0]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [r12]
test rax, rax
je   0xc2d0
mov  rdx, QWORD PTR [r12+0x40]
xor  esi, esi
mov  edi, 0x1000005
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r13
call rax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x40], rax
mov  rbx, QWORD PTR [rbp-0xb8]
add  r12, 0x48
cmp  r12, rbx
jb   0xc288
mov  r12, QWORD PTR [rbp-0xc0]
sub  rbx, 0x48
cmp  rbx, r12
jb   0xc337
lea  r12, [rbp-0xa0]
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0xc32a
mov  rdx, QWORD PTR [rbx+0x40]
xor  esi, esi
mov  edi, 0x1000007
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx+0x40], rax
sub  rbx, 0x48
cmp  rbx, QWORD PTR [rbp-0xc0]
jae  0xc2f0
cmp  r15d, 0x7
mov  eax, 0x16
cmove  r15d, eax
mov  rdi, QWORD PTR [rbp-0x40]
call 0x2500
mov  rax, QWORD PTR [rbp-0x38]
sub  rax, QWORD PTR fs:0x28
jne  0xcd0e
lea  rsp, [rbp-0x28]
mov  eax, r15d
pop  rbx
pop  r12
pop  r13
pop  r14
pop  r15
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rax, [r12+0x1]
mov  BYTE PTR [r12], 0x2d
mov  QWORD PTR [rbp-0x128], rax
jmp  0xbf96
xchg ax, ax
mov  eax, DWORD PTR [rbp-0x88]
mov  r8, QWORD PTR [rbx]
lea  r13, [rbx+0x48]
lea  edx, [rax-0x1]
mov  DWORD PTR [rbp-0x88], edx
test r8, r8
je   0xcd26
mov  rax, QWORD PTR [rbx+0x40]
mov  rdx, r12
xor  esi, esi
mov  edi, 0x1000006
mov  QWORD PTR [rbp-0x68], rax
mov  rax, QWORD PTR [rbx+0x30]
mov  QWORD PTR [rbp-0x78], rax
mov  rax, QWORD PTR [rbx+0x38]
mov  QWORD PTR [rbp-0x70], rax
mov  eax, DWORD PTR [rbx+0x18]
mov  DWORD PTR [rbp-0x80], eax
call r8
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx+0x40], rax
cmp  QWORD PTR [rbp-0xb8], r13
jbe  0xcd39
cmp  r15d, 0x7
jne  0xcd39
mov  edx, DWORD PTR [rbp-0x88]
mov  rbx, r13
jmp  0xc200
nop  WORD PTR [rax+rax*1+0x0]
mov  r14d, DWORD PTR [rbp-0x98]
mov  eax, DWORD PTR [rbp-0x88]
mov  ecx, DWORD PTR [rbp-0x158]
cmp  eax, ecx
jle  0xc580
mov  edx, eax
mov  DWORD PTR [rbp-0x158], eax
sub  edx, ecx
add  DWORD PTR [r13-0x30], edx
mov  edx, DWORD PTR [rbp-0xa8]
jmp  0xc193
nop  DWORD PTR [rax+0x0]
mov  eax, DWORD PTR [rbp-0x158]
mov  rcx, QWORD PTR [rbp-0x100]
mov  DWORD PTR [rbp-0xf0], 0xffffffff
mov  rdx, QWORD PTR [rbp-0x108]
mov  rsi, QWORD PTR [rbp-0x90]
mov  DWORD PTR [rbp-0xf8], eax
test BYTE PTR [rbp-0x84], 0x40
je   0xc5a0
lea  r9, [rbp-0xf8]
mov  r8d, 0x1
mov  edi, r14d
call 0x6dc0
mov  ebx, eax
mov  eax, DWORD PTR [rbp-0xf8]
mov  DWORD PTR [rbp-0x158], eax
mov  DWORD PTR [rbp-0x88], eax
cmp  ebx, 0xffffffff
je   0xc6d0
cmp  ebx, 0x3f
je   0xc7e0
cmp  ebx, 0x1
jne  0xca03
sub  DWORD PTR [rbp-0x158], 0x1
mov  r14, QWORD PTR [rbp-0xe8]
jmp  0xc1e0
nop  WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rbp-0x88], edx
add  rbx, 0x48
cmp  rbx, QWORD PTR [rbp-0xb8]
jb   0xc200
mov  eax, DWORD PTR [rbp-0x88]
mov  r14d, DWORD PTR [rbp-0x98]
mov  DWORD PTR [rbp-0x158], eax
nop  WORD PTR [rax+rax*1+0x0]
cmp  DWORD PTR [rbp-0x158], r14d
jne  0xc720
mov  r13, QWORD PTR [rbp-0xc0]
mov  rbx, QWORD PTR [rbp-0xb8]
cmp  r13, rbx
jae  0xccc6
xor  r15d, r15d
lea  r12, [rbp-0xa0]
xchg ax, ax
mov  eax, DWORD PTR [r13+0x18]
add  r13, 0x48
test eax, eax
je   0xcb38
cmp  rbx, r13
jbe  0xcb97
test r15d, r15d
je   0xc540
cmp  r15d, 0x7
je   0xc540
cmp  QWORD PTR [rbp-0x178], 0x0
jne  0xcc34
jmp  0xc270
nop  WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rbp-0xa8], 0x1
mov  edx, 0x1
mov  DWORD PTR [rbp-0x158], eax
jmp  0xc193
nop  WORD PTR [rax+rax*1+0x0]
lea  r9, [rbp-0xf8]
xor  r8d, r8d
mov  edi, r14d
call 0x6dc0
mov  ebx, eax
jmp  0xc497
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rbp-0xc0]
pxor xmm0, xmm0
mov  QWORD PTR [rbp-0x48], r9
0f 11 85 68 ff ff ff  movups XMMWORD PTR [rbp-0x98], xmm0
mov  QWORD PTR [rbp-0xb8], rax
mov  rax, QWORD PTR [rip+0x414c]
0f 11 85 78 ff ff ff  movups XMMWORD PTR [rbp-0x88], xmm0
mov  rax, QWORD PTR [rax]
mov  DWORD PTR [rbp-0x98], r14d
mov  QWORD PTR [rbp-0xa0], 0x0
mov  QWORD PTR [rbp-0x58], rax
mov  rax, QWORD PTR [rip+0x40f5]
mov  QWORD PTR [rbp-0x90], r13
mov  rax, QWORD PTR [rax]
mov  DWORD PTR [rbp-0x84], r15d
mov  DWORD PTR [rbp-0xa8], 0x1
mov  QWORD PTR [rbp-0x50], rax
movups XMMWORD PTR [rbp-0x78], xmm0
movups XMMWORD PTR [rbp-0x68], xmm0
mov  rax, r13
test r15b, 0x2
jne  0xc14f
mov  DWORD PTR [rbp-0xf4], 0x1
cmp  r13, rax
jne  0xc16c
mov  rdx, QWORD PTR [r13+0x0]
test rdx, rdx
je   0xc16c
movzx  eax, BYTE PTR [rdx]
cmp  al, 0x2f
jne  0xc67c
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rdx+0x1]
add  rdx, 0x1
cmp  al, 0x2f
je   0xc670
test al, al
je   0xc176
mov  rcx, rdx
xor  esi, esi
jmp  0xc6aa
nop  DWORD PTR [rax+rax*1+0x0]
test sil, sil
je   0xc69a
mov  rdx, rcx
xor  esi, esi
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
test al, al
je   0xc176
cmp  al, 0x2f
jne  0xc690
mov  esi, 0x1
jmp  0xc69a
nop  DWORD PTR [rax]
cmp  r15d, 0x7
je   0xc130
test r15d, r15d
je   0xc130
jmp  0xc34d
mov  DWORD PTR [rbp-0xa8], 0x0
mov  r14d, DWORD PTR [rbp-0x98]
mov  ecx, eax
cmp  eax, 0x1
jle  0xc1b1
mov  rdx, QWORD PTR [rbp-0x90]
cdqe
mov  rax, QWORD PTR [rdx+rax*8-0x8]
cmp  BYTE PTR [rax], 0x2d
jne  0xc1b1
cmp  BYTE PTR [rax+0x1], 0x2d
jne  0xc1b1
cmp  BYTE PTR [rax+0x2], 0x0
jne  0xc1b1
mov  DWORD PTR [rbp-0x7c], ecx
jmp  0xc1b1
nop
mov  rax, QWORD PTR [rbp-0x178]
test rax, rax
je   0xc966
mov  ecx, DWORD PTR [rbp-0x158]
mov  rbx, QWORD PTR [rbp-0xb8]
mov  DWORD PTR [rax], ecx
sub  rbx, 0x48
lea  r12, [rbp-0xa0]
cmp  rbx, QWORD PTR [rbp-0xc0]
jb   0xc9fb
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0xc9c0
mov  rdx, QWORD PTR [rbx+0x40]
xor  esi, esi
mov  edi, 0x1000004
sub  rbx, 0x48
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx+0x78]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx+0x80]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx+0x60]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx+0x88], rax
mov  rax, QWORD PTR [rbp-0xc0]
cmp  rbx, rax
jb   0xc9da
test r15d, r15d
je   0xc760
cmp  r15d, 0x7
je   0xc760
mov  rbx, QWORD PTR [rbp-0xb8]
sub  rbx, 0x48
cmp  rbx, rax
jae  0xc2e9
jmp  0xc344
nop
cmp  DWORD PTR [rbp-0xf0], 0xffffffff
jne  0xc943
mov  r15, QWORD PTR [rbp-0xe8]
mov  rdi, QWORD PTR [rbp-0x108]
mov  esi, ebx
call 0x2650
test rax, rax
je   0xcaed
mov  r14, QWORD PTR [rbp-0xc0]
mov  rdx, QWORD PTR [rbp-0xb8]
cmp  r14, rdx
jb   0xc835
jmp  0xcaed
nop  DWORD PTR [rax+rax*1+0x0]
add  r14, 0x48
cmp  r14, rdx
jae  0xcaed
cmp  rax, QWORD PTR [r14+0x10]
jae  0xc828
mov  rax, QWORD PTR [r14]
test rax, rax
je   0xcaed
mov  rdx, QWORD PTR [r14+0x40]
mov  rsi, r15
mov  edi, ebx
mov  r13, r12
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r14+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r14+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r14+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r14+0x40], rax
cmp  r15d, 0x7
je   0xcaf4
test r15d, r15d
jne  0xc25f
mov  eax, DWORD PTR [rbp-0x88]
mov  edx, DWORD PTR [rbp-0xa8]
mov  r14d, DWORD PTR [rbp-0x98]
mov  DWORD PTR [rbp-0x158], eax
jmp  0xc193
sub  rax, 0x8
add  r14d, 0x1
mov  QWORD PTR [rbp-0x90], rax
mov  DWORD PTR [rbp-0x98], r14d
jmp  0xc163
mov  rdi, QWORD PTR [rip+0x3e4f]
mov  rdx, QWORD PTR [rdx]
cmp  QWORD PTR [rdi], 0x0
mov  QWORD PTR [rax], rdx
jne  0xbcc8
mov  rdx, QWORD PTR [r13+0x0]
movzx  eax, BYTE PTR [rdx]
cmp  al, 0x2f
jne  0xc8fc
nop  DWORD PTR [rax+0x0]
movzx  eax, BYTE PTR [rdx+0x1]
add  rdx, 0x1
cmp  al, 0x2f
je   0xc8f0
test al, al
je   0xc93b
mov  rcx, rdx
xor  esi, esi
jmp  0xc926
nop  WORD PTR [rax+rax*1+0x0]
test sil, sil
je   0xc91a
mov  rdx, rcx
xor  esi, esi
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
test al, al
je   0xc93b
cmp  al, 0x2f
jne  0xc910
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
mov  esi, 0x1
test al, al
jne  0xc926
mov  QWORD PTR [rdi], rdx
jmp  0xbcc8
mov  rsi, QWORD PTR [rbp-0x58]
lea  r13, [rbp-0xa0]
mov  edx, 0x104
mov  rdi, r13
mov  r15d, 0x7
call 0xb340
jmp  0xc269
mov  rsi, QWORD PTR [rbp-0x58]
lea  r13, [rbp-0xa0]
test BYTE PTR [rbp-0x84], 0x2
jne  0xc94e
test rsi, rsi
je   0xc94e
mov  rax, QWORD PTR [rbp-0x110]
mov  r12, QWORD PTR [rbp-0x60]
mov  edx, 0x5
lea  rsi, [rip+0x996]
mov  rdi, QWORD PTR [rax+0x30]
call 0x25e0
mov  rdi, QWORD PTR [rbp-0x58]
mov  rcx, r12
mov  esi, 0x1
mov  rdx, rax
xor  eax, eax
call 0x28c0
jmp  0xcae4
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbp-0xc0]
sub  rbx, 0x48
cmp  rbx, rax
jae  0xc760
mov  r15d, 0x7
mov  rbx, QWORD PTR [rbp-0xb8]
cmp  r15d, 0x7
jne  0xc7cd
sub  rbx, 0x48
xor  r15d, r15d
cmp  rbx, rax
jae  0xc2e9
xor  r15d, r15d
jmp  0xc344
mov  eax, ebx
mov  r15, QWORD PTR [rbp-0xe8]
sar  eax, 0x18
je   0xc7f4
mov  edx, ebx
cdqe
shl  edx, 0x8
mov  edi, edx
lea  rdx, [rax+rax*8]
mov  rax, QWORD PTR [rbp-0xc0]
sar  edi, 0x8
lea  r14, [rax+rdx*8-0x48]
mov  rax, QWORD PTR [r14]
test rax, rax
je   0xccba
mov  rdx, QWORD PTR [r14+0x40]
mov  rsi, r15
mov  r13, r12
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r14+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r14+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r14+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r14+0x40], rax
cmp  r15d, 0x7
jne  0xc888
mov  r12, QWORD PTR [rbp-0x100]
cmp  ebx, DWORD PTR [r12+0x18]
jne  0xca9b
jmp  0xcaa2
nop  DWORD PTR [rax+0x0]
add  r12, 0x20
cmp  ebx, DWORD PTR [r12+0x18]
je   0xcaa2
cmp  QWORD PTR [r12], 0x0
jne  0xca90
mov  rax, QWORD PTR [rbp-0x110]
mov  edx, 0x5
lea  rsi, [rip+0x14eb]
mov  rdi, QWORD PTR [rax+0x30]
call 0x25e0
mov  rdx, QWORD PTR [r12]
lea  rsi, [rip+0x85a]
mov  rdi, r13
mov  rcx, rax
lea  rax, [rip+0x841]
test rdx, rdx
cmove  rdx, rax
xor  eax, eax
call 0xb820
mov  rsi, QWORD PTR [rbp-0x58]
jmp  0xc94e
lea  r13, [rbp-0xa0]
mov  rax, QWORD PTR [rbp-0x110]
mov  edx, 0x5
lea  rsi, [rip+0x1499]
mov  rdi, QWORD PTR [rax+0x30]
call 0x25e0
mov  edx, ebx
lea  rsi, [rip+0x802]
mov  rdi, r13
mov  rcx, rax
xor  eax, eax
call 0xb820
cmp  ebx, 0x1
je   0xc4f7
jmp  0xcae4
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [r13-0x48]
test rax, rax
je   0xcb83
mov  rdx, QWORD PTR [r13-0x8]
xor  esi, esi
mov  edi, 0x1000002
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r13-0x18]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r13-0x10]
mov  DWORD PTR [rbp-0x80], 0x0
mov  QWORD PTR [rbp-0x70], rdx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r13-0x8], rax
mov  rbx, QWORD PTR [rbp-0xb8]
jmp  0xc550
cmp  r13, rbx
jae  0xccf8
mov  r15d, 0x7
jmp  0xc540
lea  r12, [rbx-0x48]
cmp  r12, QWORD PTR [rbp-0xc0]
jb   0xcc8d
cmp  r15d, 0x7
je   0xcbb7
test r15d, r15d
jne  0xcd13
lea  rbx, [rbp-0xa0]
xchg ax, ax
mov  rax, QWORD PTR [r12]
test rax, rax
je   0xcc58
mov  rdx, QWORD PTR [r12+0x40]
xor  esi, esi
mov  edi, 0x1000001
sub  r12, 0x48
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x78]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x80]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x60]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, rbx
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x88], rax
cmp  r12, QWORD PTR [rbp-0xc0]
jb   0xcc8d
test r15d, r15d
je   0xcbc0
cmp  r15d, 0x7
je   0xcbc0
cmp  QWORD PTR [rbp-0x178], 0x0
je   0xc269
mov  eax, DWORD PTR [rbp-0x88]
mov  rcx, QWORD PTR [rbp-0x178]
mov  DWORD PTR [rcx], eax
test r15d, r15d
jne  0xc25f
mov  rbx, QWORD PTR [rbp-0xb8]
jmp  0xc73f
sub  r12, 0x48
cmp  QWORD PTR [rbp-0xc0], r12
jbe  0xcbc0
mov  rbx, QWORD PTR [rbp-0xb8]
mov  rcx, QWORD PTR [rbp-0x178]
test rcx, rcx
je   0xc73f
mov  eax, DWORD PTR [rbp-0x88]
mov  DWORD PTR [rcx], eax
jmp  0xc73f
cmp  r15d, 0x7
je   0xcc69
cmp  QWORD PTR [rbp-0x178], 0x0
je   0xcc43
jmp  0xcc34
nop
lea  rdx, [rip+0x4621]
cmp  QWORD PTR [rdx], 0x0
jne  0xbdeb
lea  rdx, [rax+0x20]
jmp  0xbdfa
lea  r13, [rbp-0xa0]
jmp  0xca7c
lea  r12, [rbx-0x48]
cmp  r12, r13
jae  0xcbb7
cmp  QWORD PTR [rbp-0x178], 0x0
je   0xc9fb
mov  eax, DWORD PTR [rbp-0x88]
mov  rcx, QWORD PTR [rbp-0x178]
mov  DWORD PTR [rcx], eax
jmp  0xc73f
nop  DWORD PTR [rax]
lea  r12, [rbx-0x48]
cmp  r12, QWORD PTR [rbp-0xc0]
jae  0xcbb7
jmp  0xcc70
call 0x2610
cmp  QWORD PTR [rbp-0x178], 0x0
jne  0xcc34
jmp  0xc25f
mov  rbx, r13
jmp  0xc1f3
mov  r15d, 0xc
jmp  0xc34d
test r15d, r15d
jne  0xcd52
mov  eax, DWORD PTR [rbp-0x98]
mov  DWORD PTR [rbp-0x88], eax
mov  r14d, eax
jmp  0xc41d
cmp  r15d, 0x7
je   0xc4f7
endbr64
mov  r8, rcx
mov  ecx, edx
mov  rdx, rsi
xor  esi, esi
endbr64
push r14
mov  r14d, edx
push r13
mov  r13d, esi
push r12
mov  r12, rcx
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x180
mov  QWORD PTR [rsp+0xf0], r8
mov  QWORD PTR [rsp+0xf8], r9
test al, al
je   0x9a33
movaps XMMWORD PTR [rsp+0x100], xmm0
movaps XMMWORD PTR [rsp+0x110], xmm1
movaps XMMWORD PTR [rsp+0x120], xmm2
movaps XMMWORD PTR [rsp+0x130], xmm3
movaps XMMWORD PTR [rsp+0x140], xmm4
movaps XMMWORD PTR [rsp+0x150], xmm5
movaps XMMWORD PTR [rsp+0x160], xmm6
movaps XMMWORD PTR [rsp+0x170], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0xc8], rax
xor  eax, eax
test rbx, rbx
je   0x9ba0
test BYTE PTR [rbx+0x1c], 0x2
jne  0x9b78
mov  rbp, QWORD PTR [rbx+0x48]
test rbp, rbp
je   0x9b78
mov  rdi, rbp
call 0x26d0
mov  rdi, QWORD PTR [rbx+0x40]
mov  rsi, rbp
call 0x2730
test r12, r12
je   0x9aed
lea  rax, [rsp+0x1b0]
mov  DWORD PTR [rsp], 0x20
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0xd0]
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rbp+0x28]
mov  DWORD PTR [rsp+0x4], 0x30
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x9c38
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x3a
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x9c20
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x20
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0x2530
test r14d, r14d
je   0x9b48
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x9c68
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x3a
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x9c50
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x20
mov  edi, r14d
mov  rsi, rsp
mov  edx, 0xc8
call 0x27a0
mov  rdi, rax
test rax, rax
je   0x9be8
mov  rsi, rbp
call 0x2730
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x9bd0
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0xa
mov  rdi, rbp
call 0x2510
test r13d, r13d
je   0x9b78
test rbx, rbx
je   0x9bc6
test BYTE PTR [rbx+0x1c], 0x20
je   0x9bc6
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0x9c7a
add  rsp, 0x180
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop
mov  rax, QWORD PTR [rip+0x6b89]
mov  rbp, QWORD PTR [rax]
test rbp, rbp
je   0x9b78
mov  rdi, rbp
call 0x26d0
mov  rax, QWORD PTR [rip+0x6b62]
mov  rdi, QWORD PTR [rax]
jmp  0x9a72
mov  edi, r13d
call 0x28a0
xchg ax, ax
mov  esi, 0xa
mov  rdi, rbp
call 0x2660
jmp  0x9b5d
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, r14d
call 0x28f0
mov  rdi, rax
test rax, rax
jne  0x9b40
mov  rax, QWORD PTR [rbx]
mov  edx, 0x5
lea  rsi, [rip+0x35ea]
mov  rdi, QWORD PTR [rax+0x30]
call 0x25e0
mov  rdi, rax
jmp  0x9b40
nop  DWORD PTR [rax+0x0]
mov  esi, 0x20
mov  rdi, rbp
call 0x2660
jmp  0x9ada
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, rbp
call 0x2660
jmp  0x9ac1
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x20
mov  rdi, rbp
call 0x2660
jmp  0x9b24
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, rbp
call 0x2660
jmp  0x9b0b
endbr64
push r13
mov  r13, rsi
push r12
mov  r12, rdi
push rbp
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0xb885
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
test r12, r12
je   0xb990
test BYTE PTR [r12+0x1c], 0x2
jne  0xb969
mov  rbp, QWORD PTR [r12+0x48]
test rbp, rbp
je   0xb969
mov  rdi, rbp
call 0x26d0
lea  rax, [rsp+0xf0]
mov  rdi, QWORD PTR [r12+0x40]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
mov  rsi, rbp
call 0x2730
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0xb9f8
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x3a
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0xba10
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x20
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
mov  rdi, rbp
call 0x2530
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0xb9e0
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0xa
mov  rdi, r12
mov  edx, 0x104
mov  rsi, rbp
call 0xb340
mov  rdi, rbp
call 0x2510
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0xba22
add  rsp, 0xd0
pop  rbp
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rip+0x4d99]
mov  rbp, QWORD PTR [rax]
test rbp, rbp
je   0xb969
mov  rdi, rbp
call 0x26d0
lea  rax, [rsp+0xf0]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rip+0x4d54]
mov  DWORD PTR [rsp+0x4], 0x30
mov  rdi, QWORD PTR [rax]
jmp  0xb8eb
nop  DWORD PTR [rax+0x0]
mov  esi, 0xa
mov  rdi, rbp
call 0x2660
jmp  0xb951
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, rbp
call 0x2660
jmp  0xb90c
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x20
mov  rdi, rbp
call 0x2660
jmp  0xb925
call 0x2610
endbr64
push r13
mov  r13, rsi
push r12
mov  r12d, edi
push rbx
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1875
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  rbx, QWORD PTR [rip+0x276c]
mov  rcx, QWORD PTR [rbx]
test r12d, r12d
je   0x1910
mov  edx, 0x7
mov  esi, 0x1
lea  rdi, [rip+0x76f]
call 0x11c0
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r13
lea  rax, [rsp+0xf0]
mov  esi, 0x1
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1110
test r12d, r12d
jg   0x1961
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1969
add  rsp, 0xd0
mov  eax, r12d
pop  rbx
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+rax*1+0x0]
mov  edx, 0x9
mov  esi, 0x1
lea  rdi, [rip+0x6fb]
call 0x11c0
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r13
lea  rax, [rsp+0xf0]
mov  esi, 0x1
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1110
jmp  0x18e8
mov  edi, r12d
call 0x11b0
call 0x1140
endbr64
push r14
xor  ecx, ecx
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
mov  r13, QWORD PTR [rdi+0x18]
sub  r13, QWORD PTR [rdi+0x10]
mov  rdx, QWORD PTR [rbx]
add  rsi, r13
mov  rax, r13
mov  rbp, QWORD PTR [rdi+0x8]
setb cl
add  rsi, QWORD PTR [rdi+0x30]
setb dil
shr  rax, 0x3
cmp  rsi, rdx
lea  rax, [rsi+rax*1+0x64]
cmovb  rsi, rdx
cmp  rax, rsi
cmovae rsi, rax
test rcx, rcx
jne  0x11e8f
movzx  edi, dil
test rdi, rdi
jne  0x11e8f
mov  rax, QWORD PTR [rbx+0x38]
mov  r14, rsi
test BYTE PTR [rbx+0x50], 0x1
jne  0x11e58
mov  rdi, rsi
call rax
mov  r12, rax
test r12, r12
je   0x11e8f
lea  rax, [r12+r14*1]
mov  QWORD PTR [rbx+0x8], r12
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdx, r13
mov  QWORD PTR [r12+0x8], rbp
mov  QWORD PTR [rbx+0x20], rax
mov  QWORD PTR [r12], rax
mov  rax, QWORD PTR [rbx+0x30]
lea  r14, [r12+rax*1+0x10]
not  rax
and  r14, rax
mov  rdi, r14
call 0x3a40
movzx  edx, BYTE PTR [rbx+0x50]
test dl, 0x2
jne  0x11e3d
mov  rax, QWORD PTR [rbx+0x30]
lea  rcx, [rbp+rax*1+0x10]
not  rax
and  rax, rcx
cmp  QWORD PTR [rbx+0x10], rax
je   0x11e68
mov  QWORD PTR [rbx+0x10], r14
add  r14, r13
mov  QWORD PTR [rbx+0x18], r14
and  BYTE PTR [rbx+0x50], 0xfd
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbx+0x48]
call rax
mov  r12, rax
jmp  0x11de3
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbp+0x8]
and  edx, 0x1
mov  QWORD PTR [r12+0x8], rax
mov  rax, QWORD PTR [rbx+0x40]
je   0x11e88
mov  rdi, QWORD PTR [rbx+0x48]
mov  rsi, rbp
call rax
jmp  0x11e3d
nop  DWORD PTR [rax]
mov  rdi, rbp
call rax
jmp  0x11e3d
lea  rax, [rip+0xa2d2]
endbr64
or   BYTE PTR [rdi+0x50], 0x1
mov  QWORD PTR [rdi+0x38], rcx
mov  QWORD PTR [rdi+0x40], r8
mov  QWORD PTR [rdi+0x48], r9
endbr64
mov  rax, QWORD PTR [rdi+0x8]
test rax, rax
je   0x11ed6
nop  DWORD PTR [rax]
cmp  rsi, rax
jbe  0x11eba
cmp  QWORD PTR [rax], rsi
jae  0x11ed0
mov  rax, QWORD PTR [rax+0x8]
test rax, rax
jne  0x11eb0
xor  eax, eax
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  eax, 0x1
ret
endbr64
and  BYTE PTR [rdi+0x50], 0xfe
mov  QWORD PTR [rdi+0x38], rcx
mov  QWORD PTR [rdi+0x40], r8
endbr64
mov  rax, QWORD PTR [rdi+0x8]
xor  r8d, r8d
test rax, rax
je   0x11f92
mov  rdx, QWORD PTR [rax]
sub  rdx, rax
mov  rax, QWORD PTR [rax+0x8]
add  r8, rdx
test rax, rax
jne  0x11f80
mov  rax, r8
endbr64
push r12
mov  r12, rsi
push rbp
push rbx
mov  rsi, QWORD PTR [rdi+0x8]
mov  rbx, rdi
test rsi, rsi
jne  0x11f12
jmp  0x11f3b
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x48]
call rax
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
je   0x11f3b
mov  rsi, rbp
cmp  rsi, r12
jae  0x11f1f
mov  rax, QWORD PTR [rsi]
cmp  rax, r12
jae  0x11f50
mov  rbp, QWORD PTR [rsi+0x8]
mov  rax, QWORD PTR [rbx+0x40]
test BYTE PTR [rbx+0x50], 0x1
jne  0x11f00
mov  rdi, rsi
call rax
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
jne  0x11f0f
test r12, r12
jne  0x3d5a
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rbx+0x18], r12
mov  QWORD PTR [rbx+0x10], r12
mov  QWORD PTR [rbx+0x20], rax
mov  QWORD PTR [rbx+0x8], rsi
pop  rbx
pop  rbp
pop  r12
ret
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffff8a1]
call QWORD PTR [rip+0x67b3]
endbr64
push r12
push rbp
sub  rsp, 0x8
test rsi, rsi
je   0x80c0
mov  rbp, rsi
xor  eax, eax
xor  esi, esi
call 0x4de0
mov  rdi, rbp
mov  r12, rax
call 0x4880
mov  rdx, QWORD PTR [r12+0x18]
mov  rbp, rax
mov  rdi, QWORD PTR [rdx]
test rdi, rdi
je   0x80a8
call 0x4890
mov  rdx, QWORD PTR [r12+0x18]
mov  QWORD PTR [rdx], 0x0
mov  QWORD PTR [rdx], rbp
add  rsp, 0x8
mov  rax, r12
pop  rbp
pop  r12
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x1170]
lea  rsi, [rip+0x1972]
xor  r12d, r12d
lea  rdi, [rip+0xf4a]
call 0x4bd0
add  rsp, 0x8
mov  rax, r12
pop  rbp
pop  r12
endbr64
push r12
push rbp
sub  rsp, 0x18
mov  rax, QWORD PTR [rip+0x412e]
mov  QWORD PTR [rsp+0x8], rax
mov  rax, QWORD PTR [rsp+0x8]
test rax, rax
je   0x7f40
mov  rax, QWORD PTR [rip+0x4118]
add  rsp, 0x18
pop  rbp
pop  r12
ret
lea  rbp, [rip+0x4109]
mov  rdi, rbp
call 0x4ae0
test eax, eax
je   0x7f31
xor  ecx, ecx
lea  rdx, [rip+0x39a4]
mov  edi, 0x50
lea  rsi, [rip+0x12c6]
call 0x4e20
mov  r12, rax
call 0x4ce0
lea  rdx, [rip+0x3954]
mov  rdi, r12
mov  rsi, rax
call 0x4e70
mov  rdi, r12
mov  esi, 0x18
call 0x4a40
mov  rsi, r12
mov  rdi, rbp
mov  DWORD PTR [rip+0x40b8], eax
call 0x4ff0
mov  rax, QWORD PTR [rip+0x40a4]
add  rsp, 0x18
pop  rbp
pop  r12
endbr64
test rdi, rdi
je   0x82d0
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
call 0x4880
mov  r13, QWORD PTR [rip+0x3d82]
lea  rdi, [rip+0x793]
mov  rsi, rax
mov  rdx, r13
call 0x4ef0
mov  rdi, rbx
mov  r12, rax
call 0x4880
mov  rdx, r13
lea  rdi, [rip+0x713]
mov  rsi, rax
call 0x4ef0
mov  rdi, rbx
mov  rbp, rax
call 0x4880
mov  rdx, r13
lea  rdi, [rip+0xffffffffffffe2f6]
mov  rsi, rax
call 0x4ef0
mov  rbx, QWORD PTR [rbx+0x18]
mov  r9, r12
mov  r8, rbp
mov  rcx, rax
xor  edx, edx
mov  edi, 0x2
lea  rsi, [rip+0xf87]
call 0x4b40
mov  DWORD PTR [rbx+0x8], eax
add  rsp, 0x8
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
lea  rdx, [rip+0xde1]
lea  rsi, [rip+0x16a2]
lea  rdi, [rip+0xd3d]
endbr64
push r15
push r14
push r13
push r12
xor  r12d, r12d
push rbp
push rbx
sub  rsp, 0x48
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x38], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x20], rsi
mov  DWORD PTR [rsp+0x1c], edi
mov  QWORD PTR [rsp+0x28], 0x0
test rsi, rsi
je   0x5147
movsxd rbp, edi
test rbp, rbp
js   0x5147
mov  r13, rsi
lea  rdi, [rbp+0x1]
mov  esi, 0x8
call 0x49a0
mov  r12, rax
test rbp, rbp
je   0x5147
xor  ebx, ebx
nop
mov  rdi, QWORD PTR [r13+rbx*8+0x0]
call 0x5050
mov  QWORD PTR [r12+rbx*8], rax
add  rbx, 0x1
cmp  rbp, rbx
jne  0x5130
mov  eax, DWORD PTR [rsp+0x1c]
mov  edi, 0x6
lea  rbx, [rsp+0x28]
lea  r13, [rip+0x3ecc]
lea  rsi, [rip+0x40f1]
mov  DWORD PTR [rsp], eax
call 0x4d70
lea  rsi, [rip+0x4158]
mov  rdi, r13
call 0x4ab0
lea  rsi, [rip+0x415b]
mov  rdi, r13
call 0x4b00
mov  rdi, r13
call 0x4ee0
lea  rsi, [rsp+0x1c]
lea  rdi, [rsp+0x20]
mov  rdx, rbx
call 0x4c50
cmp  QWORD PTR [rsp+0x28], 0x0
je   0x5200
call 0x4c40
mov  rdi, QWORD PTR [rsp+0x28]
xor  edx, edx
lea  r15, [rip+0x3e64]
mov  esi, eax
call 0x4e60
test eax, eax
jne  0x55db
mov  rax, QWORD PTR [rsp+0x28]
lea  rdx, [rip+0x411a]
mov  esi, 0x4
mov  rdi, r15
mov  QWORD PTR [rsp+0x28], 0x0
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x4d00
jmp  0x51f5
nop  WORD PTR [rax+rax*1+0x0]
mov  QWORD PTR [rsp+0x30], 0x0
call 0x4a20
mov  rdi, rax
mov  rbp, rax
call 0x4cf0
call 0x4e50
mov  r14, rax
mov  rdi, rax
call 0x4cf0
test r14, r14
je   0x5236
mov  rdi, r14
call 0x4890
lea  r14, [rsp+0x30]
mov  rdi, rbp
mov  rsi, r14
call 0x4af0
cmp  QWORD PTR [rsp+0x30], 0x0
mov  r15, rax
je   0x52c0
mov  rdi, r14
call 0x4f40
mov  rdi, r14
call 0x49e0
mov  r8, QWORD PTR [rsp+0x30]
mov  r15, rax
test r8, r8
je   0x5776
mov  r15, QWORD PTR [r8+0x8]
mov  rdi, r13
mov  QWORD PTR [rsp+0x8], r8
lea  rsi, [rip+0x44fb]
mov  QWORD PTR [rsp+0x30], 0x0
call 0x4940
mov  rcx, r15
lea  r15, [rip+0x3d85]
mov  esi, 0x10
mov  rdx, rax
mov  rdi, r15
xor  eax, eax
call 0x4d00
mov  rdi, QWORD PTR [rsp+0x8]
call 0x4b20
jmp  0x5792
xchg ax, ax
mov  rdi, rax
mov  rsi, r14
call 0x4930
cmp  QWORD PTR [rsp+0x30], 0x0
mov  rdi, rax
je   0x52e8
mov  rdi, r15
call 0x49f0
jmp  0x5251
nop  DWORD PTR [rax+rax*1+0x0]
mov  QWORD PTR [rsp+0x8], rdi
call 0x4cf0
mov  rdi, QWORD PTR [rsp+0x8]
test rdi, rdi
je   0x5301
call 0x4890
mov  rdi, r15
lea  r15, [rip+0x3d17]
call 0x49f0
cmp  QWORD PTR [rsp+0x30], 0x0
je   0x5600
test rbp, rbp
je   0x5329
mov  rdi, rbp
call 0x4890
mov  rbp, QWORD PTR [rsp+0x30]
lea  r15, [rip+0x3ced]
mov  edi, DWORD PTR [rbp+0x0]
call 0x4d30
mov  edx, DWORD PTR [rbp+0x4]
mov  r9, QWORD PTR [rbp+0x8]
mov  r8d, 0x4ad
lea  rcx, [rip+0x4197]
mov  esi, 0x8
push rdx
lea  rdx, [rip+0x3fca]
push rax
mov  rdi, r15
xor  eax, eax
call 0x4d00
mov  rdi, r14
call 0x4f40
pop  rcx
pop  rsi
nop  DWORD PTR [rax+rax*1+0x0]
call 0x8a80
xor  esi, esi
mov  rdi, rax
xor  eax, eax
call 0x4de0
mov  rsi, r15
mov  rdi, r13
mov  rbp, rax
call 0x4940
mov  rdi, rax
call 0x49c0
call 0x4b70
mov  rdi, QWORD PTR [rbp+0x18]
mov  r14, rax
mov  r8, QWORD PTR [rdi+0x28]
test r8, r8
je   0x53c8
mov  rdi, r8
call 0x4890
mov  rdi, QWORD PTR [rbp+0x18]
mov  QWORD PTR [rdi+0x28], 0x0
mov  QWORD PTR [rdi+0x28], r14
call 0x4f60
mov  rdi, QWORD PTR [rbp+0x18]
mov  r14, rax
mov  r8, QWORD PTR [rdi+0x20]
test r8, r8
je   0x53f5
mov  rdi, r8
call 0x4890
mov  rdi, QWORD PTR [rbp+0x18]
mov  QWORD PTR [rdi+0x20], 0x0
mov  QWORD PTR [rdi+0x20], r14
call 0x4950
mov  rdi, QWORD PTR [rbp+0x18]
mov  r14, rax
mov  r8, QWORD PTR [rdi]
test r8, r8
je   0x5420
mov  rdi, r8
call 0x4890
mov  rdi, QWORD PTR [rbp+0x18]
mov  QWORD PTR [rdi], 0x0
mov  QWORD PTR [rdi], r14
call 0x4c80
xor  r8d, r8d
xor  r9d, r9d
xor  ecx, ecx
mov  r14, QWORD PTR [rip+0x6ba1]
mov  rsi, QWORD PTR [rip+0x6b92]
mov  rdi, rax
mov  rdx, r14
call 0x4b50
mov  rdi, QWORD PTR [rbp+0x18]
mov  r8, QWORD PTR [rdi+0x18]
test r8, r8
je   0x5474
mov  rdi, r8
mov  QWORD PTR [rsp+0x8], rax
call 0x4890
mov  rdi, QWORD PTR [rbp+0x18]
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rdi+0x18], 0x0
mov  QWORD PTR [rdi+0x18], rax
call 0x4ba0
xor  r8d, r8d
xor  r9d, r9d
xor  ecx, ecx
mov  rsi, QWORD PTR [rip+0x6b44]
mov  rdi, rax
mov  rdx, r14
call 0x4b50
mov  rdi, QWORD PTR [rbp+0x18]
mov  r8, QWORD PTR [rdi+0x10]
test r8, r8
je   0x54c2
mov  rdi, r8
mov  QWORD PTR [rsp+0x8], rax
call 0x4890
mov  rdi, QWORD PTR [rbp+0x18]
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rdi+0x10], 0x0
mov  QWORD PTR [rdi+0x10], rax
xor  esi, esi
xor  edi, edi
call 0x49b0
mov  rdi, QWORD PTR [rbp+0x18]
mov  r8, QWORD PTR [rdi+0x38]
test r8, r8
je   0x54fa
mov  rdi, r8
mov  QWORD PTR [rsp+0x8], rax
call 0x48d0
mov  rdi, QWORD PTR [rbp+0x18]
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rdi+0x38], 0x0
mov  QWORD PTR [rdi+0x38], rax
call 0x7fc0
mov  rdi, QWORD PTR [rbp+0x18]
mov  r8, QWORD PTR [rdi+0x30]
test r8, r8
je   0x552e
mov  rdi, r8
mov  QWORD PTR [rsp+0x8], rax
call 0x4890
mov  rdi, QWORD PTR [rbp+0x18]
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rdi+0x30], 0x0
mov  QWORD PTR [rdi+0x30], rax
xor  r8d, r8d
mov  rcx, rbp
lea  rdx, [rip+0x1a21]
mov  DWORD PTR [rdi+0x40], 0x0
mov  rdi, QWORD PTR [rdi]
lea  rsi, [rip+0x3d92]
call 0x4fc0
mov  rdi, rbp
call 0x4880
mov  r8, r14
mov  esi, 0x1
xor  edi, edi
mov  rcx, rax
lea  rdx, [rip+0x2bdf]
call 0x4bc0
mov  rdi, rbp
call 0x4880
mov  r8, r14
mov  esi, 0x2
xor  edi, edi
mov  rcx, rax
lea  rdx, [rip+0xe9e]
call 0x4bc0
mov  rdi, rbp
call 0x4880
xor  edi, edi
mov  r8, r14
mov  esi, 0xf
mov  rcx, rax
lea  rdx, [rip+0xeed]
call 0x4bc0
cmp  QWORD PTR [rsp+0x28], 0x0
je   0x5620
call 0x4c40
mov  rdi, QWORD PTR [rsp+0x28]
xor  edx, edx
mov  esi, eax
call 0x4e60
test eax, eax
je   0x51cd
mov  rdi, rbx
xor  r13d, r13d
call 0x4f40
movsxd rsi, DWORD PTR [rsp]
mov  rdi, r12
call 0x5a10
mov  rdi, r12
call 0x49f0
jmp  0x5730
nop
test rbp, rbp
je   0x5378
mov  rdi, rbp
call 0x4890
jmp  0x5378
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x8550
mov  rdi, rax
mov  r14, rax
call 0x8230
movsxd rax, DWORD PTR [rsp]
cmp  QWORD PTR [rsp+0x28], 0x0
mov  QWORD PTR [rsp], rax
je   0x56b8
mov  rsi, QWORD PTR [rsp]
mov  rdi, r12
call 0x5a10
mov  rdi, r12
call 0x49f0
test r14, r14
je   0x5664
mov  rdi, r14
call 0x4890
mov  rdi, rbp
or   r13d, 0xffffffff
call 0x4890
mov  rbp, QWORD PTR [rsp+0x28]
mov  edi, DWORD PTR [rbp+0x0]
call 0x4d30
mov  edx, DWORD PTR [rbp+0x4]
mov  r9, QWORD PTR [rbp+0x8]
mov  rdi, r15
mov  r8d, 0x520
lea  rcx, [rip+0x3e54]
mov  esi, 0x8
push rdx
lea  rdx, [rip+0x3c87]
push rax
xor  eax, eax
call 0x4d00
mov  rdi, rbx
call 0x4f40
pop  rax
pop  rdx
jmp  0x5730
nop  DWORD PTR [rax]
mov  rdi, r13
lea  rsi, [rip+0x3c49]
call 0x4940
lea  rcx, [rip+0x3c53]
mov  esi, 0x20
mov  rdi, r15
mov  rdx, rax
xor  eax, eax
call 0x4d00
mov  rax, QWORD PTR [rbp+0x18]
mov  rdi, QWORD PTR [rax+0x38]
call 0x4ea0
mov  rax, QWORD PTR [rbp+0x18]
mov  r13d, DWORD PTR [rax+0x40]
test r14, r14
je   0x5756
mov  rdi, r14
call 0x82f0
cmp  DWORD PTR [rbp+0x20], 0x0
jne  0x57df
mov  rsi, QWORD PTR [rsp]
mov  rdi, r12
call 0x5a10
mov  rdi, r12
call 0x49f0
mov  rdi, r14
call 0x4890
mov  rdi, rbp
call 0x4890
mov  rax, QWORD PTR [rsp+0x38]
sub  rax, QWORD PTR fs:0x28
jne  0x5801
add  rsp, 0x48
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
cmp  DWORD PTR [rbp+0x20], 0x0
jne  0x57f0
mov  rsi, QWORD PTR [rsp]
mov  rdi, r12
call 0x5a10
mov  rdi, r12
call 0x49f0
jmp  0x5728
mov  rdi, rax
call 0x4cf0
test r15, r15
je   0x578b
mov  rdi, r15
call 0x4890
lea  r15, [rip+0x3890]
cmp  QWORD PTR [rsp+0x30], 0x0
je   0x5600
test rbp, rbp
je   0x57ab
mov  rdi, rbp
call 0x4890
mov  rbp, QWORD PTR [rsp+0x30]
mov  edi, DWORD PTR [rbp+0x0]
call 0x4d30
mov  edx, DWORD PTR [rbp+0x4]
mov  r9, QWORD PTR [rbp+0x8]
mov  r8d, 0x4a5
lea  rcx, [rip+0x3d1c]
mov  esi, 0x8
push rdx
lea  rdx, [rip+0x3ea7]
push rax
jmp  0x535f
mov  rdi, QWORD PTR [r12]
mov  rsi, r12
call 0x4f80
jmp  0x570c
mov  rdi, QWORD PTR [r12]
mov  rsi, r12
call 0x4f80
jmp  0x5760
endbr64
push rbp
mov  rbp, rdi
call 0x8480
mov  rsi, rbp
pop  rbp
mov  rdi, rax
endbr64
push r14
mov  r14, rdi
mov  edi, 0x18
push r13
mov  r13, rcx
push r12
mov  r12, rdx
push rbp
mov  rbp, rsi
push rbx
call 0x5070
mov  rdi, r14
mov  rbx, rax
call 0x4880
mov  rdi, rbp
mov  QWORD PTR [rbx], rax
call 0x4880
mov  rdi, r12
mov  QWORD PTR [rbx+0x8], rax
call 0x5050
sub  rsp, 0x8
mov  r8, rbx
mov  rsi, r12
push r13
lea  rcx, [rip+0x5259]
mov  rdi, rbp
lea  rdx, [rip+0x52af]
lea  r9, [rip+0xfffffffffffff468]
mov  QWORD PTR [rbx+0x10], rax
call 0x4b60
pop  rdx
pop  rcx
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
test rdi, rdi
je   0x8130
push rbx
mov  rax, QWORD PTR [rdi+0x18]
mov  rbx, rdi
mov  rdi, QWORD PTR [rax+0x18]
mov  DWORD PTR [rax+0x40], esi
test rdi, rdi
je   0x811e
call 0x4890
mov  rax, QWORD PTR [rbx+0x18]
mov  QWORD PTR [rax+0x18], 0x0
mov  QWORD PTR [rax+0x18], 0x0
mov  rdi, QWORD PTR [rax+0x38]
pop  rbx
jmp  0x4d20
lea  rdx, [rip+0xf81]
lea  rsi, [rip+0x18f2]
lea  rdi, [rip+0xedd]
endbr64
push r12
push rbp
sub  rsp, 0x18
mov  rax, QWORD PTR [rip+0x3ba6]
mov  QWORD PTR [rsp+0x8], rax
mov  rax, QWORD PTR [rsp+0x8]
test rax, rax
je   0x84b0
mov  rax, QWORD PTR [rip+0x3b90]
add  rsp, 0x18
pop  rbp
pop  r12
ret
lea  rbp, [rip+0x3b81]
mov  rdi, rbp
call 0x4ae0
test eax, eax
je   0x84a1
xor  ecx, ecx
lea  rdx, [rip+0x33b4]
mov  edi, 0x50
lea  rsi, [rip+0xd7d]
call 0x4e20
mov  r12, rax
call 0x4ec0
lea  rdx, [rip+0x3364]
mov  rdi, r12
mov  rsi, rax
call 0x4e70
lea  rdi, [rip+0xd68]
call 0x4e30
lea  rdx, [rip+0xffffffffffffe006]
mov  rdi, r12
mov  esi, eax
call 0x4bf0
mov  rdi, r12
mov  esi, 0x10
call 0x4a40
mov  rsi, r12
mov  rdi, rbp
mov  DWORD PTR [rip+0x3b13], eax
call 0x4ff0
mov  rax, QWORD PTR [rip+0x3aff]
add  rsp, 0x18
pop  rbp
pop  r12
endbr64
push r12
push rbp
push rbx
sub  rsp, 0x10
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
xor  eax, eax
mov  QWORD PTR [rsp], 0x0
test rdi, rdi
je   0x8440
mov  rax, QWORD PTR [rdi+0x18]
mov  rbx, rdi
mov  edx, DWORD PTR [rax+0xc]
test edx, edx
jne  0x8350
mov  edi, DWORD PTR [rax+0x8]
test edi, edi
jne  0x83b0
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x846d
add  rsp, 0x10
pop  rbx
pop  rbp
pop  r12
ret
nop
mov  r12, rsp
xor  esi, esi
mov  edi, 0x2
mov  rdx, r12
call 0x4980
mov  rbp, rax
mov  rax, QWORD PTR [rsp]
test rax, rax
je   0x83c0
mov  ebp, DWORD PTR [rax]
call 0x4cc0
cmp  ebp, eax
je   0x8460
mov  rbx, QWORD PTR [rsp]
mov  edi, DWORD PTR [rbx]
call 0x4d30
mov  edx, DWORD PTR [rbx+0x4]
mov  r9, QWORD PTR [rbx+0x8]
mov  r8d, 0xfd
lea  rcx, [rip+0x10dc]
push rdx
lea  rdx, [rip+0x12dc]
push rax
jmp  0x840a
nop  WORD PTR [rax+rax*1+0x0]
call 0x4f00
jmp  0x8332
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbx+0x18]
mov  rdi, rbp
mov  esi, DWORD PTR [rax+0xc]
call 0x50b0
test rbp, rbp
je   0x83dc
mov  rdi, rbp
call 0x4890
mov  rbp, QWORD PTR [rsp]
test rbp, rbp
je   0x8430
mov  edi, DWORD PTR [rbp+0x0]
call 0x4d30
mov  edx, DWORD PTR [rbp+0x4]
mov  r9, QWORD PTR [rbp+0x8]
mov  r8d, 0x10c
lea  rcx, [rip+0x1077]
push rdx
lea  rdx, [rip+0xf1f]
push rax
mov  esi, 0x8
lea  rdi, [rip+0xc0c]
xor  eax, eax
call 0x4d00
mov  rdi, r12
call 0x4f40
pop  rcx
pop  rsi
jmp  0x8332
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rbx+0x18]
jmp  0x832b
nop  DWORD PTR [rax+0x0]
lea  rdx, [rip+0xc71]
lea  rsi, [rip+0x1512]
lea  rdi, [rip+0xbcd]
call 0x4bd0
jmp  0x8332
nop
mov  rdi, r12
call 0x4f40
jmp  0x83dc
endbr64
xor  esi, esi
xor  eax, eax
endbr64
sub  rsp, 0x8
call 0x7f10
xor  esi, esi
add  rsp, 0x8
mov  rdi, rax
xor  eax, eax
endbr64
push r12
push rbp
sub  rsp, 0x18
mov  rax, QWORD PTR [rip+0x358e]
mov  QWORD PTR [rsp+0x8], rax
mov  rax, QWORD PTR [rsp+0x8]
test rax, rax
je   0x8ab0
mov  rax, QWORD PTR [rip+0x3578]
add  rsp, 0x18
pop  rbp
pop  r12
ret
lea  rbp, [rip+0x3569]
mov  rdi, rbp
call 0x4ae0
test eax, eax
je   0x8aa1
xor  ecx, ecx
lea  rdx, [rip+0x2c94]
mov  edi, 0x50
lea  rsi, [rip+0x7e8]
call 0x4e20
mov  esi, 0x48
mov  r12, rax
mov  rdi, rax
call 0x4a40
mov  rsi, r12
mov  rdi, rbp
mov  DWORD PTR [rip+0x352f], eax
call 0x4ff0
mov  rax, QWORD PTR [rip+0x351b]
add  rsp, 0x18
pop  rbp
pop  r12
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x28
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x8], 0x0
test rdi, rdi
je   0x8968
mov  rax, QWORD PTR [rdi+0x18]
mov  rbp, rdi
lea  r13, [rsp+0x10]
mov  QWORD PTR [rsp+0x10], 0x0
mov  rsi, r13
mov  rdi, QWORD PTR [rax+0x20]
call 0x4d60
cmp  QWORD PTR [rsp+0x10], 0x0
mov  r12d, eax
je   0x87b8
mov  rdi, r13
call 0x4f40
mov  rbx, QWORD PTR [rsp+0x10]
test rbx, rbx
je   0x87ae
mov  edi, DWORD PTR [rbx]
call 0x4d30
mov  edx, DWORD PTR [rbx+0x4]
mov  r9, QWORD PTR [rbx+0x8]
mov  r8d, 0x22e
lea  rcx, [rip+0xe43]
mov  esi, 0x8
lea  rdi, [rip+0x971]
push rdx
lea  rdx, [rip+0xc6f]
push rax
xor  eax, eax
xor  ebx, ebx
call 0x4d00
mov  rdi, r13
call 0x4f40
mov  rdx, QWORD PTR [rbp+0x18]
pop  rcx
pop  rsi
mov  rdi, QWORD PTR [rdx+0x8]
test rdi, rdi
je   0x86f1
nop  WORD PTR [rax+rax*1+0x0]
call 0x4890
mov  rdx, QWORD PTR [rbp+0x18]
mov  QWORD PTR [rdx+0x8], 0x0
mov  QWORD PTR [rdx+0x8], rbx
mov  rdi, QWORD PTR [rdx]
lea  r13, [rsp+0x8]
call 0x49d0
call 0x4f60
xor  ecx, ecx
mov  r9, r13
mov  r8d, 0x7fffffff
lea  rdx, [rip+0xb8d]
lea  rsi, [rip+0xb8e]
mov  rdi, rax
mov  r12, rax
call 0x4d10
cmp  QWORD PTR [rsp+0x8], 0x0
mov  ebx, eax
je   0x88d0
test r12, r12
je   0x8746
mov  rdi, r12
call 0x4890
mov  rdi, r13
call 0x4f40
mov  r12, QWORD PTR [rsp+0x8]
test r12, r12
jne  0x88e7
mov  r12d, 0x5
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x4880
mov  r8, QWORD PTR [rip+0x3861]
lea  rdx, [rip+0xfffffffffffffa22]
xor  edi, edi
mov  rcx, rax
mov  esi, r12d
call 0x4dd0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x8987
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
xor  r12d, r12d
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rbp+0x18]
mov  rcx, r13
lea  rdx, [rip+0xaf5]
lea  rsi, [rip+0x962]
mov  rdi, QWORD PTR [rax+0x20]
call 0x4e00
cmp  QWORD PTR [rsp+0x10], 0x0
je   0x8868
mov  rdi, r13
lea  r15, [rip+0x836]
call 0x4f40
lea  rdi, [rip+0xabd]
call 0x5050
mov  esi, 0x80
lea  rdx, [rip+0xed7]
mov  rdi, r15
mov  rcx, rax
mov  r14, rax
xor  eax, eax
call 0x4d00
mov  rdi, r14
call 0x49f0
mov  rbx, QWORD PTR [rsp+0x10]
mov  esi, 0x2
test rbx, rbx
je   0x8872
mov  edi, DWORD PTR [rbx]
call 0x4d30
mov  edx, DWORD PTR [rbx+0x4]
mov  r9, QWORD PTR [rbx+0x8]
mov  rdi, r15
mov  r8d, 0x249
lea  rcx, [rip+0xc9a]
mov  esi, 0x8
push rdx
lea  rdx, [rip+0xacd]
push rax
jmp  0x86ba
nop  DWORD PTR [rax+0x0]
xor  esi, esi
test eax, eax
sete sil
add  esi, esi
mov  edx, r12d
mov  edi, 0x1
call 0x4da0
xor  r8d, r8d
mov  rcx, rbp
lea  rdx, [rip+0xffffffffffffe7f4]
mov  rbx, rax
lea  rsi, [rip+0x9ea]
mov  rdi, rax
call 0x4fc0
mov  rdi, rbx
xor  r8d, r8d
mov  rcx, rbp
lea  rdx, [rip+0xffffffffffffdf62]
lea  rsi, [rip+0x9dd]
call 0x4fc0
mov  rdx, QWORD PTR [rbp+0x18]
mov  rdi, QWORD PTR [rdx+0x8]
test rdi, rdi
jne  0x86e0
jmp  0x86f1
test r12, r12
je   0x8938
mov  rdi, r12
call 0x4890
mov  r12, QWORD PTR [rsp+0x8]
test r12, r12
je   0x8938
mov  edi, DWORD PTR [r12]
call 0x4d30
mov  edx, DWORD PTR [r12+0x4]
mov  r9, QWORD PTR [r12+0x8]
mov  r8d, 0x1c4
lea  rcx, [rip+0xbe1]
mov  esi, 0x8
lea  rdi, [rip+0x70f]
push rdx
lea  rdx, [rip+0xa0d]
push rax
xor  eax, eax
call 0x4d00
mov  rdi, r13
call 0x4f40
pop  rax
pop  rdx
jmp  0x878b
nop  WORD PTR [rax+rax*1+0x0]
mov  r12d, ebx
test ebx, ebx
jne  0x8768
lea  rdx, [rip+0xd66]
mov  esi, 0x80
lea  rdi, [rip+0x6cc]
xor  eax, eax
call 0x4d00
jmp  0x878b
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x749]
lea  rsi, [rip+0xf8a]
lea  rdi, [rip+0x6a5]
call 0x4bd0
jmp  0x878b
endbr64
test rdi, rdi
je   0x85f0
mov  DWORD PTR [rdi+0x20], 0x1
xor  esi, esi
jmp  0x80f0
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0xac1]
lea  rsi, [rip+0x1322]
lea  rdi, [rip+0xa1d]
jmp  0x4bd0
endbr64
push r14
push r13
mov  r13, rsi
push r12
mov  r12d, edi
push rbp
push rbx
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1a58
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  rbp, QWORD PTR [rip+0x5589]
call 0x1290
mov  r14, QWORD PTR [rbp+0x0]
mov  rbx, rax
mov  rcx, r14
test r12d, r12d
je   0x1b20
lea  rdi, [rip+0x2605]
mov  edx, 0x7
mov  esi, 0x1
call 0x1450
mov  edi, DWORD PTR [rbx]
test edi, edi
jne  0x1b80
mov  rdi, QWORD PTR [rbp+0x0]
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
lea  rax, [rsp+0x100]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1280
test r12d, r12d
jg   0x1ba9
mov  DWORD PTR [rbx], 0x0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1ba4
add  rsp, 0xd0
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x2579]
mov  edx, 0x9
mov  esi, 0x1
call 0x1450
mov  edi, DWORD PTR [rbx]
test edi, edi
jne  0x1b80
mov  rdi, QWORD PTR [rbp+0x0]
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
lea  rax, [rsp+0x100]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1280
jmp  0x1aea
nop  DWORD PTR [rax+rax*1+0x0]
call 0x1470
mov  rdi, QWORD PTR [rbp+0x0]
mov  esi, 0x1
lea  rdx, [rip+0x2506]
mov  rcx, rax
xor  eax, eax
call 0x1460
jmp  0x1aa7
call 0x12f0
mov  edi, r12d
call 0x1440
endbr64
push r14
mov  r14d, edx
push r13
mov  r13d, esi
push r12
mov  r12, rcx
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x180
mov  QWORD PTR [rsp+0xf0], r8
mov  QWORD PTR [rsp+0xf8], r9
test al, al
je   0x404e3
movaps XMMWORD PTR [rsp+0x100], xmm0
movaps XMMWORD PTR [rsp+0x110], xmm1
movaps XMMWORD PTR [rsp+0x120], xmm2
movaps XMMWORD PTR [rsp+0x130], xmm3
movaps XMMWORD PTR [rsp+0x140], xmm4
movaps XMMWORD PTR [rsp+0x150], xmm5
movaps XMMWORD PTR [rsp+0x160], xmm6
movaps XMMWORD PTR [rsp+0x170], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0xc8], rax
xor  eax, eax
test rbx, rbx
je   0x40650
test BYTE PTR [rbx+0x1c], 0x2
jne  0x40628
mov  rbp, QWORD PTR [rbx+0x48]
test rbp, rbp
je   0x40628
mov  rdi, rbp
call 0xa220
mov  rdi, QWORD PTR [rbx+0x40]
mov  rsi, rbp
call 0xa2e0
test r12, r12
je   0x4059d
lea  rax, [rsp+0x1b0]
mov  DWORD PTR [rsp], 0x20
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0xd0]
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rbp+0x28]
mov  DWORD PTR [rsp+0x4], 0x30
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x406e8
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x3a
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x406d0
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x20
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
mov  rdi, rbp
call 0x9e20
test r14d, r14d
je   0x405f8
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x40718
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x3a
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x40700
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x20
mov  edi, r14d
mov  rsi, rsp
mov  edx, 0xc8
call 0xa480
mov  rdi, rax
test rax, rax
je   0x40698
mov  rsi, rbp
call 0xa2e0
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x40680
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0xa
mov  rdi, rbp
call 0x9df0
test r13d, r13d
je   0x40628
test rbx, rbx
je   0x40676
test BYTE PTR [rbx+0x1c], 0x20
je   0x40676
nop  DWORD PTR [rax]
mov  rax, QWORD PTR [rsp+0xc8]
sub  rax, QWORD PTR fs:0x28
jne  0x4072a
add  rsp, 0x180
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop
mov  rax, QWORD PTR [rip+0x3b991]
mov  rbp, QWORD PTR [rax]
test rbp, rbp
je   0x40628
mov  rdi, rbp
call 0xa220
mov  rax, QWORD PTR [rip+0x3b96a]
mov  rdi, QWORD PTR [rax]
jmp  0x40522
mov  edi, r13d
call 0xa820
xchg ax, ax
mov  esi, 0xa
mov  rdi, rbp
call 0xa120
jmp  0x4060d
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, r14d
call 0xa8d0
mov  rdi, rax
test rax, rax
jne  0x405f0
mov  rax, QWORD PTR [rbx]
mov  edx, 0x5
lea  rsi, [rip+0x2b6d3]
mov  rdi, QWORD PTR [rax+0x30]
call 0xa040
mov  rdi, rax
jmp  0x405f0
nop  DWORD PTR [rax+0x0]
mov  esi, 0x20
mov  rdi, rbp
call 0xa120
jmp  0x4058a
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, rbp
call 0xa120
jmp  0x40571
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x20
mov  rdi, rbp
call 0xa120
jmp  0x405d4
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, rbp
call 0xa120
jmp  0x405bb
endbr64
mov  rax, QWORD PTR [rip+0x38bcd]
mov  edx, 0x106
mov  rsi, QWORD PTR [rax]
endbr64
mov  rax, QWORD PTR [rdi+0x8]
xor  r8d, r8d
test rax, rax
je   0x4cd32
mov  rdx, QWORD PTR [rax]
sub  rdx, rax
mov  rax, QWORD PTR [rax+0x8]
add  r8, rdx
test rax, rax
jne  0x4cd20
mov  rax, r8
endbr64
push rbp
mov  rbp, rsp
push r15
mov  r15d, ecx
push r14
mov  r14, rdi
push r13
mov  r13, rdx
push r12
push rbx
mov  ebx, esi
sub  rsp, 0x158
mov  QWORD PTR [rbp-0x180], r8
mov  QWORD PTR [rbp-0x170], r9
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x38], rax
xor  eax, eax
and  ecx, 0x1
jne  0x42337
mov  rax, QWORD PTR [rip+0x39cac]
cmp  QWORD PTR [rax], 0x0
je   0x42f39
mov  rdi, QWORD PTR [rip+0x39cab]
cmp  QWORD PTR [rdi], 0x0
je   0x42f50
mov  eax, r15d
and  eax, 0x4
sete sil
mov  DWORD PTR [rbp-0x174], eax
movzx  esi, sil
test r15b, 0x10
je   0x423a0
mov  QWORD PTR [rbp-0x150], rsi
mov  QWORD PTR [rbp-0x148], 0x0
mov  QWORD PTR [rbp-0x140], 0x0
mov  QWORD PTR [rbp-0x138], 0x0
test r14, r14
jne  0x4249c
mov  r12d, 0x68
mov  r8d, 0x48
xor  r9d, r9d
mov  ecx, 0x48
jmp  0x424ec
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, rsp
cmp  rsp, rax
je   0x423bd
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rax
jne  0x423a8
sub  rsp, 0x90
or   QWORD PTR [rsp+0x88], 0x0
lea  rdx, [rsp+0xf]
mov  rax, rsp
and  rdx, 0xfffffffffffffff0
cmp  rsp, rax
je   0x423f3
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rax
jne  0x423de
sub  rsp, 0x40
or   QWORD PTR [rsp+0x38], 0x0
pxor xmm0, xmm0
xor  eax, eax
mov  ecx, 0x10
lea  r8, [rsp+0xf]
mov  rdi, rdx
rep stos QWORD PTR es:[rdi], rax
and  r8, 0xfffffffffffffff0
mov  rax, rdx
movaps XMMWORD PTR [r8+0x20], xmm0
mov  QWORD PTR [r8+0x30], 0x0
mov  QWORD PTR [r8+0x20], rdx
movaps XMMWORD PTR [r8], xmm0
movaps XMMWORD PTR [r8+0x10], xmm0
test r14, r14
je   0x42440
mov  QWORD PTR [rdx], r14
add  rax, 0x20
lea  rdx, [rip+0x3d861]
lea  rcx, [rip+0x38eb2]
mov  QWORD PTR [rax], rcx
cmp  QWORD PTR [rdx], 0x0
je   0x43360
lea  rcx, [rip+0x38e5e]
lea  rdx, [rax+0x40]
mov  QWORD PTR [rax+0x20], rcx
mov  QWORD PTR [rdx], 0x0
mov  r14, r8
mov  QWORD PTR [rbp-0x150], rsi
mov  QWORD PTR [rbp-0x148], 0x0
mov  QWORD PTR [rbp-0x140], 0x0
mov  QWORD PTR [rbp-0x138], 0x0
lea  rsi, [rbp-0x150]
mov  rdi, r14
call 0x38320
mov  rax, QWORD PTR [rbp-0x140]
mov  rsi, QWORD PTR [rbp-0x150]
lea  rdi, [rax+rax*8+0x9]
mov  rax, QWORD PTR [rbp-0x138]
lea  rcx, [rdi*8+0x0]
lea  r9, [rax*8+0x0]
mov  rax, QWORD PTR [rbp-0x148]
lea  r8, [rcx+r9*1]
lea  rdx, [rax+0x1]
shl  rdx, 0x5
lea  r12, [rdx+r8*1]
lea  rdi, [r12+rsi*1+0x1]
mov  QWORD PTR [rbp-0x168], r9
mov  QWORD PTR [rbp-0x160], r8
mov  QWORD PTR [rbp-0x158], rcx
call 0xa4a0
mov  rcx, QWORD PTR [rbp-0x158]
mov  r8, QWORD PTR [rbp-0x160]
test rax, rax
mov  QWORD PTR [rbp-0x40], rax
mov  r9, QWORD PTR [rbp-0x168]
je   0x433c6
add  r8, rax
lea  rdi, [rax+rcx*1]
add  r12, rax
mov  rdx, r9
mov  QWORD PTR [rbp-0xc0], rax
xor  esi, esi
48 b8 01 00 00 00 01 00 00 00 movabs rax, 0x100000001
mov  QWORD PTR [rbp-0x100], r8
mov  QWORD PTR [rbp-0x158], r8
mov  QWORD PTR [rbp-0xb0], rdi
mov  QWORD PTR [rbp-0x108], r12
mov  QWORD PTR [rbp-0xf8], rax
mov  DWORD PTR [rbp-0xf0], 0x0
mov  QWORD PTR [rbp-0xe8], 0x0
mov  DWORD PTR [rbp-0xe0], 0x0
mov  QWORD PTR [rbp-0xd8], 0x0
mov  QWORD PTR [rbp-0xd0], 0x0
mov  DWORD PTR [rbp-0xc8], 0x0
call 0xa1b0
mov  r8, QWORD PTR [rbp-0x158]
lea  r9, [rbp-0x110]
mov  QWORD PTR [rbp-0x128], r12
mov  QWORD PTR [rbp-0x130], r9
mov  QWORD PTR [rbp-0x120], r8
mov  QWORD PTR [rbp-0x118], rax
test r15b, 0x8
jne  0x429f8
mov  edx, DWORD PTR [rbp-0x174]
mov  rax, r12
test edx, edx
je   0x42605
add  rax, 0x1
mov  BYTE PTR [r12], 0x2b
mov  QWORD PTR [rbp-0x128], rax
mov  BYTE PTR [rax], 0x0
mov  rax, QWORD PTR [rbp-0x120]
mov  QWORD PTR [rax], 0x0
mov  QWORD PTR [rbp-0x110], r14
test r14, r14
je   0x42c40
mov  rcx, QWORD PTR [rbp-0xc0]
xor  edx, edx
xor  esi, esi
mov  rdi, r14
lea  r8, [rbp-0x130]
mov  QWORD PTR [rbp-0x158], r9
call 0x38d20
mov  rcx, QWORD PTR [rbp-0x110]
mov  r9, QWORD PTR [rbp-0x158]
pxor xmm0, xmm0
mov  rdx, QWORD PTR [rbp-0xc0]
0f 11 85 68 ff ff ff  movups XMMWORD PTR [rbp-0x98], xmm0
mov  QWORD PTR [rbp-0xa0], rcx
mov  rcx, QWORD PTR [rip+0x39973]
0f 11 85 78 ff ff ff  movups XMMWORD PTR [rbp-0x88], xmm0
mov  rcx, QWORD PTR [rcx]
mov  QWORD PTR [rbp-0xb8], rax
mov  DWORD PTR [rbp-0x98], ebx
mov  QWORD PTR [rbp-0x58], rcx
mov  rcx, QWORD PTR [rip+0x39909]
mov  QWORD PTR [rbp-0x90], r13
mov  rcx, QWORD PTR [rcx]
mov  QWORD PTR [rbp-0x48], r9
mov  DWORD PTR [rbp-0x84], r15d
mov  QWORD PTR [rbp-0x50], rcx
mov  DWORD PTR [rbp-0xa8], 0x1
movups XMMWORD PTR [rbp-0x78], xmm0
movups XMMWORD PTR [rbp-0x68], xmm0
cmp  rax, rdx
jbe  0x42cb1
mov  rax, QWORD PTR [rbp-0x170]
lea  rbx, [rdx+0x48]
lea  r12, [rbp-0xa0]
mov  QWORD PTR [rdx+0x30], rax
jmp  0x4273d
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, QWORD PTR [rbx-0x8]
xor  esi, esi
mov  edi, 0x1000003
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx-0x18]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx-0x10]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx-0x30]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx-0x8], rax
cmp  QWORD PTR [rbp-0xb8], rbx
jbe  0x42d30
test r15d, r15d
je   0x42739
cmp  r15d, 0x7
jne  0x429cd
add  rbx, 0x48
mov  rax, QWORD PTR [rbx-0x28]
test rax, rax
je   0x42755
mov  rax, QWORD PTR [rax+0x38]
mov  edx, DWORD PTR [rbx-0x20]
mov  rax, QWORD PTR [rax+rdx*8]
mov  QWORD PTR [rbx-0x18], rax
mov  rax, QWORD PTR [rbx-0x48]
test rax, rax
jne  0x426e8
mov  rax, QWORD PTR [rbx-0x40]
mov  rax, QWORD PTR [rax+0x20]
test rax, rax
je   0x42790
cmp  QWORD PTR [rax], 0x0
je   0x42790
mov  rax, QWORD PTR [rbx-0x10]
mov  rdx, QWORD PTR [rbx-0x18]
mov  QWORD PTR [rax], rdx
mov  rax, QWORD PTR [rbx-0x48]
test rax, rax
jne  0x426e8
nop  DWORD PTR [rax+0x0]
cmp  rbx, QWORD PTR [rbp-0xb8]
jb   0x42739
nop  DWORD PTR [rax+0x0]
mov  r15d, DWORD PTR [rbp-0x84]
mov  rax, QWORD PTR [rbp-0x90]
mov  ebx, DWORD PTR [rbp-0x98]
test r15b, 0x2
je   0x42cbe
mov  DWORD PTR [rbp-0xf4], 0x0
and  r15d, 0x1
jne  0x42f20
cmp  r13, rax
je   0x42cd1
mov  rax, QWORD PTR [rip+0x397f6]
mov  rdx, QWORD PTR [rax]
mov  eax, DWORD PTR [rbp-0x88]
mov  QWORD PTR [rbp-0x60], rdx
mov  edx, DWORD PTR [rbp-0xa8]
mov  DWORD PTR [rbp-0x158], eax
mov  eax, DWORD PTR [rbp-0x7c]
test eax, eax
je   0x42811
cmp  eax, DWORD PTR [rbp-0x158]
jle  0x42819
mov  DWORD PTR [rbp-0x7c], 0x0
test edx, edx
jne  0x42ad0
48 63 85 a8 fe ff ff  movsxd rax, DWORD PTR [rbp-0x158]
cmp  ebx, eax
jle  0x42b90
test BYTE PTR [rbp-0x84], 0x4
jne  0x42da0
mov  rdx, QWORD PTR [rbp-0x90]
mov  r13, QWORD PTR [rdx+rax*8]
mov  QWORD PTR [rbp-0xe8], r13
mov  edx, DWORD PTR [rbp-0x158]
mov  r12, QWORD PTR [rbp-0xc0]
mov  DWORD PTR [rbp-0x88], edx
cmp  QWORD PTR [rbp-0xb8], r12
jbe  0x42b77
lea  rbx, [rbp-0xa0]
xchg ax, ax
lea  eax, [rdx+0x1]
mov  DWORD PTR [rbp-0x88], eax
mov  rax, QWORD PTR [r12]
test rax, rax
je   0x42b60
mov  rdx, QWORD PTR [r12+0x40]
mov  rsi, r13
xor  edi, edi
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, rbx
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x40], rax
cmp  r15d, 0x7
je   0x42a10
lea  r14, [r12+0x48]
test r15d, r15d
je   0x42a98
cmp  r15d, 0x7
je   0x42fb3
mov  rbx, QWORD PTR [rbp-0xb8]
mov  r12, QWORD PTR [rbp-0xc0]
cmp  r12, rbx
jae  0x42958
lea  r13, [rbp-0xa0]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [r12]
test rax, rax
je   0x42948
mov  rdx, QWORD PTR [r12+0x40]
xor  esi, esi
mov  edi, 0x1000005
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r13
call rax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x40], rax
mov  rbx, QWORD PTR [rbp-0xb8]
add  r12, 0x48
cmp  r12, rbx
jb   0x42900
mov  r12, QWORD PTR [rbp-0xc0]
sub  rbx, 0x48
cmp  rbx, r12
jb   0x429b7
lea  r12, [rbp-0xa0]
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x429aa
mov  rdx, QWORD PTR [rbx+0x40]
xor  esi, esi
mov  edi, 0x1000007
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx+0x40], rax
sub  rbx, 0x48
cmp  rbx, QWORD PTR [rbp-0xc0]
jae  0x42970
cmp  r15d, 0x7
mov  eax, 0x16
cmove  r15d, eax
mov  rdi, QWORD PTR [rbp-0x40]
call 0x9ce0
mov  rax, QWORD PTR [rbp-0x38]
sub  rax, QWORD PTR fs:0x28
jne  0x433d1
lea  rsp, [rbp-0x28]
mov  eax, r15d
pop  rbx
pop  r12
pop  r13
pop  r14
pop  r15
pop  rbp
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rax, [r12+0x1]
mov  BYTE PTR [r12], 0x2d
mov  QWORD PTR [rbp-0x128], rax
jmp  0x42605
xchg ax, ax
mov  eax, DWORD PTR [rbp-0x88]
mov  r8, QWORD PTR [r12]
lea  r14, [r12+0x48]
lea  edx, [rax-0x1]
mov  DWORD PTR [rbp-0x88], edx
test r8, r8
je   0x433d6
mov  rax, QWORD PTR [r12+0x40]
mov  rdx, rbx
xor  esi, esi
mov  edi, 0x1000006
mov  QWORD PTR [rbp-0x68], rax
mov  rax, QWORD PTR [r12+0x30]
mov  QWORD PTR [rbp-0x78], rax
mov  rax, QWORD PTR [r12+0x38]
mov  QWORD PTR [rbp-0x70], rax
mov  eax, DWORD PTR [r12+0x18]
mov  DWORD PTR [rbp-0x80], eax
call r8
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x40], rax
cmp  QWORD PTR [rbp-0xb8], r14
jbe  0x433de
cmp  r15d, 0x7
jne  0x433de
mov  edx, DWORD PTR [rbp-0x88]
mov  r12, r14
jmp  0x42870
nop  WORD PTR [rax+rax*1+0x0]
mov  ebx, DWORD PTR [rbp-0x98]
mov  eax, DWORD PTR [rbp-0x88]
mov  ecx, DWORD PTR [rbp-0x158]
cmp  eax, ecx
jle  0x42c00
mov  edx, eax
mov  DWORD PTR [rbp-0x158], eax
sub  edx, ecx
add  DWORD PTR [r14-0x30], edx
mov  edx, DWORD PTR [rbp-0xa8]
jmp  0x427fb
nop  DWORD PTR [rax+rax*1+0x0]
mov  eax, DWORD PTR [rbp-0x158]
mov  rcx, QWORD PTR [rbp-0x100]
mov  DWORD PTR [rbp-0xf0], 0xffffffff
mov  rdx, QWORD PTR [rbp-0x108]
mov  rsi, QWORD PTR [rbp-0x90]
mov  DWORD PTR [rbp-0xf8], eax
test BYTE PTR [rbp-0x84], 0x40
je   0x42c20
mov  edi, ebx
lea  r9, [rbp-0xf8]
mov  r8d, 0x1
call 0x58da0
mov  ebx, eax
mov  eax, DWORD PTR [rbp-0xf8]
mov  DWORD PTR [rbp-0x158], eax
mov  DWORD PTR [rbp-0x88], eax
cmp  ebx, 0xffffffff
je   0x42d50
cmp  ebx, 0x3f
je   0x42e60
cmp  ebx, 0x1
jne  0x430ab
sub  DWORD PTR [rbp-0x158], 0x1
mov  r13, QWORD PTR [rbp-0xe8]
jmp  0x42847
xchg ax, ax
mov  DWORD PTR [rbp-0x88], edx
add  r12, 0x48
cmp  QWORD PTR [rbp-0xb8], r12
ja   0x42870
mov  eax, DWORD PTR [rbp-0x88]
mov  ebx, DWORD PTR [rbp-0x98]
mov  DWORD PTR [rbp-0x158], eax
nop  DWORD PTR [rax+0x0]
cmp  DWORD PTR [rbp-0x158], ebx
jne  0x42da0
mov  r13, QWORD PTR [rbp-0xc0]
mov  rbx, QWORD PTR [rbp-0xb8]
cmp  r13, rbx
jae  0x4337a
xor  r15d, r15d
lea  r12, [rbp-0xa0]
nop  DWORD PTR [rax]
mov  eax, DWORD PTR [r13+0x18]
add  r13, 0x48
test eax, eax
je   0x43170
cmp  rbx, r13
jbe  0x43259
test r15d, r15d
je   0x42bc0
cmp  r15d, 0x7
je   0x42bc0
cmp  QWORD PTR [rbp-0x180], 0x0
jne  0x432f4
jmp  0x428e8
nop  WORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rbp-0xa8], 0x1
mov  edx, 0x1
mov  DWORD PTR [rbp-0x158], eax
jmp  0x427fb
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, ebx
lea  r9, [rbp-0xf8]
xor  r8d, r8d
call 0x58da0
mov  ebx, eax
jmp  0x42b1e
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbp-0xc0]
pxor xmm0, xmm0
mov  QWORD PTR [rbp-0x48], r9
0f 11 85 68 ff ff ff  movups XMMWORD PTR [rbp-0x98], xmm0
mov  QWORD PTR [rbp-0xb8], rax
mov  rax, QWORD PTR [rip+0x39384]
0f 11 85 78 ff ff ff  movups XMMWORD PTR [rbp-0x88], xmm0
mov  rax, QWORD PTR [rax]
mov  DWORD PTR [rbp-0x98], ebx
mov  QWORD PTR [rbp-0xa0], 0x0
mov  QWORD PTR [rbp-0x58], rax
mov  rax, QWORD PTR [rip+0x39316]
mov  QWORD PTR [rbp-0x90], r13
mov  rax, QWORD PTR [rax]
mov  DWORD PTR [rbp-0x84], r15d
mov  DWORD PTR [rbp-0xa8], 0x1
mov  QWORD PTR [rbp-0x50], rax
movups XMMWORD PTR [rbp-0x78], xmm0
movups XMMWORD PTR [rbp-0x68], xmm0
mov  rax, r13
test r15b, 0x2
jne  0x427be
mov  DWORD PTR [rbp-0xf4], 0x1
cmp  r13, rax
jne  0x427db
mov  rdx, QWORD PTR [r13+0x0]
test rdx, rdx
je   0x427db
movzx  eax, BYTE PTR [rdx]
cmp  al, 0x2f
jne  0x42cf4
nop  DWORD PTR [rax]
movzx  eax, BYTE PTR [rdx+0x1]
add  rdx, 0x1
cmp  al, 0x2f
je   0x42ce8
test al, al
je   0x427e5
mov  rcx, rdx
xor  esi, esi
jmp  0x42d22
nop  DWORD PTR [rax+rax*1+0x0]
test sil, sil
je   0x42d12
mov  rdx, rcx
xor  esi, esi
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
test al, al
je   0x427e5
cmp  al, 0x2f
jne  0x42d08
mov  esi, 0x1
jmp  0x42d12
nop  DWORD PTR [rax]
cmp  r15d, 0x7
je   0x427a0
test r15d, r15d
je   0x427a0
jmp  0x429cd
nop  DWORD PTR [rax+rax*1+0x0]
mov  DWORD PTR [rbp-0xa8], 0x0
mov  ebx, DWORD PTR [rbp-0x98]
mov  ecx, eax
cmp  eax, 0x1
jle  0x42819
mov  rdx, QWORD PTR [rbp-0x90]
cdqe
mov  rax, QWORD PTR [rdx+rax*8-0x8]
cmp  BYTE PTR [rax], 0x2d
jne  0x42819
cmp  BYTE PTR [rax+0x1], 0x2d
jne  0x42819
cmp  BYTE PTR [rax+0x2], 0x0
jne  0x42819
mov  DWORD PTR [rbp-0x7c], ecx
jmp  0x42819
xchg ax, ax
mov  rax, QWORD PTR [rbp-0x180]
test rax, rax
je   0x42fd6
mov  ecx, DWORD PTR [rbp-0x158]
mov  rbx, QWORD PTR [rbp-0xb8]
mov  DWORD PTR [rax], ecx
sub  rbx, 0x48
lea  r12, [rbp-0xa0]
cmp  rbx, QWORD PTR [rbp-0xc0]
jb   0x430a3
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbx]
test rax, rax
je   0x43078
mov  rdx, QWORD PTR [rbx+0x40]
xor  esi, esi
mov  edi, 0x1000004
sub  rbx, 0x48
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [rbx+0x78]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [rbx+0x80]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [rbx+0x60]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [rbx+0x88], rax
mov  rax, QWORD PTR [rbp-0xc0]
cmp  rbx, rax
jb   0x431bf
test r15d, r15d
je   0x42de0
cmp  r15d, 0x7
je   0x42de0
mov  rcx, QWORD PTR [rbp-0xb8]
lea  rbx, [rcx-0x48]
cmp  rbx, rax
jae  0x42961
jmp  0x429c4
nop
cmp  DWORD PTR [rbp-0xf0], 0xffffffff
jne  0x42fb3
mov  r14, QWORD PTR [rbp-0xe8]
mov  rdi, QWORD PTR [rbp-0x108]
mov  esi, ebx
call 0xa0f0
test rax, rax
je   0x4302a
mov  r12, QWORD PTR [rbp-0xc0]
mov  rdx, QWORD PTR [rbp-0xb8]
cmp  r12, rdx
jb   0x42eb5
jmp  0x4302a
nop  DWORD PTR [rax+rax*1+0x0]
add  r12, 0x48
cmp  r12, rdx
jae  0x4302a
cmp  rax, QWORD PTR [r12+0x10]
jae  0x42ea8
mov  rax, QWORD PTR [r12]
test rax, rax
je   0x4302a
mov  rdx, QWORD PTR [r12+0x40]
lea  r13, [rbp-0xa0]
mov  rsi, r14
mov  edi, ebx
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r13
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x40], rax
cmp  r15d, 0x7
jne  0x43140
jmp  0x43031
nop  DWORD PTR [rax+rax*1+0x0]
sub  rax, 0x8
add  ebx, 0x1
mov  QWORD PTR [rbp-0x90], rax
mov  DWORD PTR [rbp-0x98], ebx
jmp  0x427d2
mov  rdi, QWORD PTR [rip+0x39098]
mov  rdx, QWORD PTR [rdx]
cmp  QWORD PTR [rdi], 0x0
mov  QWORD PTR [rax], rdx
jne  0x42337
mov  rdx, QWORD PTR [r13+0x0]
movzx  eax, BYTE PTR [rdx]
cmp  al, 0x2f
jne  0x42f6c
nop  DWORD PTR [rax+rax*1+0x0]
movzx  eax, BYTE PTR [rdx+0x1]
add  rdx, 0x1
cmp  al, 0x2f
je   0x42f60
test al, al
je   0x42fab
mov  rcx, rdx
xor  esi, esi
jmp  0x42f96
nop  WORD PTR [rax+rax*1+0x0]
test sil, sil
je   0x42f8a
mov  rdx, rcx
xor  esi, esi
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
test al, al
je   0x42fab
cmp  al, 0x2f
jne  0x42f80
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
mov  esi, 0x1
test al, al
jne  0x42f96
mov  QWORD PTR [rdi], rdx
jmp  0x42337
mov  rsi, QWORD PTR [rbp-0x58]
lea  r13, [rbp-0xa0]
mov  edx, 0x104
mov  rdi, r13
mov  r15d, 0x7
call 0x41df0
jmp  0x428e1
mov  rsi, QWORD PTR [rbp-0x58]
lea  r13, [rbp-0xa0]
test BYTE PTR [rbp-0x84], 0x2
jne  0x42fbe
test rsi, rsi
je   0x42fbe
mov  rax, QWORD PTR [rbp-0x110]
mov  r12, QWORD PTR [rbp-0x60]
mov  edx, 0x5
lea  rsi, [rip+0x28e2e]
mov  rdi, QWORD PTR [rax+0x30]
call 0xa040
mov  rdi, QWORD PTR [rbp-0x58]
mov  rcx, r12
mov  esi, 0x1
mov  rdx, rax
xor  eax, eax
call 0xa840
jmp  0x4323c
lea  r13, [rbp-0xa0]
mov  rax, QWORD PTR [rbp-0x110]
mov  edx, 0x5
lea  rsi, [rip+0x290fc]
mov  rdi, QWORD PTR [rax+0x30]
call 0xa040
mov  edx, ebx
lea  rsi, [rip+0x28dcd]
mov  rdi, r13
mov  rcx, rax
xor  eax, eax
call 0x41e90
cmp  ebx, 0x1
je   0x42b77
jmp  0x4323c
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rbp-0xc0]
sub  rbx, 0x48
cmp  rbx, rax
jae  0x42de0
mov  rcx, QWORD PTR [rbp-0xb8]
xor  r15d, r15d
lea  rbx, [rcx-0x48]
cmp  rbx, rax
jae  0x42961
xor  r15d, r15d
jmp  0x429c4
mov  eax, ebx
mov  r14, QWORD PTR [rbp-0xe8]
sar  eax, 0x18
je   0x42e74
mov  edx, ebx
mov  ecx, 0xff000000
cdqe
and  edx, 0x800000
cmovne edx, ecx
mov  ecx, ebx
and  ecx, 0xffffff
or   ecx, edx
lea  rdx, [rax+rax*8]
mov  rax, QWORD PTR [rbp-0xc0]
mov  edi, ecx
lea  r12, [rax+rdx*8-0x48]
mov  rax, QWORD PTR [r12]
test rax, rax
je   0x431ce
mov  rdx, QWORD PTR [r12+0x40]
lea  r13, [rbp-0xa0]
mov  rsi, r14
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x30]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x38]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x18]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, r13
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x40], rax
cmp  r15d, 0x7
je   0x431d5
test r15d, r15d
jne  0x428d7
mov  eax, DWORD PTR [rbp-0x88]
mov  edx, DWORD PTR [rbp-0xa8]
mov  ebx, DWORD PTR [rbp-0x98]
mov  DWORD PTR [rbp-0x158], eax
jmp  0x427fb
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [r13-0x48]
test rax, rax
je   0x43245
mov  rdx, QWORD PTR [r13-0x8]
xor  esi, esi
mov  edi, 0x1000002
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r13-0x18]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r13-0x10]
mov  DWORD PTR [rbp-0x80], 0x0
mov  QWORD PTR [rbp-0x70], rdx
mov  rdx, r12
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r13-0x8], rax
mov  rbx, QWORD PTR [rbp-0xb8]
jmp  0x42bd0
cmp  r15d, 0x7
je   0x4308c
jmp  0x42e46
lea  r13, [rbp-0xa0]
mov  r12, QWORD PTR [rbp-0x100]
cmp  ebx, DWORD PTR [r12+0x18]
jne  0x431f3
jmp  0x431fa
nop  DWORD PTR [rax]
add  r12, 0x20
cmp  ebx, DWORD PTR [r12+0x18]
je   0x431fa
cmp  QWORD PTR [r12], 0x0
jne  0x431e8
mov  rax, QWORD PTR [rbp-0x110]
mov  edx, 0x5
lea  rsi, [rip+0x28f33]
mov  rdi, QWORD PTR [rax+0x30]
call 0xa040
mov  rdx, QWORD PTR [r12]
lea  rsi, [rip+0x28c0a]
mov  rdi, r13
mov  rcx, rax
lea  rax, [rip+0x28bf1]
test rdx, rdx
cmove  rdx, rax
xor  eax, eax
call 0x41e90
mov  rsi, QWORD PTR [rbp-0x58]
jmp  0x42fbe
cmp  r13, rbx
jae  0x433b0
mov  r15d, 0x7
jmp  0x42bc0
lea  r12, [rbx-0x48]
cmp  r12, QWORD PTR [rbp-0xc0]
jb   0x4334d
cmp  r15d, 0x7
je   0x43279
test r15d, r15d
jne  0x42be4
lea  rbx, [rbp-0xa0]
mov  rax, QWORD PTR [r12]
test rax, rax
je   0x43318
mov  rdx, QWORD PTR [r12+0x40]
xor  esi, esi
mov  edi, 0x1000001
sub  r12, 0x48
mov  QWORD PTR [rbp-0x68], rdx
mov  rdx, QWORD PTR [r12+0x78]
mov  QWORD PTR [rbp-0x78], rdx
mov  rdx, QWORD PTR [r12+0x80]
mov  QWORD PTR [rbp-0x70], rdx
mov  edx, DWORD PTR [r12+0x60]
mov  DWORD PTR [rbp-0x80], edx
mov  rdx, rbx
call rax
mov  r15d, eax
mov  rax, QWORD PTR [rbp-0x68]
mov  QWORD PTR [r12+0x88], rax
cmp  r12, QWORD PTR [rbp-0xc0]
jb   0x4334d
test r15d, r15d
je   0x43280
cmp  r15d, 0x7
je   0x43280
cmp  QWORD PTR [rbp-0x180], 0x0
je   0x428e1
mov  eax, DWORD PTR [rbp-0x88]
mov  rcx, QWORD PTR [rbp-0x180]
mov  DWORD PTR [rcx], eax
test r15d, r15d
jne  0x428d7
mov  rbx, QWORD PTR [rbp-0xb8]
jmp  0x42dbf
sub  r12, 0x48
cmp  r12, QWORD PTR [rbp-0xc0]
jae  0x43280
mov  rbx, QWORD PTR [rbp-0xb8]
mov  rcx, QWORD PTR [rbp-0x180]
test rcx, rcx
je   0x42dbf
mov  eax, DWORD PTR [rbp-0x88]
mov  DWORD PTR [rcx], eax
jmp  0x42dbf
cmp  r15d, 0x7
je   0x43329
cmp  QWORD PTR [rbp-0x180], 0x0
je   0x43303
jmp  0x432f4
nop
lea  rdx, [rip+0x3c871]
cmp  QWORD PTR [rdx], 0x0
jne  0x4245b
lea  rdx, [rax+0x20]
jmp  0x4246a
lea  r12, [rbx-0x48]
cmp  r12, r13
jae  0x43279
cmp  QWORD PTR [rbp-0x180], 0x0
je   0x430a3
mov  eax, DWORD PTR [rbp-0x88]
mov  rcx, QWORD PTR [rbp-0x180]
mov  DWORD PTR [rcx], eax
jmp  0x42dbf
nop  DWORD PTR [rax+0x0]
lea  r12, [rbx-0x48]
cmp  QWORD PTR [rbp-0xc0], r12
jbe  0x43279
jmp  0x43330
mov  r15d, 0xc
jmp  0x429cd
call 0xa0a0
mov  r12, r14
jmp  0x42b6a
test r15d, r15d
jne  0x433f6
mov  eax, DWORD PTR [rbp-0x98]
mov  DWORD PTR [rbp-0x88], eax
mov  ebx, eax
jmp  0x42aa4
cmp  r15d, 0x7
je   0x42b77
endbr64
and  BYTE PTR [rdi+0x50], 0xfe
mov  QWORD PTR [rdi+0x38], rcx
mov  QWORD PTR [rdi+0x40], r8
endbr64
push r12
mov  r12, rsi
push rbp
push rbx
mov  rsi, QWORD PTR [rdi+0x8]
mov  rbx, rdi
test rsi, rsi
jne  0x4ccb2
jmp  0x4ccdb
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx+0x48]
call rax
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
je   0x4ccdb
mov  rsi, rbp
cmp  rsi, r12
jae  0x4ccbf
mov  rax, QWORD PTR [rsi]
cmp  rax, r12
jae  0x4ccf0
mov  rbp, QWORD PTR [rsi+0x8]
mov  rax, QWORD PTR [rbx+0x40]
test BYTE PTR [rbx+0x50], 0x1
jne  0x4cca0
mov  rdi, rsi
call rax
or   BYTE PTR [rbx+0x50], 0x2
test rbp, rbp
jne  0x4ccaf
test r12, r12
jne  0xaadb
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rbx+0x18], r12
mov  QWORD PTR [rbx+0x10], r12
mov  QWORD PTR [rbx+0x20], rax
mov  QWORD PTR [rbx+0x8], rsi
pop  rbx
pop  rbp
pop  r12
endbr64
push rbp
mov  ebp, edx
push rbx
sub  rsp, 0x8
test rdi, rdi
je   0x41e50
mov  eax, DWORD PTR [rdi+0x1c]
mov  rbx, rdi
test al, 0x2
jne  0x41e42
test rsi, rsi
je   0x41e42
or   dl, 0x80
test al, 0x40
mov  r8, QWORD PTR [rdi+0x40]
cmovne ebp, edx
mov  rdx, rsi
mov  rsi, rdi
mov  rdi, QWORD PTR [rdi]
mov  ecx, ebp
call 0x40730
test BYTE PTR [rbx+0x1c], 0x20
jne  0x41e42
test ebp, 0x100
jne  0x41e77
and  ebp, 0x200
jne  0x41e70
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+0x0]
test rsi, rsi
je   0x41e42
mov  rax, QWORD PTR [rip+0x3a17c]
mov  rdx, rsi
mov  ecx, ebp
xor  esi, esi
xor  edi, edi
mov  r8, QWORD PTR [rax]
call 0x40730
jmp  0x41e32
nop
xor  edi, edi
call 0xa820
lea  rax, [rip+0x3ce42]
mov  edi, DWORD PTR [rax]
endbr64
mov  rax, QWORD PTR [rdi+0x8]
test rax, rax
je   0x4cc76
nop  DWORD PTR [rax]
cmp  rsi, rax
jbe  0x4cc5a
cmp  QWORD PTR [rax], rsi
jae  0x4cc70
mov  rax, QWORD PTR [rax+0x8]
test rax, rax
jne  0x4cc50
xor  eax, eax
ret
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  eax, 0x1
ret
endbr64
or   BYTE PTR [rdi+0x50], 0x1
mov  QWORD PTR [rdi+0x38], rcx
mov  QWORD PTR [rdi+0x40], r8
mov  QWORD PTR [rdi+0x48], r9
endbr64
push r13
mov  r13, rsi
push r12
mov  r12, rdi
push rbp
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x41ef5
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
test r12, r12
je   0x42000
test BYTE PTR [r12+0x1c], 0x2
jne  0x41fd9
mov  rbp, QWORD PTR [r12+0x48]
test rbp, rbp
je   0x41fd9
mov  rdi, rbp
call 0xa220
lea  rax, [rsp+0xf0]
mov  rdi, QWORD PTR [r12+0x40]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
mov  rsi, rbp
call 0xa2e0
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x42068
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x3a
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x42080
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0x20
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
mov  rdi, rbp
call 0x9e20
mov  rax, QWORD PTR [rbp+0x28]
cmp  rax, QWORD PTR [rbp+0x30]
jae  0x42050
lea  rdx, [rax+0x1]
mov  QWORD PTR [rbp+0x28], rdx
mov  BYTE PTR [rax], 0xa
mov  rdi, r12
mov  edx, 0x104
mov  rsi, rbp
call 0x41df0
mov  rdi, rbp
call 0x9df0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x42092
add  rsp, 0xd0
pop  rbp
pop  r12
pop  r13
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rip+0x39fe1]
mov  rbp, QWORD PTR [rax]
test rbp, rbp
je   0x41fd9
mov  rdi, rbp
call 0xa220
lea  rax, [rsp+0xf0]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rip+0x39f9c]
mov  DWORD PTR [rsp+0x4], 0x30
mov  rdi, QWORD PTR [rax]
jmp  0x41f5b
nop  DWORD PTR [rax+0x0]
mov  esi, 0xa
mov  rdi, rbp
call 0xa120
jmp  0x41fc1
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x3a
mov  rdi, rbp
call 0xa120
jmp  0x41f7c
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0x20
mov  rdi, rbp
call 0xa120
jmp  0x41f95
endbr64
push r14
xor  ecx, ecx
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
mov  r13, QWORD PTR [rdi+0x18]
sub  r13, QWORD PTR [rdi+0x10]
mov  rdx, QWORD PTR [rbx]
add  rsi, r13
mov  rax, r13
mov  rbp, QWORD PTR [rdi+0x8]
setb cl
add  rsi, QWORD PTR [rdi+0x30]
setb dil
shr  rax, 0x3
cmp  rsi, rdx
lea  rax, [rsi+rax*1+0x64]
cmovb  rsi, rdx
cmp  rax, rsi
cmovae rsi, rax
test rcx, rcx
jne  0x4cc2f
movzx  edi, dil
test rdi, rdi
jne  0x4cc2f
mov  rax, QWORD PTR [rbx+0x38]
mov  r14, rsi
test BYTE PTR [rbx+0x50], 0x1
jne  0x4cbf8
mov  rdi, rsi
call rax
mov  r12, rax
test r12, r12
je   0x4cc2f
lea  rax, [r12+r14*1]
mov  QWORD PTR [rbx+0x8], r12
mov  rsi, QWORD PTR [rbx+0x10]
mov  rdx, r13
mov  QWORD PTR [r12+0x8], rbp
mov  QWORD PTR [rbx+0x20], rax
mov  QWORD PTR [r12], rax
mov  rax, QWORD PTR [rbx+0x30]
lea  r14, [r12+rax*1+0x10]
not  rax
and  r14, rax
mov  rdi, r14
call 0xa420
movzx  edx, BYTE PTR [rbx+0x50]
test dl, 0x2
jne  0x4cbdd
mov  rax, QWORD PTR [rbx+0x30]
lea  rcx, [rbp+rax*1+0x10]
not  rax
and  rax, rcx
cmp  QWORD PTR [rbx+0x10], rax
je   0x4cc08
mov  QWORD PTR [rbx+0x10], r14
add  r14, r13
mov  QWORD PTR [rbx+0x18], r14
and  BYTE PTR [rbx+0x50], 0xfd
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbx+0x48]
call rax
mov  r12, rax
jmp  0x4cb83
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rbp+0x8]
and  edx, 0x1
mov  QWORD PTR [r12+0x8], rax
mov  rax, QWORD PTR [rbx+0x40]
je   0x4cc28
mov  rdi, QWORD PTR [rbx+0x48]
mov  rsi, rbp
call rax
jmp  0x4cbdd
nop  DWORD PTR [rax]
mov  rdi, rbp
call rax
jmp  0x4cbdd
lea  rax, [rip+0x32202]
endbr64
mov  r8, rcx
mov  ecx, edx
mov  rdx, rsi
xor  esi, esi
jmp  0x40730
endbr64
sub  rsp, 0x8
mov  eax, 0x1
test rdi, rdi
cmove  rdi, rax
mov  edi, edi
call 0x7530
test rax, rax
je   0xd1b5
add  rsp, 0x8
ret
mov  rdi, QWORD PTR [rip+0x11f44]
test rdi, rdi
je   0xd1d2
call 0xd170
lea  rdi, [rip+0x8fa2]
call 0xd170
lea  rdi, [rip+0x8ef9]
call 0xd170
or   edi, 0xffffffff
endbr64
test rdi, rdi
je   0xcdb0
jmp  0x74e0
xchg ax, ax
endbr64
test rdi, rdi
je   0xd760
jmp  0x74e0
xchg ax, ax
ret
endbr64
push rbx
mov  rcx, QWORD PTR [rdi+0x30]
mov  rbx, rdi
lea  rdx, [rip+0x330b]
xor  edi, edi
mov  esi, 0x80
xor  eax, eax
call 0x7150
mov  rdi, QWORD PTR [rbx+0x20]
mov  QWORD PTR [rbx+0x20], 0x0
test rdi, rdi
je   0xe0c0
pop  rbx
jmp  0x79f0
nop  DWORD PTR [rax+rax*1+0x0]
pop  rbx
endbr64
mov  eax, DWORD PTR [rip+0x926a]
test eax, eax
jne  0xc170
sub  rsp, 0x8
lea  rdi, [rip+0x44a6]
call 0x78a0
mov  DWORD PTR [rip+0x9250], eax
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
endbr64
test rdi, rdi
je   0x9238
push rbx
mov  rbx, rdi
nop  DWORD PTR [rax]
mov  rdi, QWORD PTR [rbx]
call 0x76b0
mov  rdi, QWORD PTR [rbx+0x8]
call 0x76b0
mov  rdi, rbx
mov  rbx, QWORD PTR [rbx+0x10]
call 0x76b0
test rbx, rbx
jne  0x9210
pop  rbx
ret
nop  DWORD PTR [rax+0x0]
endbr64
push r15
lea  r15, [rip+0x7fc3]
push r14
push r13
push r12
push rbp
mov  rbp, rdi
mov  edi, 0x20
push rbx
xor  ebx, ebx
sub  rsp, 0x8
call 0x7b30
mov  rdi, rbp
mov  DWORD PTR [rax], 0x0
mov  QWORD PTR [rax+0x8], 0x0
mov  QWORD PTR [rbp+0x38], rax
call 0xdc00
call 0x70d0
mov  QWORD PTR [rbp+0x28], rax
call 0x7530
cmp  QWORD PTR [rip+0x7f78], 0x0
mov  r13, rax
je   0xd397
mov  rdi, QWORD PTR [r15+0x10]
mov  esi, 0x10
mov  r12, r15
call 0x7720
test eax, eax
je   0xd383
mov  rsi, QWORD PTR [r15+0x8]
mov  edx, 0x5
xor  edi, edi
call 0x72b0
mov  rdi, rax
call 0x6f90
mov  rdi, QWORD PTR [rbp+0x28]
mov  rsi, r13
mov  r14, rax
call 0x7080
mov  rsi, r14
mov  rdi, rax
call 0x7cc0
mov  esi, 0x50
mov  rdi, r14
call 0x7080
mov  rdx, rbx
lea  rsi, [rip+0x3349]
mov  rdi, rax
call 0x79d0
mov  esi, 0x50
mov  rdi, r14
call 0x7080
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, rbp
mov  rdi, rax
lea  rdx, [rip+0xfffffffffffff529]
lea  rsi, [rip+0x2e90]
call 0x74b0
add  rbx, 0x1
add  r15, 0x20
cmp  QWORD PTR [r12+0x20], 0x0
jne  0xd2f1
call 0x7780
mov  rdi, QWORD PTR [rbp+0x28]
mov  rsi, r13
mov  r12, rax
call 0x7080
mov  rsi, r12
mov  rdi, rax
call 0x7cc0
mov  edx, 0x5
lea  rsi, [rip+0x34c9]
xor  edi, edi
call 0x72b0
mov  rdi, rax
call 0x7160
lea  rsi, [rip+0x32aa]
mov  r12, rax
mov  rax, QWORD PTR [rbp+0x18]
mov  rdi, QWORD PTR [rax]
call 0x6ee0
mov  ebx, eax
call 0x70e0
mov  rdi, r12
mov  rsi, rax
call 0x7080
xor  esi, esi
test ebx, ebx
sete sil
mov  rdi, rax
call 0x73f0
mov  rdi, QWORD PTR [rbp+0x28]
mov  rsi, r13
call 0x7080
mov  rsi, r12
mov  rdi, rax
call 0x7cc0
mov  rdi, r12
mov  esi, 0x50
call 0x7080
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, rbp
mov  rdi, rax
lea  rdx, [rip+0xfffffffffffff3e0]
lea  rsi, [rip+0x3457]
call 0x74b0
xor  esi, esi
lea  rdi, [rip+0x3451]
call 0x7c70
mov  esi, 0x10
lea  rdi, [rip+0x3542]
mov  r12, rax
call 0x7720
test eax, eax
jne  0xd4d0
mov  rdi, r12
mov  esi, 0x50
call 0x7080
mov  rcx, rbp
xor  r9d, r9d
xor  r8d, r8d
lea  rdx, [rip+0xfffffffffffff371]
lea  rsi, [rip+0x2d78]
mov  rdi, rax
call 0x74b0
mov  rdi, QWORD PTR [rbp+0x28]
call 0x7970
mov  rsi, QWORD PTR [rbp+0x28]
mov  rdi, rbp
call 0xdf30
add  rsp, 0x8
mov  rdi, rbp
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0xc9c0
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbp+0x28]
mov  rsi, r13
call 0x7080
mov  rsi, r12
mov  rdi, rax
call 0x7cc0
endbr64
push r13
mov  esi, 0x80
lea  rdx, [rip+0x4d05]
push r12
mov  r12, rdi
xor  edi, edi
push rbp
lea  rbp, [rip+0x4d08]
sub  rsp, 0x40
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x38], rax
xor  eax, eax
call 0x7150
mov  esi, 0x8
mov  rdi, rbp
call 0x7720
test eax, eax
jne  0xb380
xor  r12d, r12d
mov  rax, QWORD PTR [rsp+0x38]
sub  rax, QWORD PTR fs:0x28
jne  0xb699
add  rsp, 0x40
mov  eax, r12d
pop  rbp
pop  r12
pop  r13
ret
nop
mov  esi, 0x10
lea  rdi, [rip+0x4cca]
call 0x7720
test eax, eax
jne  0xb35b
mov  esi, 0x8
lea  rdi, [rip+0x4cd0]
call 0x7720
test eax, eax
je   0xb41c
lea  rax, [rip+0x4cd2]
lea  rsi, [rsp+0x10]
xor  edx, edx
xor  edi, edi
mov  QWORD PTR [rsp+0x10], rax
xor  r9d, r9d
xor  r8d, r8d
mov  ecx, 0x18
mov  QWORD PTR [rsp+0x30], 0x0
lea  rax, [rip+0x4cb8]
mov  QWORD PTR [rsp+0x18], rax
lea  rax, [rip+0x4cb7]
mov  QWORD PTR [rsp+0x20], rax
lea  rax, [rip+0x4cae]
mov  QWORD PTR [rsp+0x28], rax
push 0x0
lea  rax, [rsp+0x14]
push rax
push 0x0
push 0x0
call 0x7660
add  rsp, 0x20
test eax, eax
je   0xb41c
mov  esi, DWORD PTR [rsp+0xc]
test esi, esi
jne  0xb570
mov  rax, QWORD PTR [r12+0x18]
lea  rsi, [rip+0x4c86]
mov  rdi, QWORD PTR [rax]
call 0x6ee0
mov  r12d, eax
test eax, eax
je   0xb4e8
lea  r13, [rip+0x4a9e]
lea  rsi, [rsp+0x10]
xor  edx, edx
xor  edi, edi
mov  QWORD PTR [rsp+0x10], r13
xor  r9d, r9d
xor  r8d, r8d
mov  ecx, 0x18
mov  QWORD PTR [rsp+0x18], 0x0
push 0x0
lea  rax, [rsp+0x14]
push rax
push 0x0
push 0x0
call 0x7660
add  rsp, 0x20
mov  r12d, eax
test eax, eax
je   0xb508
call 0x8ef0
test eax, eax
jne  0xb590
mov  ecx, DWORD PTR [rsp+0xc]
test ecx, ecx
jne  0xb35b
xor  edi, edi
xor  eax, eax
lea  rdx, [rip+0x4ac8]
mov  esi, 0x80
call 0x7150
xor  edi, edi
xor  eax, eax
lea  rdx, [rip+0x4c05]
mov  esi, 0x80
call 0x7150
call 0x8ef0
test eax, eax
jne  0xb528
xor  esi, esi
mov  rdi, rbp
mov  r12d, 0x1
call 0x7ad0
jmp  0xb35e
nop  DWORD PTR [rax]
lea  rdx, [rip+0x4a49]
mov  esi, 0x80
xor  edi, edi
xor  eax, eax
call 0x7150
jmp  0xb35e
nop  WORD PTR [rax+rax*1+0x0]
mov  rcx, r13
lea  rdx, [rip+0x4b06]
xor  edi, edi
xor  eax, eax
mov  esi, 0x10
call 0x7150
jmp  0xb35e
nop  DWORD PTR [rax]
call 0xb250
test eax, eax
je   0xb4d0
lea  rdi, [rip+0x4ba7]
call 0x7650
lea  rsi, [rip+0x4bac]
mov  rdi, rax
call 0x6eb0
test eax, eax
jne  0xb5b0
lea  rdx, [rip+0x4a41]
mov  esi, 0x80
xor  edi, edi
mov  r12d, 0x1
call 0x7150
jmp  0xb35e
xchg ax, ax
lea  rdx, [rip+0x4991]
mov  esi, 0x80
xor  edi, edi
xor  eax, eax
call 0x7150
jmp  0xb35b
nop  WORD PTR [rax+rax*1+0x0]
call 0xb250
mov  edx, DWORD PTR [rsp+0xc]
test edx, edx
je   0xb49d
test eax, eax
jne  0xb49d
jmp  0xb35b
xchg ax, ax
mov  edx, 0x5
lea  rsi, [rip+0x4a0c]
xor  edi, edi
call 0x72b0
mov  edx, 0x5
lea  rsi, [rip+0x4a19]
xor  edi, edi
mov  r12, rax
call 0x72b0
mov  r9, r12
xor  ecx, ecx
mov  edx, 0x2
lea  r8, [rip+0x410b]
mov  r13, rax
mov  esi, 0x2
xor  edi, edi
xor  eax, eax
call 0x7b70
mov  r12, rax
call 0x7760
mov  rdi, r12
mov  rsi, rax
call 0x7080
mov  rdx, r13
lea  rsi, [rip+0x40dd]
mov  rdi, rax
xor  eax, eax
call 0x6f30
mov  rdi, r12
mov  edx, 0xfffffffa
lea  rsi, [rip+0x4ac7]
call 0x6f70
mov  edx, 0x5
lea  rsi, [rip+0x4ac1]
xor  edi, edi
call 0x72b0
mov  edx, 0xfffffffd
mov  rdi, r12
mov  rsi, rax
call 0x6f70
mov  rdi, r12
call 0x79a0
mov  r13d, eax
call 0x7020
mov  rdi, r12
mov  r12d, 0x1
mov  rsi, rax
call 0x7080
mov  rdi, rax
call 0x7520
cmp  r13d, 0xfffffffd
jne  0xb35e
mov  rdi, rbp
call 0x8df0
jmp  0xb35e
endbr64
push r14
push r13
push r12
lea  r12, [rip+0x454c]
push rbp
mov  rbp, rdi
mov  edi, 0x38
sub  rsp, 0x8
call 0x7b30
lea  rdi, [rip+0x49c5]
mov  QWORD PTR [rbp+0x38], rax
xor  eax, eax
call 0x9240
mov  r14, QWORD PTR [rbp+0x38]
lea  rsi, [rip+0x4cc0]
mov  QWORD PTR [r14+0x28], 0x0
mov  rdi, r14
call 0xa040
call 0x7630
mov  rdi, r12
lea  rdx, [rip+0x49a9]
mov  rsi, rax
xor  eax, eax
call 0x7340
mov  r13, rax
call 0x6f50
mov  rdi, r12
lea  rdx, [rip+0x498c]
mov  rsi, rax
xor  eax, eax
call 0x7340
mov  esi, 0x1
mov  rdi, rax
mov  r12, rax
call 0x7720
test eax, eax
jne  0xb240
mov  rsi, r13
mov  rdi, r14
call 0xa040
mov  rdi, r13
call 0x76b0
mov  rdi, r12
call 0x76b0
add  rsp, 0x8
mov  rdi, rbp
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0xaa70
nop  WORD PTR [rax+rax*1+0x0]
mov  rsi, r13
mov  rdi, r12
call 0x7230
endbr64
push r13
push r12
mov  r12, rdi
push rbp
call 0xbf60
test rax, rax
je   0xc5d0
lea  rdi, [rip+0x404b]
mov  rdx, r12
mov  rsi, rax
mov  rbp, rax
call 0x7b80
mov  rdi, rbp
mov  r13, rax
call 0x6fc0
test r13, r13
je   0xc5d0
mov  rdi, r13
call 0x7300
mov  rdi, rax
mov  rbp, rax
call 0x6fe0
test eax, eax
je   0xc5e0
xor  esi, esi
mov  rdi, rbp
call 0x73a0
mov  rdi, rax
call 0x6f40
mov  rdi, rax
call 0x7270
mov  r12, rax
mov  rdi, r13
call 0x6fc0
mov  rax, r12
pop  rbp
pop  r12
pop  r13
ret
xor  r12d, r12d
pop  rbp
mov  rax, r12
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  esi, DWORD PTR [rip+0x8dce]
test esi, esi
jne  0xc600
lea  rdi, [rip+0x400e]
call 0x78a0
mov  DWORD PTR [rip+0x8db8], eax
mov  esi, eax
xchg ax, ax
mov  rdi, r12
mov  edx, 0x1
xor  eax, eax
xor  r12d, r12d
lea  r8, [rip+0x3fa4]
lea  rcx, [rip+0x4054]
call 0x7c40
endbr64
push rbx
xor  eax, eax
mov  rbx, rdi
lea  rdi, [rip+0x3924]
call 0xd4f0
mov  rdi, QWORD PTR [rbx]
call 0xd5c0
mov  rdx, QWORD PTR [rbx]
mov  edi, 0x258
lea  rsi, [rip+0xfffffffffffffe73]
call 0x77e0
mov  eax, 0x1
pop  rbx
endbr64
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  QWORD PTR [rdi+0x28], rsi
call 0x7910
mov  rdi, rbp
mov  rsi, rax
call 0x7080
mov  rdi, QWORD PTR [rbx+0x20]
add  rsp, 0x8
pop  rbx
mov  rsi, rax
pop  rbp
endbr64
push r12
mov  r12, rdx
push rbp
mov  rbp, rsi
mov  esi, 0x50
sub  rsp, 0x8
mov  rdi, QWORD PTR [rdi+0x20]
call 0x7080
add  rsp, 0x8
mov  rdx, r12
mov  rsi, rbp
mov  rdi, rax
pop  rbp
pop  r12
endbr64
push r12
lea  r12, [rip+0x36ce]
push rbp
push rbx
sub  rsp, 0x1b0
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1a8], rax
lea  rax, [rip+0x36a4]
lea  rdi, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], r12
mov  QWORD PTR [rsp+0x10], 0x0
mov  QWORD PTR [rsp], rax
call 0x6f00
test eax, eax
jne  0xdbe0
mov  rdi, rsp
call 0x71d0
xor  r9d, r9d
xor  r8d, r8d
xor  ecx, ecx
mov  rbp, rax
lea  rdx, [rip+0xffffffffffffff24]
lea  rsi, [rip+0x17a3]
mov  rdi, rax
call 0x74b0
mov  rdi, rbp
mov  rsi, r12
call 0x7790
mov  rbp, rax
test rax, rax
je   0xdbb1
mov  rbx, rax
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rbx]
call 0xd830
mov  rdi, QWORD PTR [rbx]
call 0x79f0
mov  rbx, QWORD PTR [rbx+0x8]
test rbx, rbx
jne  0xdb98
mov  rdi, rbp
call 0x7200
mov  rax, QWORD PTR [rsp+0x1a8]
sub  rax, QWORD PTR fs:0x28
jne  0xdbf7
add  rsp, 0x1b0
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x3769]
mov  esi, 0x10
xor  edi, edi
xor  eax, eax
call 0x7150
jmp  0xdbb9
endbr64
push rbx
lea  rdi, [rip+0x61b6]
call 0x8330
lea  rdi, [rip+0x61b0]
mov  ebx, eax
call 0x8330
cmp  ebx, 0x1
je   0x8f28
cmp  eax, 0x1
je   0x8f28
add  ebx, eax
xor  eax, eax
cmp  ebx, 0x4
pop  rbx
sete al
ret
nop  DWORD PTR [rax]
mov  eax, 0x1
pop  rbx
endbr64
sub  rsp, 0x28
lea  rdx, [rip+0x6281]
mov  esi, 0x80
xor  edi, edi
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
call 0x7150
lea  rax, [rip+0x666e]
xor  edx, edx
xor  ecx, ecx
mov  QWORD PTR [rsp], rax
mov  rsi, rsp
xor  r9d, r9d
xor  r8d, r8d
mov  QWORD PTR [rsp+0x8], 0x0
xor  edi, edi
push 0x0
push 0x0
call 0x72c0
pop  rax
pop  rdx
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x8ede
add  rsp, 0x28
ret
endbr64
push r13
xor  edi, edi
push r12
push rbp
call 0xbf60
test rax, rax
je   0xc460
xor  edx, edx
lea  rdi, [rip+0x4241]
mov  rsi, rax
mov  rbp, rax
call 0x7b80
mov  rdi, rbp
mov  r12, rax
call 0x6fc0
test r12, r12
je   0xc460
mov  rdi, r12
xor  r13d, r13d
call 0x7300
mov  rdi, rax
mov  rbp, rax
call 0x6fe0
test eax, eax
jne  0xc448
mov  rdi, r12
call 0x6fc0
mov  eax, r13d
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
xor  esi, esi
mov  rdi, rbp
call 0x73a0
mov  rdi, rax
call 0x75f0
mov  r13d, eax
jmp  0xc433
nop
xor  r13d, r13d
pop  rbp
pop  r12
mov  eax, r13d
pop  r13
endbr64
mov  rdi, QWORD PTR [rdi+0x20]
endbr64
mov  rdx, rdi
lea  rsi, [rip+0xffffffffffffffd2]
mov  edi, 0x1
endbr64
push r13
push r12
mov  r12, rdi
push rbp
call 0xbf60
test rax, rax
je   0xc690
mov  rdx, r12
lea  rdi, [rip+0x3f90]
mov  rsi, rax
mov  rbp, rax
call 0x7b80
mov  rdi, rbp
mov  r12, rax
call 0x6fc0
test r12, r12
je   0xc690
mov  rdi, r12
call 0x7300
mov  rdi, rax
call 0x6fe0
mov  rdi, r12
mov  r13d, eax
call 0x6fc0
mov  rax, r13
pop  rbp
pop  r12
pop  r13
ret
nop
mov  r13, 0xffffffffffffffff
pop  rbp
pop  r12
mov  rax, r13
pop  r13
endbr64
test rdi, rdi
je   0x91f1
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
sub  rsp, 0x8
jmp  0x91c9
nop  WORD PTR [rax+rax*1+0x0]
mov  rbx, QWORD PTR [rbx+0x10]
test rbx, rbx
je   0x91e8
mov  rsi, QWORD PTR [rbx]
mov  rdi, rbp
call 0x75d0
test eax, eax
jne  0x91c0
mov  rax, QWORD PTR [rbx+0x8]
add  rsp, 0x8
pop  rbx
pop  rbp
ret
nop  DWORD PTR [rax+rax*1+0x0]
add  rsp, 0x8
xor  eax, eax
pop  rbx
pop  rbp
ret
xor  eax, eax
endbr64
push r15
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x28
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x10], 0x0
call 0xc1b0
test eax, eax
jne  0xbc60
mov  rdi, QWORD PTR [rsp+0x10]
test rdi, rdi
je   0xbc36
call 0x6fb0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0xbf55
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
xor  eax, eax
call 0xc180
test eax, eax
je   0xbeb8
lea  rbx, [rip+0x476a]
lea  r15, [rsp+0x10]
mov  rdi, rbx
call 0x7b00
mov  rcx, r15
xor  edx, edx
xor  esi, esi
mov  rdi, rax
mov  r13, rax
call 0x78f0
mov  r14, rax
test rax, rax
je   0xbee0
lea  rbx, [rip+0x4536]
mov  rdi, rbx
call 0x7b00
mov  rcx, r15
xor  edx, edx
mov  esi, 0x1
mov  rdi, rax
mov  rbp, rax
call 0x78f0
mov  r15, rax
test rax, rax
je   0xbf18
mov  edi, 0x28
call 0x7b30
mov  rdi, r12
mov  QWORD PTR [rax+0x10], r14
mov  rbx, rax
mov  QWORD PTR [rax+0x18], r15
mov  QWORD PTR [r12+0x38], rax
call 0xdc00
mov  r15, QWORD PTR [r12+0x38]
call 0x70d0
mov  QWORD PTR [r12+0x28], rax
call 0x6fd0
xor  esi, esi
mov  QWORD PTR [r15], rax
mov  rdi, rax
call 0x7cf0
mov  r8, QWORD PTR [r15]
mov  QWORD PTR [rsp+0x8], r8
call 0x7530
mov  rdi, QWORD PTR [r12+0x28]
mov  rsi, rax
mov  r14, rax
call 0x7080
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdi, rax
call 0x7cc0
call 0x6fd0
xor  esi, esi
mov  QWORD PTR [r15+0x8], rax
mov  rdi, rax
call 0x7cf0
mov  rdi, QWORD PTR [r12+0x28]
mov  r15, QWORD PTR [r15+0x8]
mov  rsi, r14
call 0x7080
mov  rsi, r15
mov  rdi, rax
call 0x7cc0
call 0x7780
mov  rdi, QWORD PTR [r12+0x28]
mov  rsi, r14
mov  r15, rax
call 0x7080
mov  rsi, r15
mov  rdi, rax
call 0x7cc0
mov  edx, 0x5
lea  rsi, [rip+0x445f]
xor  edi, edi
call 0x72b0
mov  rdi, rax
call 0x6f90
mov  rdi, QWORD PTR [r12+0x28]
mov  rsi, r14
lea  r14, [rip+0x32f3]
mov  r15, rax
call 0x7080
mov  rsi, r15
mov  rdi, rax
call 0x7cc0
mov  rdi, r15
mov  esi, 0x50
lea  r15, [rip+0xfffffffffffff907]
call 0x7080
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r12
lea  rdx, [rip+0xfffffffffffffce2]
lea  rsi, [rip+0x4419]
mov  rdi, rax
call 0x74b0
mov  rdi, QWORD PTR [r12+0x28]
call 0x7970
mov  rsi, QWORD PTR [r12+0x28]
mov  rdi, r12
call 0xdf30
mov  rax, QWORD PTR [r12+0x18]
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r12
lea  rdx, [rip+0xfffffffffffff8f7]
lea  rsi, [rip+0x4610]
mov  rdi, QWORD PTR [rax]
call 0x74b0
mov  rdi, QWORD PTR [rbx+0x10]
xor  r9d, r9d
mov  rcx, r12
xor  r8d, r8d
mov  rdx, r15
mov  rsi, r14
call 0x74b0
mov  rdi, QWORD PTR [rbx+0x18]
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r12
mov  rdx, r15
mov  rsi, r14
call 0x74b0
mov  edi, 0x2
mov  rdx, r12
lea  rsi, [rip+0xfffffffffffff8d9]
call 0x77e0
mov  rdi, QWORD PTR [rsp+0x10]
mov  DWORD PTR [rbx+0x20], eax
test rdi, rdi
je   0xbe90
call 0x6fb0
xchg ax, ax
test rbp, rbp
je   0xbe9d
mov  rdi, rbp
call 0x79f0
test r13, r13
je   0xbc36
mov  rdi, r13
call 0x79f0
jmp  0xbc36
nop  DWORD PTR [rax+rax*1+0x0]
xor  edi, edi
lea  rdx, [rip+0x44a7]
mov  esi, 0x10
call 0x7150
mov  rdi, QWORD PTR [rsp+0x10]
test rdi, rdi
jne  0xbc31
jmp  0xbc36
xchg ax, ax
mov  rax, QWORD PTR [rsp+0x10]
xor  edi, edi
mov  rcx, rbx
mov  esi, 0x10
lea  rdx, [rip+0x4512]
mov  r8, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
mov  rdi, QWORD PTR [rsp+0x10]
test rdi, rdi
je   0xbe9d
call 0x6fb0
jmp  0xbe9d
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x10]
xor  edi, edi
mov  rcx, rbx
mov  esi, 0x10
lea  rdx, [rip+0x44da]
mov  r8, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
mov  rdi, QWORD PTR [rsp+0x10]
test rdi, rdi
je   0xbf48
call 0x6fb0
mov  rdi, r14
call 0x79f0
jmp  0xbe90
endbr64
push r15
push r14
mov  r14, rdi
push r13
push r12
push rbp
push rbx
mov  rbx, rsi
sub  rsp, 0x18
mov  rbp, QWORD PTR [rdi+0x28]
test rbp, rbp
je   0xdf11
call 0x72f0
mov  rdi, rbp
mov  rsi, rax
mov  r12, rax
call 0x7080
mov  rdi, rax
call 0x7480
mov  rbp, rax
test rax, rax
je   0xdf00
mov  rdi, QWORD PTR [rax]
lea  r15, [rip+0x367b]
mov  QWORD PTR [rsp+0x8], r15
test rdi, rdi
je   0xdd80
mov  esi, 0x50
call 0x7080
mov  rsi, r15
mov  rdi, rax
call 0x7cb0
test rax, rax
je   0xdd80
mov  rdi, QWORD PTR [r14+0x28]
mov  r13, QWORD PTR [rbp+0x0]
mov  rsi, r12
call 0x7080
mov  rsi, r13
mov  rdi, rax
call 0x7b20
mov  rax, QWORD PTR [rbp+0x8]
test rax, rax
je   0xdd80
mov  rdi, QWORD PTR [r14+0x28]
mov  r13, QWORD PTR [rax]
mov  rsi, r12
call 0x7080
mov  rsi, r13
mov  rdi, rax
call 0x7b20
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, rbp
call 0x7200
mov  rdi, rbx
call 0x73c0
mov  rdi, rax
mov  r13, rax
call 0x7bc0
call 0x6ff0
mov  rdi, r13
mov  rsi, rax
mov  rbp, rax
call 0x7080
mov  esi, 0x1
mov  rdi, rax
call 0x7250
mov  rsi, rbp
mov  rdi, r13
call 0x7080
mov  rdi, rax
call 0x7350
movsd  xmm0, QWORD PTR [rip+0x35ea]
mov  rbp, rax
call 0x77d0
mov  rdi, rbp
mov  esi, eax
call 0x7d10
mov  rdi, rbp
call 0x7a80
lea  rdi, [rip+0x283b]
mov  r15, rax
call 0x7030
mov  rbp, rax
test r15, r15
je   0xde48
lea  r12, [rip+0x2823]
xchg ax, ax
mov  rax, QWORD PTR [r15]
mov  rdi, rbp
movsxd rsi, DWORD PTR [rax+0x8]
movsxd rdx, DWORD PTR [rax+0xc]
add  rsi, rbx
call 0x7100
mov  r15, QWORD PTR [r15+0x8]
mov  rbp, rax
test r15, r15
je   0xde48
mov  rsi, r12
mov  rdi, rax
call 0x7bd0
mov  rbp, rax
jmp  0xde10
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbp+0x0]
call 0x6f90
mov  r12, rax
call 0x7530
mov  rdi, QWORD PTR [r14+0x28]
mov  rsi, rax
mov  rbx, rax
call 0x7080
xor  edx, edx
mov  rsi, r12
mov  rdi, rax
call 0x6ec0
mov  rdi, r12
mov  esi, 0x50
call 0x7080
mov  rsi, QWORD PTR [rsp+0x8]
lea  rdx, [rip+0x32d3]
mov  rdi, rax
call 0x79d0
xor  esi, esi
mov  rdi, r12
call 0x7cf0
mov  rdi, r12
call 0x79e0
call 0x7780
mov  rdi, QWORD PTR [r14+0x28]
mov  rsi, rbx
mov  r12, rax
call 0x7080
mov  rsi, r12
mov  edx, 0x1
mov  rdi, rax
call 0x6ec0
mov  rdi, r12
call 0x79e0
xor  edi, edi
call 0x7d20
mov  rdi, rbp
mov  esi, 0x1
call 0x7990
add  rsp, 0x18
mov  rdi, r13
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x79f0
xchg ax, ax
lea  rax, [rip+0x348a]
mov  QWORD PTR [rsp+0x8], rax
jmp  0xdd80
call 0x70d0
mov  QWORD PTR [r14+0x28], rax
mov  rbp, rax
endbr64
push r15
mov  edx, 0x5
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x38
mov  DWORD PTR [rsp+0xc], edi
xor  edi, edi
mov  QWORD PTR [rsp], rsi
lea  rsi, [rip+0x740a]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x18], 0x0
call 0x72b0
mov  rsi, rsp
lea  rdi, [rsp+0xc]
lea  r9, [rsp+0x18]
mov  rdx, rax
lea  r8, [rip+0x744d]
lea  rcx, [rip+0xd28c]
call 0x7240
test eax, eax
je   0x81d5
lea  rbp, [rip+0x7432]
mov  rdi, rbp
call 0x7870
lea  rsi, [rip+0x73eb]
mov  rdi, rbp
call 0x7550
lea  rsi, [rip+0x73ee]
mov  rdi, rbp
call 0x7170
mov  rdi, rbp
call 0x7a60
mov  eax, DWORD PTR [rip+0xd578]
or   eax, DWORD PTR [rip+0xd56e]
or   eax, DWORD PTR [rip+0xd564]
or   eax, DWORD PTR [rip+0xd55a]
or   eax, DWORD PTR [rip+0xd550]
or   eax, DWORD PTR [rip+0xd546]
jne  0x8128
lea  r12, [rip+0x969]
xor  ecx, ecx
mov  esi, 0x80
mov  rdx, r12
lea  rdi, [rip+0x74d7]
call 0x7010
xor  ecx, ecx
mov  rdx, r12
mov  esi, 0x80
lea  rdi, [rip+0x7490]
call 0x7010
xor  ecx, ecx
mov  rdx, r12
mov  esi, 0x80
lea  rdi, [rip+0x8355]
call 0x7010
xor  ecx, ecx
mov  rdx, r12
mov  esi, 0x80
lea  rdi, [rip+0x74bc]
call 0x7010
xor  ecx, ecx
mov  rdx, r12
mov  esi, 0x80
lea  rdi, [rip+0x91dd]
call 0x7010
xor  ecx, ecx
mov  rdx, r12
xor  edi, edi
mov  esi, 0x80
call 0x7010
mov  edx, 0x5
mov  rsi, rbp
xor  edi, edi
call 0x72b0
mov  rdi, rax
call 0x7800
mov  rdi, rbp
call 0x7570
mov  edi, 0x48
call 0x7b30
lea  rdi, [rip+0x7319]
mov  r12, rax
call 0x6f20
lea  rsi, [rip+0x7325]
mov  QWORD PTR [r12], rax
mov  rdi, rax
call 0x73b0
test eax, eax
mov  ebx, eax
mov  eax, 0x1f4
cmovle ebx, eax
call 0x7180
cmp  eax, ebx
jb   0x8145
mov  eax, DWORD PTR [rip+0xd468]
test eax, eax
jne  0x81ae
call 0x78c0
xor  edx, edx
lea  rsi, [rip+0x7324]
mov  rdi, rax
xor  eax, eax
call 0x71a0
mov  edx, 0x180
mov  esi, 0x42
mov  rdi, rax
mov  rbp, rax
xor  eax, eax
call 0x7320
mov  rdi, rbp
mov  r13d, eax
call 0x76b0
mov  esi, 0x6
mov  edi, r13d
call 0x7c60
mov  DWORD PTR [rsp+0x8], eax
test eax, eax
jne  0x818c
call 0x7630
lea  rdi, [rip+0x72f8]
mov  rsi, rax
xor  eax, eax
call 0x7340
mov  esi, 0x4
mov  rdi, rax
mov  rbp, rax
call 0x7720
test eax, eax
je   0x81c3
mov  rdi, rbp
lea  rbx, [rip+0xc625]
lea  r14, [rip+0x71c4]
call 0x76b0
mov  edi, DWORD PTR [rip+0xd07b]
mov  rdx, r12
lea  rsi, [rip+0x901]
lea  r13, [rip+0x72bc]
lea  rbp, [rsp+0x20]
call 0x77e0
mov  rdi, r12
lea  r15, [rip+0x646]
call 0xd720
xor  eax, eax
call 0x8e70
jmp  0x7ff4
nop  DWORD PTR [rax+rax*1+0x0]
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r12
mov  rdx, r15
lea  rsi, [rip+0x70c7]
call 0x74b0
mov  r14, QWORD PTR [rbx]
add  rbx, 0x8
test r14, r14
je   0x805a
mov  rdi, r13
call 0x7750
test rax, rax
je   0x800d
lea  rax, [rip+0x7073]
cmp  r14, rax
je   0x7fe8
mov  QWORD PTR [rsp+0x20], 0x0
mov  rdi, r14
call 0x7b00
mov  rcx, rbp
xor  edx, edx
xor  esi, esi
mov  rdi, rax
call 0x78f0
mov  rdi, rax
test rax, rax
jne  0x7fd0
mov  rcx, r14
lea  rdx, [rip+0x7233]
xor  edi, edi
xor  eax, eax
mov  esi, 0x10
add  rbx, 0x8
call 0x7150
mov  r14, QWORD PTR [rbx-0x8]
test r14, r14
jne  0x7ff4
lea  rbx, [rip+0xc507]
lea  r13, [rip+0xc538]
lea  rdi, [rip+0x6fdb]
lea  r14, [rip+0x58a]
lea  r15, [rip+0x702d]
mov  QWORD PTR [rsp+0x20], 0x0
call 0x7b00
mov  rcx, rbp
xor  edx, edx
xor  esi, esi
mov  rdi, rax
call 0x7850
mov  rdi, rax
test rax, rax
je   0x816e
xor  r9d, r9d
xor  r8d, r8d
mov  rcx, r12
mov  rdx, r14
mov  rsi, r15
call 0x74b0
mov  rdi, QWORD PTR [rbx]
add  r13, 0x8
add  rbx, 0x8
test rdi, rdi
jne  0x807d
mov  rdx, r12
lea  rsi, [rip+0x92c]
mov  edi, 0xb4
call 0x77e0
xor  r8d, r8d
xor  ecx, ecx
mov  esi, 0x2
lea  rdx, [rip+0x301]
xor  edi, edi
call 0x78b0
call 0x7730
mov  rax, QWORD PTR [rsp+0x28]
sub  rax, QWORD PTR fs:0x28
jne  0x8219
mov  eax, DWORD PTR [rsp+0x8]
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  edx, 0x1
lea  rsi, [rip+0x7086]
lea  rdi, [rip+0x7083]
call 0x6fa0
jmp  0x7e00
cmp  DWORD PTR [rip+0xd214], 0x0
jne  0x7eea
xor  edi, edi
lea  rdx, [rip+0x709f]
mov  esi, 0x10
xor  eax, eax
call 0x7150
xor  edi, edi
call 0x7740
mov  rcx, QWORD PTR [r13+0x0]
lea  rdx, [rip+0x70f9]
xor  edi, edi
xor  eax, eax
mov  esi, 0x10
call 0x7150
jmp  0x80ba
lea  rdx, [rip+0x70ab]
mov  esi, 0x10
xor  edi, edi
xor  eax, eax
call 0x7150
mov  DWORD PTR [rsp+0x8], 0x1
jmp  0x80fb
mov  rdi, QWORD PTR [r12]
lea  rsi, [rip+0x705e]
call 0x6f60
jmp  0x7ef8
mov  esi, 0x1c0
mov  rdi, rbp
call 0x7130
jmp  0x7f79
mov  rax, QWORD PTR [rsp+0x18]
test rax, rax
je   0x821e
mov  r12, QWORD PTR [rax+0x8]
mov  edx, 0x5
lea  rsi, [rip+0x6f98]
xor  edi, edi
call 0x72b0
mov  rdi, QWORD PTR [rip+0xd123]
mov  rcx, r12
mov  esi, 0x1
mov  rdx, rax
xor  eax, eax
call 0x7aa0
mov  edi, 0x1
call 0x7740
call 0x7610
mov  edx, 0x5
lea  rsi, [rip+0x6f4f]
xor  edi, edi
call 0x72b0
mov  r12, rax
endbr64
push r12
lea  rdi, [rip+0x416b]
xor  r12d, r12d
call 0x7410
test rax, rax
setne  r12b
je   0xc1a6
mov  rdi, rax
call 0x79f0
mov  eax, r12d
pop  r12
endbr64
push r14
mov  r14, rcx
push r13
mov  r13, rdx
push r12
mov  r12, rsi
push rbp
push rbx
mov  rbx, rdi
call 0x70d0
mov  rdi, r12
mov  rbp, rax
call 0x6f90
mov  esi, 0x50
mov  rdi, rax
mov  r12, rax
call 0x7080
mov  rcx, r14
mov  rdx, r13
xor  r9d, r9d
xor  r8d, r8d
mov  rdi, rax
lea  rsi, [rip+0x2250]
call 0x74b0
call 0x7530
mov  rdi, rbp
mov  rsi, rax
call 0x7080
mov  rsi, r12
mov  rdi, rax
call 0x7cc0
mov  rdi, rbp
call 0x7970
call 0x7910
mov  rdi, rbp
mov  rsi, rax
call 0x7080
mov  rdi, QWORD PTR [rbx+0x20]
pop  rbx
mov  rsi, rax
pop  rbp
pop  r12
pop  r13
pop  r14
endbr64
push rbx
mov  rcx, QWORD PTR [rdi+0x30]
mov  rbx, rdi
xor  eax, eax
xor  edi, edi
lea  rdx, [rip+0x3760]
mov  esi, 0x80
call 0x7150
cmp  QWORD PTR [rbx+0x20], 0x0
je   0xdc30
pop  rbx
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbx+0x30]
mov  edx, 0x2
mov  rsi, rdi
call 0x6ef0
mov  QWORD PTR [rbx+0x20], rax
pop  rbx
endbr64
test rdi, rdi
je   0xd280
jmp  0xc9c0
xchg ax, ax
xor  eax, eax
endbr64
mov  rdi, QWORD PTR [rdi+0x20]
test esi, esi
je   0xdcb0
mov  esi, 0x1
jmp  0x7390
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
xor  esi, esi
endbr64
push rbp
xor  eax, eax
mov  rbp, rdi
lea  rdi, [rip+0x3620]
push rbx
mov  ebx, esi
sub  rsp, 0x8
call 0xc6a0
test rbp, rbp
je   0xd268
mov  rax, QWORD PTR [rbp+0x38]
mov  DWORD PTR [rax], ebx
add  rsp, 0x8
pop  rbx
pop  rbp
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x1000
or   QWORD PTR [rsp], 0x0
sub  rsp, 0x38
xor  r12d, r12d
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x2028], rax
xor  eax, eax
lea  rax, [rsp+0x18]
mov  r13, rdi
lea  rbp, [rsp+0x20]
mov  QWORD PTR [rsp+0x18], 0x0
mov  QWORD PTR [rsp+0x8], rax
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdx, r13
mov  esi, 0x2000
mov  rdi, rbp
call 0x7a40
test rax, rax
je   0x9160
movzx  ebx, BYTE PTR [rsp+0x20]
cmp  bl, 0xa
je   0x9160
mov  rdi, rbp
call 0x7110
cmp  BYTE PTR [rsp+rax*1+0x1f], 0xa
jne  0x8fd0
mov  BYTE PTR [rsp+rax*1+0x1f], 0x0
movzx  ebx, BYTE PTR [rsp+0x20]
call 0x75b0
mov  r15, rax
movsx  rax, bl
mov  rdx, QWORD PTR [r15]
test BYTE PTR [rdx+rax*2+0x1], 0x20
jne  0x9088
cmp  bl, 0x3a
je   0x9190
mov  r14, rbp
test bl, bl
je   0x9190
xchg ax, ax
movzx  eax, BYTE PTR [r14+0x1]
add  r14, 0x1
test al, al
je   0x9011
cmp  al, 0x3a
jne  0x9000
mov  BYTE PTR [r14], 0x0
mov  edi, 0x18
lea  rbx, [r14+0x1]
call 0x7b30
mov  r12, rax
test rax, rax
je   0x9165
mov  rdi, rbp
call 0x7bf0
mov  rcx, QWORD PTR [r15]
mov  QWORD PTR [r12], rax
movsx  rax, BYTE PTR [r14+0x1]
test BYTE PTR [rcx+rax*2+0x1], 0x20
je   0x9060
nop  WORD PTR [rax+rax*1+0x0]
movsx  rax, BYTE PTR [rbx+0x1]
add  rbx, 0x1
test BYTE PTR [rcx+rax*2+0x1], 0x20
jne  0x9050
mov  rdi, rbx
call 0x7bf0
mov  QWORD PTR [r12+0x8], rax
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rax], r12
lea  rax, [r12+0x10]
mov  QWORD PTR [rsp+0x8], rax
jmp  0x8f90
nop  DWORD PTR [rax+0x0]
cmp  BYTE PTR [rsp+0x21], 0x2e
mov  r14, QWORD PTR [r12+0x8]
je   0x9128
cmp  BYTE PTR [r14], 0x0
je   0x90b1
lea  rsi, [rip+0x6845]
mov  rdi, r14
call 0x7b50
test eax, eax
je   0x90e8
mov  rdi, rbp
call 0x7ab0
mov  rdi, rax
call 0x72d0
xor  edx, edx
mov  rdi, r14
mov  rsi, rax
xor  eax, eax
call 0x7920
mov  QWORD PTR [r12+0x8], rax
mov  rdi, r14
call 0x76b0
jmp  0x8f90
nop  WORD PTR [rax+rax*1+0x0]
lea  rsi, [rip+0x7542]
mov  rdi, r14
call 0x7b50
test eax, eax
jne  0x90b1
mov  rdi, rbp
call 0x7ab0
mov  rdi, rax
call 0x72d0
xor  ecx, ecx
lea  rsi, [rip+0x67d6]
mov  rdi, r14
mov  rdx, rax
xor  eax, eax
call 0x7920
jmp  0x90d0
nop  DWORD PTR [rax+rax*1+0x0]
cmp  BYTE PTR [rsp+0x22], 0x0
jne  0x9098
mov  rdi, r14
xor  edx, edx
lea  rsi, [rip+0x74f2]
xor  eax, eax
call 0x7920
mov  rdi, r14
mov  QWORD PTR [r12+0x8], rax
call 0x76b0
jmp  0x8f90
nop  DWORD PTR [rax+rax*1+0x0]
mov  r12, QWORD PTR [rsp+0x18]
mov  rax, QWORD PTR [rsp+0x2028]
sub  rax, QWORD PTR fs:0x28
jne  0x9198
add  rsp, 0x2038
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax]
mov  r14, rbp
jmp  0x9011
endbr64
push r14
push r13
push r12
push rbp
mov  rbp, rdi
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
or   edx, DWORD PTR [rip+0xc6c4]
mov  QWORD PTR [rsp+0x8], 0x0
jne  0x8d50
cmp  QWORD PTR [rip+0xc689], 0x0
je   0x8dc8
call 0x7430
lea  r14, [rsp+0x8]
mov  rdi, rax
call 0x7a70
mov  rdi, QWORD PTR [rip+0xc66a]
mov  r12, rax
call 0x70c0
mov  rdi, rax
call 0x7c00
xor  edx, edx
mov  rcx, r14
mov  rsi, rbp
mov  rdi, rbp
mov  r13d, eax
call 0x7880
mov  esi, r13d
mov  rdi, r12
mov  rbp, rax
call 0x7380
xor  esi, esi
mov  rcx, r14
mov  rdx, r12
mov  rdi, rbp
call 0x7500
test eax, eax
je   0x8da0
mov  rdi, r12
call 0x79f0
mov  rdi, rbp
call 0x79f0
mov  rax, QWORD PTR [rsp+0x28]
sub  rax, QWORD PTR fs:0x28
jne  0x8de3
add  rsp, 0x38
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdx, [rip+0x63bc]
mov  esi, 0x80
xor  edi, edi
call 0x7150
lea  rax, [rip+0x63bf]
xor  edx, edx
xor  ecx, ecx
mov  QWORD PTR [rsp+0x10], rax
lea  rsi, [rsp+0x10]
xor  r9d, r9d
xor  r8d, r8d
mov  QWORD PTR [rsp+0x18], rbp
xor  edi, edi
mov  QWORD PTR [rsp+0x20], 0x0
push 0x0
push 0x0
call 0x72c0
pop  rax
pop  rdx
jmp  0x8d27
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x8]
lea  rdx, [rip+0x638d]
mov  esi, 0x10
xor  edi, edi
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
jmp  0x8d17
nop  DWORD PTR [rax+rax*1+0x0]
xor  edi, edi
call 0x7670
mov  rdi, rax
mov  QWORD PTR [rip+0xc55f], rax
call 0x7140
jmp  0x8cb5
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffffad1]
call QWORD PTR [rip+0xcd5b]
endbr64
push r12
mov  esi, 0x50
push rbp
mov  rbp, rdi
push rbx
call 0x7080
lea  rsi, [rip+0x5036]
mov  rdi, rax
call 0x7cb0
test rax, rax
je   0xa924
mov  rsi, QWORD PTR [rax]
mov  rbx, rax
lea  rdi, [rip+0x5077]
xor  eax, eax
call 0x9240
mov  DWORD PTR [rbx+0x20], 0x1
mov  esi, 0x50
mov  rdi, rbp
call 0x7080
lea  rsi, [rip+0x4ff1]
mov  rdi, rax
call 0x7cb0
mov  esi, 0x50
mov  rdi, rbp
mov  r12, rax
call 0x7080
lea  rsi, [rip+0x4fd6]
mov  rdi, rax
call 0x7cb0
mov  rdi, rax
test r12, r12
je   0xa9c0
test rax, rax
je   0xa983
mov  rdx, 0xffffffffffffffff
lea  rsi, [rip+0x4d92]
call 0x7290
test eax, eax
je   0xa9a8
mov  rdi, r12
call 0x7270
mov  rbp, rax
mov  rdi, rbp
xor  esi, esi
call 0x7ad0
pop  rbx
mov  rdi, rbp
pop  rbp
pop  r12
jmp  0x76b0
nop  DWORD PTR [rax+0x0]
mov  rsi, r12
lea  rdi, [rip+0x5001]
call 0x7340
mov  rbp, rax
jmp  0xa98e
nop  DWORD PTR [rax+0x0]
pop  rbx
lea  rdx, [rip+0x4fdf]
pop  rbp
mov  esi, 0x10
xor  edi, edi
xor  eax, eax
pop  r12
endbr64
push r15
push r14
push r13
push r12
lea  r12, [rip+0x49ad]
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x38
mov  QWORD PTR [rsp+0x10], rdi
lea  rdi, [rip+0x4f46]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
call 0x9240
xor  edx, edx
xor  esi, esi
mov  rdi, r12
mov  rbx, QWORD PTR [rbx+0x38]
call 0x77c0
test rax, rax
je   0xb04a
mov  rsi, r12
mov  rbp, rax
xor  eax, eax
lea  rdi, [rip+0x4f36]
lea  r12, [rip+0x4f40]
call 0x9240
mov  DWORD PTR [rsp+0x1c], 0x0
nop  DWORD PTR [rax+0x0]
mov  rdi, rbp
call 0x7900
mov  r13, rax
test rax, rax
je   0xab8c
mov  rdi, r12
xor  eax, eax
mov  rsi, r13
call 0x9240
mov  rdi, r13
call 0x93c0
test eax, eax
je   0xabd8
mov  rdi, QWORD PTR [rbx+0x28]
lea  rdx, [rip+0xfffffffffffff034]
mov  rsi, r13
call 0x77f0
mov  r14, rax
test rax, rax
je   0xacc8
mov  r15, QWORD PTR [r14]
mov  rdi, r13
call 0x9310
mov  rcx, QWORD PTR [r15+0x8]
mov  rdx, rax
cmp  rcx, rax
jl   0xabf0
mov  ecx, DWORD PTR [r15+0x24]
test ecx, ecx
je   0xac13
mov  rsi, r13
lea  rdi, [rip+0x4f2f]
xor  eax, eax
call 0x9240
mov  rdi, rbp
call 0x7900
mov  r13, rax
test rax, rax
jne  0xab04
mov  rdi, rbp
call 0x73d0
mov  eax, DWORD PTR [rsp+0x1c]
test eax, eax
jne  0xad60
mov  rdi, QWORD PTR [rsp+0x10]
call 0xe080
mov  eax, 0x1
mov  rdx, QWORD PTR [rsp+0x28]
sub  rdx, QWORD PTR fs:0x28
jne  0xb0b0
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rsi, r13
lea  rdi, [rip+0x4e52]
call 0x9240
jmp  0xaaf0
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rsp+0x8], rax
mov  rsi, r13
lea  rdi, [rip+0x4e6a]
xor  eax, eax
call 0x9240
mov  DWORD PTR [r15+0x24], 0x0
mov  rdx, QWORD PTR [rsp+0x8]
mov  rsi, r13
lea  rdi, [rip+0x5163]
xor  eax, eax
mov  QWORD PTR [rsp+0x8], rdx
call 0x9240
mov  rdx, QWORD PTR [rsp+0x8]
mov  rdi, QWORD PTR [rbx+0x28]
mov  QWORD PTR [r15+0x8], rdx
call 0x7220
xor  esi, esi
mov  r13, rax
test rax, rax
je   0xaca9
nop  DWORD PTR [rax]
cmp  r14, r13
je   0xac98
mov  rax, QWORD PTR [r13+0x0]
mov  edx, DWORD PTR [rax+0x24]
test edx, edx
jne  0xac98
mov  rcx, QWORD PTR [r15+0x10]
mov  rdx, QWORD PTR [r15+0x18]
lea  r8, [rax+0x10]
lea  r9, [r15+0x10]
xor  rdx, QWORD PTR [rax+0x18]
xor  rcx, QWORD PTR [rax+0x10]
or   rdx, rcx
jne  0xac98
mov  rcx, QWORD PTR [rax]
mov  rsi, QWORD PTR [r15]
mov  rdx, r9
lea  rdi, [rip+0x511b]
xor  eax, eax
call 0x9240
mov  esi, 0x1
nop  DWORD PTR [rax+0x0]
mov  r13, QWORD PTR [r13+0x8]
test r13, r13
jne  0xac48
test esi, esi
jne  0xaaf0
mov  rsi, QWORD PTR [r15]
lea  rdi, [rip+0x4dd3]
xor  eax, eax
call 0x9240
add  DWORD PTR [rsp+0x1c], 0x1
jmp  0xaaf0
nop  DWORD PTR [rax+0x0]
mov  rsi, r13
lea  rdi, [rip+0x4d75]
xor  eax, eax
call 0x9240
mov  edi, 0x28
call 0x7b30
mov  rdi, r13
mov  r14, rax
call 0x7bf0
mov  rdi, r13
mov  QWORD PTR [r14], rax
call 0x9310
lea  rsi, [r14+0x10]
mov  rdi, r13
mov  QWORD PTR [r14+0x8], rax
call 0x9d20
mov  QWORD PTR [r14+0x20], 0x0
mov  rdi, QWORD PTR [rbx+0x28]
mov  rsi, r14
call 0x7190
lea  rdx, [rip+0xffffffffffffee3c]
mov  rsi, r13
mov  QWORD PTR [rbx+0x28], rax
mov  rdi, rax
call 0x77f0
mov  r14, rax
test rax, rax
jne  0xab40
lea  rcx, [rip+0x517a]
mov  edx, 0x310
lea  rsi, [rip+0x4ae3]
lea  rdi, [rip+0x4d04]
call 0x7260
xchg ax, ax
lea  rdi, [rip+0x5061]
xor  eax, eax
call 0x9240
mov  rax, QWORD PTR [rsp+0x10]
lea  rdi, [rip+0x4d39]
mov  QWORD PTR [rsp+0x20], 0x0
mov  rbx, QWORD PTR [rax+0x38]
xor  eax, eax
call 0x9240
call 0x7980
mov  rbp, rax
test rax, rax
je   0xb0b5
lea  rdx, [rsp+0x20]
lea  rsi, [rip+0x504d]
mov  rdi, rax
call 0x7c90
test eax, eax
je   0xb069
mov  rsi, QWORD PTR [rsp+0x10]
mov  rdi, rbp
call 0x7b10
call 0x7020
lea  rsi, [rip+0x4d10]
mov  rdi, rbp
mov  r12, rax
call 0x7310
mov  rsi, r12
mov  rdi, rax
call 0x7080
mov  edx, 0x5
xor  edi, edi
lea  rsi, [rip+0x4cd0]
mov  QWORD PTR [rbx], rax
call 0x72b0
mov  r15, rax
call 0x7cd0
mov  rdi, QWORD PTR [rbx]
mov  rsi, rax
mov  r13, rax
call 0x7080
mov  rsi, r15
mov  rdi, rax
call 0x7420
cmp  QWORD PTR [rbx], 0x0
je   0xb150
lea  rsi, [rip+0x4cc5]
mov  rdi, rbp
call 0x7310
mov  rsi, r12
mov  rdi, rax
call 0x7080
mov  QWORD PTR [rbx+0x8], rax
test rax, rax
je   0xb112
lea  rsi, [rip+0x4cb0]
mov  rdi, rbp
call 0x7310
mov  rsi, r12
mov  rdi, rax
call 0x7080
mov  QWORD PTR [rbx+0x10], rax
test rax, rax
je   0xb131
lea  rsi, [rip+0x4c9d]
mov  rdi, rbp
call 0x7310
mov  rsi, r12
mov  rdi, rax
call 0x7080
mov  QWORD PTR [rbx+0x20], rax
test rax, rax
je   0xb0d4
lea  rsi, [rip+0x4c87]
mov  rdi, rbp
call 0x7310
mov  rsi, r12
mov  rdi, rax
call 0x7080
mov  QWORD PTR [rbx+0x18], rax
test rax, rax
je   0xb0f3
mov  esi, 0x50
mov  rdi, rbp
call 0x7080
mov  rdi, rax
call 0x79f0
call 0x7090
mov  rdi, QWORD PTR [rbx+0x10]
mov  rsi, rax
call 0x7080
mov  rdi, rax
call 0x7540
movsd  xmm0, QWORD PTR [rip+0x4fdb]
xor  r9d, r9d
mov  r8d, 0x2bc
lea  rcx, [rip+0x4c2d]
lea  rdx, [rip+0x4c2d]
mov  rdi, rax
mov  rbp, rax
lea  rsi, [rip+0x4a3a]
mov  eax, 0x1
call 0x76e0
mov  esi, 0x50
mov  rdi, rbp
call 0x7080
xor  r8d, r8d
xor  ecx, ecx
mov  r9d, 0x1
lea  rdx, [rip+0xffffffffffffe976]
mov  rdi, rax
lea  rsi, [rip+0x4bf3]
call 0x74b0
mov  rdi, QWORD PTR [rbx+0x10]
mov  esi, 0x50
call 0x7080
xor  r8d, r8d
xor  ecx, ecx
mov  r9d, 0x1
lea  rdx, [rip+0xffffffffffffec57]
mov  rdi, rax
lea  rsi, [rip+0x4bd0]
call 0x74b0
mov  rdi, QWORD PTR [rbx]
mov  rsi, r13
call 0x7080
xor  esi, esi
mov  rdi, rax
call 0x7560
mov  rax, QWORD PTR [rsp+0x10]
mov  rsi, QWORD PTR [rbx+0x28]
mov  rdi, QWORD PTR [rax+0x38]
call 0xa460
test eax, eax
jne  0xaff1
mov  rdi, QWORD PTR [rbx]
mov  QWORD PTR [rbx], 0x0
test rdi, rdi
je   0xafc7
call 0x7520
mov  QWORD PTR [rbx+0x8], 0x0
mov  eax, 0x1
mov  QWORD PTR [rbx+0x10], 0x0
mov  QWORD PTR [rbx+0x20], 0x0
mov  QWORD PTR [rbx+0x18], 0x0
jmp  0xabaf
call 0x77b0
mov  rdi, QWORD PTR [rbx]
mov  rsi, rax
call 0x7080
mov  rdi, rax
call 0x79a0
cmp  eax, 0xfffffff9
jne  0xafb3
mov  rdi, QWORD PTR [rbx+0x18]
mov  esi, 0x50
call 0x7080
lea  rsi, [rip+0x4961]
mov  rdi, rax
call 0x7cb0
mov  rsi, rax
test rax, rax
je   0xb096
mov  rdi, rbx
call 0x9e60
mov  rdi, QWORD PTR [rsp+0x10]
call 0xaa70
jmp  0xafb3
xor  eax, eax
mov  rcx, r12
lea  rdx, [rip+0x499d]
xor  edi, edi
mov  esi, 0x10
call 0x7150
xor  eax, eax
jmp  0xabaf
mov  rax, QWORD PTR [rsp+0x20]
xor  edi, edi
mov  esi, 0x10
lea  rdx, [rip+0x4dac]
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
mov  rdi, QWORD PTR [rsp+0x20]
call 0x6fb0
jmp  0xadbb
lea  rdx, [rip+0x4dab]
mov  esi, 0x10
xor  edi, edi
xor  eax, eax
call 0x7150
jmp  0xafb3
call 0x7610
lea  rcx, [rip+0x4dd4]
mov  edx, 0x22a
lea  rsi, [rip+0x476d]
lea  rdi, [rip+0x49f1]
call 0x7260
lea  rcx, [rip+0x4db5]
mov  edx, 0x23b
lea  rsi, [rip+0x474e]
lea  rdi, [rip+0x4a29]
call 0x7260
lea  rcx, [rip+0x4d96]
mov  edx, 0x23d
lea  rsi, [rip+0x472f]
lea  rdi, [rip+0x4a1b]
call 0x7260
lea  rcx, [rip+0x4d77]
mov  edx, 0x237
lea  rsi, [rip+0x4710]
lea  rdi, [rip+0x49c5]
call 0x7260
lea  rcx, [rip+0x4d58]
mov  edx, 0x239
lea  rsi, [rip+0x46f1]
lea  rdi, [rip+0x49b8]
call 0x7260
lea  rcx, [rip+0x4d39]
mov  edx, 0x235
lea  rsi, [rip+0x46d2]
lea  rdi, [rip+0x4974]
endbr64
push r14
xor  edx, edx
push r13
lea  r13, [rip+0x4454]
push r12
mov  rdi, r13
push rbp
push rbx
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rbx, [rsp+0x10]
lea  rsi, [rsp+0x8]
mov  QWORD PTR [rsp], 0x0
mov  QWORD PTR [rsp+0x8], 0x0
mov  rcx, rbx
mov  QWORD PTR [rsp+0x10], 0x0
call 0x7590
test eax, eax
je   0xc388
mov  rdx, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x4409]
lea  rdi, [rip+0x34d5]
xor  eax, eax
call 0x7340
mov  r12, rax
mov  r14, rax
call 0x7960
xor  ecx, ecx
mov  r8, rbx
mov  rsi, r12
mov  rdx, 0xffffffffffffffff
mov  rdi, rax
mov  rbp, rax
call 0x71f0
test eax, eax
je   0xc318
mov  rdi, QWORD PTR [rsp+0x10]
test rdi, rdi
je   0xc270
call 0x6fb0
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  rdi, r14
call 0x76b0
mov  rdi, QWORD PTR [rsp+0x8]
call 0x76b0
test rbp, rbp
je   0xc364
mov  rcx, rsp
lea  rdx, [rip+0x439e]
lea  rsi, [rip+0x437e]
mov  rdi, rbp
call 0x7890
mov  r12, rax
test rax, rax
je   0xc3b8
lea  rdx, [rip+0x4384]
mov  rsi, 0xffffffffffffffff
mov  rdi, rax
xor  r13d, r13d
call 0x7580
test rax, rax
setne  r13b
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0xc2de
call 0x6fb0
mov  rdi, r12
call 0x76b0
mov  rdi, rbp
call 0x7ac0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0xc3b3
add  rsp, 0x20
mov  eax, r13d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x10]
xor  edi, edi
mov  esi, 0x10
lea  rdx, [rip+0x4235]
mov  rcx, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
mov  rdi, QWORD PTR [rsp+0x10]
test rdi, rdi
je   0xc345
call 0x6fb0
mov  rdi, r12
call 0x76b0
mov  rdi, QWORD PTR [rsp+0x8]
call 0x76b0
test rbp, rbp
je   0xc364
mov  rdi, rbp
call 0x7ac0
mov  rdi, QWORD PTR [rsp]
test rdi, rdi
je   0xc372
call 0x6fb0
xor  edi, edi
xor  r13d, r13d
call 0x76b0
jmp  0xc2ee
nop  DWORD PTR [rax+0x0]
mov  rax, QWORD PTR [rsp+0x10]
mov  rcx, r13
mov  esi, 0x10
xor  edi, edi
lea  rdx, [rip+0x41a2]
xor  r14d, r14d
xor  ebp, ebp
mov  r8, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
jmp  0xc257
call 0x7610
mov  rax, QWORD PTR [rsp]
mov  rcx, r13
lea  rdx, [rip+0x41c2]
xor  edi, edi
mov  esi, 0x10
xor  r13d, r13d
mov  r8, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x7150
endbr64
push r13
push r12
mov  r12, rdi
push rbp
call 0xbf60
test rax, rax
je   0xc4f0
lea  rdi, [rip+0x41c6]
mov  rdx, r12
mov  rsi, rax
mov  rbp, rax
call 0x7b80
mov  rdi, rbp
mov  r13, rax
call 0x6fc0
test r13, r13
je   0xc4f0
mov  rdi, r13
call 0x7300
mov  rdi, rax
mov  rbp, rax
call 0x6fe0
test eax, eax
je   0xc500
xor  esi, esi
mov  rdi, rbp
call 0x73a0
mov  rdi, rax
call 0x6f40
mov  rdi, rax
call 0x7270
mov  r12, rax
mov  rdi, r13
call 0x6fc0
mov  rax, r12
pop  rbp
pop  r12
pop  r13
ret
xor  r12d, r12d
pop  rbp
mov  rax, r12
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  esi, DWORD PTR [rip+0x8eae]
test esi, esi
jne  0xc520
lea  rdi, [rip+0x40ee]
call 0x78a0
mov  DWORD PTR [rip+0x8e98], eax
mov  esi, eax
xchg ax, ax
mov  rdi, r12
mov  edx, 0x1
xor  eax, eax
xor  r12d, r12d
lea  r8, [rip+0x411f]
lea  rcx, [rip+0x4134]
call 0x7c40
endbr64
push r12
xor  eax, eax
mov  r12, rdi
lea  rdi, [rip+0x4fdb]
push rbp
push rbx
mov  rbx, rsi
call 0x9240
mov  esi, 0x50
mov  rdi, r12
mov  rbp, QWORD PTR [rbx+0x38]
call 0x7080
lea  rsi, [rip+0x4f70]
mov  rdi, rax
call 0x7cb0
test rax, rax
je   0xaa50
mov  rsi, rax
mov  rdi, rbp
call 0x9e60
mov  rsi, QWORD PTR [rbp+0x28]
test rsi, rsi
je   0xaa48
mov  rdi, QWORD PTR [rbx+0x38]
pop  rbx
pop  rbp
pop  r12
jmp  0xa460
nop  WORD PTR [rax+rax*1+0x0]
pop  rbx
pop  rbp
pop  r12
ret
nop  DWORD PTR [rax]
pop  rbx
lea  rdx, [rip+0x5300]
pop  rbp
mov  esi, 0x10
xor  edi, edi
xor  eax, eax
pop  r12
endbr64
mov  rdi, QWORD PTR [rdi+0x20]
test rdi, rdi
je   0xdc88
sub  rsp, 0x8
call 0x7620
test eax, eax
setne  al
add  rsp, 0x8
movzx  eax, al
ret
nop  DWORD PTR [rax+rax*1+0x0]
xor  eax, eax
endbr64
push rbp
mov  rdi, QWORD PTR [rdi+0x20]
mov  rbp, rsi
mov  esi, 0x50
call 0x7080
mov  rsi, rbp
pop  rbp
mov  rdi, rax
endbr64
push rbx
lea  rdx, [rip+0x6317]
mov  rbx, rdi
mov  esi, 0x80
xor  edi, edi
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
call 0x7150
lea  rax, [rip+0x6303]
xor  edx, edx
xor  ecx, ecx
mov  QWORD PTR [rsp], rax
mov  rsi, rsp
xor  r9d, r9d
xor  r8d, r8d
mov  QWORD PTR [rsp+0x8], rbx
xor  edi, edi
mov  QWORD PTR [rsp+0x10], 0x0
push 0x0
push 0x0
call 0x72c0
pop  rax
pop  rdx
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x8e68
add  rsp, 0x20
pop  rbx
ret
call 0x7610
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffffae1]
call QWORD PTR [rip+0x2463]
endbr64
push r15
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x68
mov  DWORD PTR [rsp+0x2c], edi
mov  edi, 0x6
lea  r15, [rsp+0x20]
lea  rbx, [rsp+0x2c]
mov  QWORD PTR [rsp+0x20], rsi
lea  rsi, [rip+0xab0]
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x58], rax
xor  eax, eax
mov  QWORD PTR [rsp+0x38], 0x0
call 0x2500
lea  rdi, [rip+0xa1e]
call 0x2370
xor  edx, edx
lea  rsi, [rip+0x243c]
mov  rbp, rax
mov  rdi, rax
call 0x2460
lea  rcx, [rsp+0x38]
mov  rdx, r15
mov  rsi, rbx
mov  rdi, rbp
call 0x2400
test eax, eax
je   0x2ad5
mov  rax, QWORD PTR [rip+0x2937]
test rax, rax
je   0x2af6
cmp  QWORD PTR [rax], 0x0
je   0x2af6
cmp  QWORD PTR [rax+0x8], 0x0
je   0x2af6
mov  rdi, rbp
call 0x23d0
mov  edi, DWORD PTR [rip+0x28f7]
test edi, edi
jle  0x2b2d
mov  rax, QWORD PTR [rip+0x28fc]
mov  r14, QWORD PTR [rax]
mov  rax, QWORD PTR [rax+0x8]
mov  QWORD PTR [rsp+0x10], r14
mov  QWORD PTR [rsp+0x8], rax
call 0x24e0
test eax, eax
je   0x2b24
mov  rdi, r14
call 0x25c0
lea  rsi, [rip+0x998]
mov  QWORD PTR [rsp+0x40], 0x0
mov  rdi, rax
mov  r12, rax
call 0x2380
test eax, eax
jne  0x2788
lea  rsi, [rip+0x994]
mov  rdi, r12
call 0x2380
test eax, eax
je   0x2828
lea  rbp, [rip+0x968]
xor  r8d, r8d
xor  ecx, ecx
xor  edx, edx
mov  rsi, rbp
mov  rdi, r12
call 0x23b0
mov  r13, rax
test rax, rax
je   0x28ce
mov  rsi, rbp
mov  rdi, rax
call 0x2490
mov  rdi, rax
call 0x2610
mov  rdi, r13
mov  rbp, rax
call 0x25a0
test rbp, rbp
je   0x28ce
xor  edx, edx
xor  esi, esi
lea  r13, [rsp+0x40]
mov  rdi, rbp
call 0x2510
mov  rdi, rbp
mov  r14, rax
call 0x23f0
mov  rdx, r13
mov  esi, 0x1
mov  rdi, r14
call 0x2530
mov  rdi, r14
mov  rbp, rax
call 0x23f0
mov  rax, QWORD PTR [rsp+0x40]
test rax, rax
jne  0x285e
mov  rdi, r12
call 0x25a0
test rbp, rbp
jne  0x29b6
jmp  0x2898
mov  rdi, r12
call 0x2450
mov  rbp, rax
jmp  0x27cb
mov  rdi, r14
mov  QWORD PTR [rsp+0x8], r8
call 0x24f0
mov  rdi, r14
call 0x25a0
mov  rdi, QWORD PTR [rsp+0x8]
call 0x23f0
mov  rax, QWORD PTR [rsp+0x40]
test rax, rax
je   0x2890
mov  ebx, DWORD PTR [rax]
call 0x2600
mov  rdi, QWORD PTR [rsp+0x40]
cmp  ebx, eax
jne  0x2874
cmp  DWORD PTR [rdi+0x4], 0x2
je   0x288b
mov  rsi, QWORD PTR [rdi+0x8]
lea  rdi, [rip+0x8a7]
xor  eax, eax
call 0x2590
mov  rdi, QWORD PTR [rsp+0x40]
call 0x2470
mov  rdi, r12
call 0x25a0
call 0x24a0
mov  r12d, 0xfffffffe
nop  DWORD PTR [rax+rax*1+0x0]
mov  rax, QWORD PTR [rsp+0x58]
sub  rax, QWORD PTR fs:0x28
jne  0x2b51
add  rsp, 0x68
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rdi, r12
call 0x2420
lea  rdi, [rip+0x836]
mov  rsi, rax
mov  r13, rax
xor  eax, eax
call 0x23c0
mov  rdi, r13
lea  r13, [rsp+0x40]
mov  rbp, rax
call 0x23f0
mov  rdi, rbp
mov  rsi, r13
call 0x2650
mov  rdi, rbp
mov  r14, rax
call 0x23f0
test r14, r14
je   0x2b0f
push rdx
xor  ecx, ecx
mov  rsi, r14
xor  r9d, r9d
push r13
xor  r8d, r8d
mov  edx, 0x1
mov  rdi, r12
call 0x24d0
mov  rax, QWORD PTR [rsp+0x50]
pop  rcx
pop  rsi
test rax, rax
jne  0x2aa4
mov  rdi, r14
call 0x2540
mov  rdx, r13
mov  esi, 0x1
mov  rdi, rax
mov  QWORD PTR [rsp+0x18], rax
call 0x2530
mov  r8, QWORD PTR [rsp+0x18]
test rax, rax
mov  rbp, rax
je   0x2835
mov  esi, 0x50
mov  rdi, rax
mov  QWORD PTR [rsp+0x18], r8
call 0x23a0
mov  rdx, r14
lea  rsi, [rip+0x322]
mov  rdi, rax
call 0x2550
mov  rdi, QWORD PTR [rsp+0x18]
call 0x23f0
mov  rax, QWORD PTR [rsp+0x40]
test rax, rax
jne  0x285e
mov  rdi, r12
call 0x25a0
mov  eax, DWORD PTR [rip+0x2654]
test eax, eax
jne  0x2a7d
call 0x2360
mov  rsi, rax
mov  rax, QWORD PTR [rbp+0x0]
test rax, rax
je   0x29da
cmp  QWORD PTR [rax], rsi
je   0x2a20
mov  rdi, rbp
call 0x25b0
mov  r12d, eax
test eax, eax
jne  0x2a20
mov  edx, DWORD PTR [rip+0x2625]
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdi, rbp
call 0x2cd0
test eax, eax
je   0x2b44
mov  DWORD PTR [rip+0x260a], 0x1
mov  rdi, rbp
call 0x25a0
call 0x24a0
jmp  0x28a8
mov  rsi, r15
mov  rdi, rbx
call 0x2480
mov  rax, QWORD PTR [rsp+0x8]
mov  rdx, r13
lea  rsi, [rip+0x386]
lea  rdi, [rip+0x712]
mov  QWORD PTR [rsp+0x40], rbp
mov  QWORD PTR [rsp+0x48], rax
mov  eax, DWORD PTR [rip+0x25c3]
mov  DWORD PTR [rsp+0x50], eax
call 0x2570
call 0x23e0
mov  rdi, rbp
call 0x25a0
call 0x24a0
cmp  DWORD PTR [rsp+0x54], 0x1
sbb  r12d, r12d
and  r12d, 0xfffffffe
jmp  0x28a8
mov  rdx, QWORD PTR [rsp+0x10]
lea  rsi, [rip+0x1c7]
lea  rdi, [rip+0x6b2]
mov  DWORD PTR [rip+0x257e], 0x0
call 0x2570
jmp  0x29c4
mov  rsi, QWORD PTR [rax+0x8]
lea  rdi, [rip+0x5c9]
xor  eax, eax
call 0x2590
mov  rdi, QWORD PTR [rsp+0x40]
call 0x2470
mov  rdi, r14
call 0x25a0
mov  rdi, r12
call 0x25a0
jmp  0x2898
mov  rax, QWORD PTR [rsp+0x38]
lea  rdi, [rip+0x65d]
mov  rsi, QWORD PTR [rax+0x8]
xor  eax, eax
call 0x2590
mov  rdi, QWORD PTR [rsp+0x38]
call 0x2470
mov  rdi, rbp
or   r12d, 0xffffffff
call 0x2e00
mov  rdi, rbp
call 0x23d0
jmp  0x28a8
mov  rax, QWORD PTR [rsp+0x40]
lea  rdi, [rip+0x55d]
mov  rsi, QWORD PTR [rax+0x8]
jmp  0x287f
or   r12d, 0xffffffff
jmp  0x28a8
lea  rdi, [rip+0x51c]
xor  eax, eax
or   r12d, 0xffffffff
call 0x2590
jmp  0x28a8
mov  rdi, rbp
call 0x25a0
jmp  0x2898
call 0x2430
endbr64
push r14
push r13
mov  r13, rsi
push r12
mov  r12d, edi
push rbp
push rbx
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x1cb8
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
mov  rbp, QWORD PTR [rip+0x5329]
call 0x12a0
mov  r14, QWORD PTR [rbp+0x0]
mov  rbx, rax
mov  rcx, r14
test r12d, r12d
je   0x1d80
lea  rdi, [rip+0x23f2]
mov  edx, 0x7
mov  esi, 0x1
call 0x1450
mov  edi, DWORD PTR [rbx]
test edi, edi
jne  0x1de0
mov  rdi, QWORD PTR [rbp+0x0]
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
lea  rax, [rsp+0x100]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1290
test r12d, r12d
jg   0x1e09
mov  DWORD PTR [rbx], 0x0
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x1e04
add  rsp, 0xd0
mov  eax, r12d
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
nop  WORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x2366]
mov  edx, 0x9
mov  esi, 0x1
call 0x1450
mov  edi, DWORD PTR [rbx]
test edi, edi
jne  0x1de0
mov  rdi, QWORD PTR [rbp+0x0]
mov  rcx, rsp
mov  rdx, r13
mov  esi, 0x1
lea  rax, [rsp+0x100]
mov  DWORD PTR [rsp], 0x10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x1290
jmp  0x1d4a
nop  DWORD PTR [rax+rax*1+0x0]
call 0x1470
mov  rdi, QWORD PTR [rbp+0x0]
mov  esi, 0x1
lea  rdx, [rip+0x22f3]
mov  rcx, rax
xor  eax, eax
call 0x1460
jmp  0x1d07
call 0x12f0
mov  edi, r12d
call 0x1440
endbr64
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
call 0x3650
mov  rbp, QWORD PTR [rip+0x4163]
lea  r13, [rax+0x1]
cmp  QWORD PTR [rip+0x4160], r13
mov  rbx, rax
jae  0x646e
mov  rdi, rbp
mov  rsi, r13
call 0x3860
mov  rbp, rax
test rax, rax
je   0x64d0
mov  QWORD PTR [rip+0x4139], rax
mov  QWORD PTR [rip+0x413a], r13
mov  rsi, r12
mov  rdi, rbp
mov  rdx, r13
call 0x35a0
mov  BYTE PTR [rbp+rbx*1+0x0], 0x0
mov  esi, 0xa
mov  rdi, rbp
call 0x36f0
test rax, rax
je   0x6496
mov  BYTE PTR [rax], 0x0
mov  ebx, 0x1
mov  r12, rsp
mov  QWORD PTR [r12+rbx*8-0x8], rbp
mov  esi, 0x3a
mov  rdi, rbp
call 0x36a0
mov  edx, ebx
test rax, rax
je   0x64d8
mov  BYTE PTR [rax], 0x0
lea  rbp, [rax+0x1]
add  rbx, 0x1
cmp  edx, 0x3
jle  0x649e
nop  WORD PTR [rax+rax*1+0x0]
xor  eax, eax
jmp  0x6551
nop  DWORD PTR [rax+0x0]
cmp  ebx, 0x4
jne  0x64d0
mov  rax, QWORD PTR [rsp]
cmp  QWORD PTR [rip+0x4087], 0x0
mov  QWORD PTR [rip+0x4090], rax
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rip+0x408c], rax
jne  0x65a0
cmp  QWORD PTR [rip+0x4056], 0x0
jne  0x6570
mov  rdi, QWORD PTR [rsp+0x10]
lea  rdx, [rip+0x4058]
lea  rsi, [rip+0x4049]
call 0x60e0
mov  rdi, QWORD PTR [rsp+0x18]
lea  rdx, [rip+0x4030]
lea  rsi, [rip+0x4021]
mov  QWORD PTR [rip+0x4052], rax
call 0x60e0
mov  QWORD PTR [rip+0x404e], rax
lea  rax, [rip+0x402f]
mov  rdx, QWORD PTR [rsp+0x28]
sub  rdx, QWORD PTR fs:0x28
jne  0x65c7
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rip+0x3fe1]
mov  QWORD PTR [rip+0x3fde], 0x0
call 0x3550
mov  QWORD PTR [rip+0x3fc6], 0x0
jmp  0x650c
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x3fc1]
mov  QWORD PTR [rip+0x3fbe], 0x0
call 0x3550
mov  QWORD PTR [rip+0x3fa6], 0x0
jmp  0x6502
endbr64
test rsi, rsi
je   0x6a1f
push r15
push r14
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x28
test rdi, rdi
je   0x6a18
mov  rax, QWORD PTR [rdi]
mov  r12, rsi
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x3650
mov  r13, rax
mov  rax, QWORD PTR [rbx+0x8]
mov  rdi, rax
mov  QWORD PTR [rsp+0x10], rax
call 0x3650
mov  rbp, QWORD PTR [rbx+0x10]
mov  QWORD PTR [rsp+0x18], rax
lea  r14, [r13+rax*1+0xa]
test rbp, rbp
je   0x68a6
mov  r15, rbp
jmp  0x689a
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
call 0x3650
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0x6890
mov  rbx, QWORD PTR [rbx+0x18]
test rbx, rbx
je   0x68ce
mov  r15, rbx
jmp  0x68c2
nop  DWORD PTR [rax+0x0]
call 0x3650
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0x68b8
mov  rdi, r14
call 0x3810
mov  r14, rax
test rax, rax
je   0x6a18
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdx, r13
mov  rdi, rax
add  r13, r14
call 0x37c0
mov  r15, QWORD PTR [rsp+0x18]
mov  BYTE PTR [r13+0x0], 0x3a
lea  rcx, [r13+0x1]
mov  rsi, QWORD PTR [rsp+0x10]
mov  rdi, rcx
mov  rdx, r15
call 0x37c0
mov  rsi, QWORD PTR [rbp+0x0]
mov  rcx, rax
add  rcx, r15
mov  BYTE PTR [rcx], 0x3a
lea  r13, [rcx+0x1]
test rsi, rsi
je   0x6a10
add  rbp, 0x8
jmp  0x693f
nop  DWORD PTR [rax+rax*1+0x0]
mov  BYTE PTR [rax], 0x2c
lea  r13, [rax+0x1]
mov  rdi, r13
add  rbp, 0x8
call 0x35c0
mov  rdi, r13
call 0x3650
mov  rsi, QWORD PTR [rbp-0x8]
add  rax, r13
test rsi, rsi
jne  0x6938
mov  rsi, QWORD PTR [rbx]
mov  BYTE PTR [rax], 0x3a
lea  rbp, [rax+0x1]
test rsi, rsi
je   0x69a0
add  rbx, 0x8
jmp  0x6980
nop  DWORD PTR [rax+0x0]
mov  BYTE PTR [rbp+0x0], 0x2c
add  rbp, 0x1
mov  rdi, rbp
add  rbx, 0x8
call 0x35c0
mov  rdi, rbp
call 0x3650
mov  rsi, QWORD PTR [rbx-0x8]
add  rbp, rax
test rsi, rsi
jne  0x6978
mov  eax, 0xa
mov  WORD PTR [rbp+0x0], ax
movsx  edi, BYTE PTR [r14]
test dil, dil
je   0x69f0
mov  rbx, r14
jmp  0x69cd
nop  WORD PTR [rax+rax*1+0x0]
movsx  edi, BYTE PTR [rbx+0x1]
add  rbx, 0x1
test dil, dil
je   0x69f0
mov  rsi, r12
call 0x3790
cmp  eax, 0xffffffff
jne  0x69c0
mov  rdi, r14
mov  DWORD PTR [rsp+0x8], eax
call 0x3550
mov  eax, DWORD PTR [rsp+0x8]
jmp  0x69fa
nop  DWORD PTR [rax+0x0]
mov  rdi, r14
call 0x3550
xor  eax, eax
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  rax, r13
jmp  0x695f
mov  eax, 0xffffffff
jmp  0x69fa
or   eax, 0xffffffff
endbr64
cmp  QWORD PTR [rip+0x3f74], 0x0
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
je   0x66b0
test r12, r12
je   0x6613
mov  esi, DWORD PTR [rip+0x3f58]
mov  rdi, QWORD PTR [rip+0x3f49]
mov  rdx, r12
call 0x5c90
mov  r14, QWORD PTR [rip+0x3f3a]
cmp  r14, rax
je   0x6687
pop  rbx
xor  eax, eax
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xchg ax, ax
mov  rdi, r12
call 0x37b0
test eax, eax
jne  0x66e0
mov  rax, QWORD PTR [rip+0x3f19]
mov  rdi, r14
lea  r13, [rax+rax*1]
mov  rsi, r13
call 0x3860
mov  rbx, rax
test rax, rax
je   0x6613
mov  rdi, rax
mov  QWORD PTR [rip+0x3ef0], rax
mov  QWORD PTR [rip+0x3ef1], r13
call 0x3650
mov  esi, r13d
mov  rdx, r12
sub  esi, eax
lea  rdi, [rbx+rax*1]
mov  rbp, rax
call 0x5c90
mov  r14, QWORD PTR [rip+0x3ec9]
add  rbp, r14
cmp  rax, rbp
jne  0x6613
mov  esi, 0xa
mov  rdi, r14
call 0x36f0
test rax, rax
je   0x6620
mov  BYTE PTR [rax], 0x0
pop  rbx
mov  rdi, r14
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0x6410
nop  DWORD PTR [rax+0x0]
mov  edi, 0x2000
call 0x3810
mov  QWORD PTR [rip+0x3e87], rax
test rax, rax
je   0x6613
mov  QWORD PTR [rip+0x3e7b], 0x2000
jmp  0x65ed
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0xa
mov  rdi, r14
call 0x36f0
test rax, rax
je   0x669c
endbr64
mov  rdi, QWORD PTR [rip+0x41d5]
test rdi, rdi
je   0x6400
sub  rsp, 0x8
call 0x3610
mov  QWORD PTR [rip+0x41bc], 0x0
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rip+0x41a5], 0x0
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x3e48]
test rdi, rdi
je   0x67f0
call 0x36b0
mov  rdi, QWORD PTR [rip+0x3e33]
lea  r13, [rip+0x9fc]
lea  rbp, [rip+0x8e5]
jmp  0x67b4
nop  DWORD PTR [rax]
call 0x65d0
mov  r12, rax
test rax, rax
je   0x67db
mov  rsi, QWORD PTR [r12]
mov  rdi, rbx
call 0x3780
test eax, eax
je   0x67db
mov  rdi, QWORD PTR [rip+0x3dfc]
test rdi, rdi
jne  0x6790
mov  rsi, r13
mov  rdi, rbp
call 0x38f0
mov  rdi, rax
mov  QWORD PTR [rip+0x3de2], rax
call 0x65d0
mov  r12, rax
test rax, rax
jne  0x679d
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  rdi, [rip+0x879]
lea  rsi, [rip+0x982]
call 0x38f0
mov  QWORD PTR [rip+0x3da6], rax
mov  rdi, rax
endbr64
mov  rdi, QWORD PTR [rip+0x3ea5]
test rdi, rdi
je   0x6718
jmp  0x65d0
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rdi, [rip+0x94d]
lea  rsi, [rip+0xa56]
call 0x38f0
mov  QWORD PTR [rip+0x3e7a], rax
mov  rdi, rax
add  rsp, 0x8
endbr64
mov  rdi, QWORD PTR [rip+0x4215]
test rdi, rdi
je   0x63a8
jmp  0x36b0
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rsi, [rip+0xdcd]
lea  rdi, [rip+0xcb6]
call 0x38f0
mov  QWORD PTR [rip+0x41ea], rax
add  rsp, 0x8
ret
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffffe11]
call QWORD PTR [rip+0x2c63]
endbr64
push r14
push r13
push r12
push rbp
push rbx
sub  rsp, 0x20
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
cmp  edi, 0x1
jle  0x1302
xor  edi, edi
mov  r12, QWORD PTR [rsi+0x8]
lea  r14, [rsp+0xc]
call 0x1190
mov  rdi, rsp
mov  QWORD PTR [rsp], rax
call 0x1160
48 ba 05 7c f3 6a e2 59 d1 48 movabs rdx, 0x48d159e26af37c05
mov  rcx, rax
movzx  eax, WORD PTR [rax+0x14]
mov  rsi, QWORD PTR [rcx+0x28]
add  ax, 0x76c
rol  ax, 0x8
mov  WORD PTR [rsp+0xc], ax
movzx  eax, WORD PTR [rcx+0x1c]
rol  ax, 0x8
mov  WORD PTR [rsp+0xe], ax
mov  rax, rsi
sar  rsi, 0x3f
imul rdx
mov  eax, DWORD PTR [rcx+0x8]
mov  BYTE PTR [rsp+0x11], al
sar  rdx, 0x8
sub  rdx, rsi
mov  esi, DWORD PTR [rcx+0x20]
mov  BYTE PTR [rsp+0x10], dl
mov  eax, DWORD PTR [rcx+0x4]
test esi, esi
mov  esi, 0x2
mov  BYTE PTR [rsp+0x12], al
mov  eax, DWORD PTR [rcx]
setne  BYTE PTR [rsp+0x14]
xor  edi, edi
mov  BYTE PTR [rsp+0x13], al
xor  eax, eax
mov  WORD PTR [rsp+0x15], di
mov  rdi, r12
mov  BYTE PTR [rsp+0x17], 0x0
call 0x1180
mov  r13d, eax
test eax, eax
js   0x134c
lea  rdi, [rip+0xdcb]
xor  eax, eax
lea  r12, [rsp+0x18]
mov  rbx, r14
call 0x1120
lea  rbp, [rip+0xdc8]
nop  WORD PTR [rax+rax*1+0x0]
movzx  esi, BYTE PTR [rbx]
mov  rdi, rbp
xor  eax, eax
add  rbx, 0x1
call 0x1120
cmp  rbx, r12
jne  0x1290
lea  rdi, [rip+0xdbd]
xor  eax, eax
call 0x1120
push 0x1
mov  ecx, 0xc0000
xor  edx, edx
push 0x1
mov  r9d, 0xc
mov  r8, r14
mov  esi, 0x1
mov  edi, r13d
call 0x1150
pop  rdx
pop  rcx
test eax, eax
jne  0x133c
mov  edi, r13d
call 0x1100
xor  eax, eax
mov  rdx, QWORD PTR [rsp+0x18]
sub  rdx, QWORD PTR fs:0x28
jne  0x1369
add  rsp, 0x20
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
mov  rdi, QWORD PTR [rsi]
call 0x1110
mov  edx, 0x5
lea  rsi, [rip+0xcf2]
xor  edi, edi
mov  rbp, rax
call 0x1130
mov  rsi, rbp
mov  rdi, rax
xor  eax, eax
call 0x1120
mov  rdi, rbp
call 0x10f0
mov  eax, 0x1
jmp  0x12e5
lea  rdi, [rip+0xd15]
xor  eax, eax
call 0x1120
jmp  0x12db
mov  rcx, r12
lea  rdx, [rip+0xcd1]
xor  edi, edi
xor  eax, eax
mov  esi, 0x10
call 0x1170
jmp  0x12e3
call 0x1140
endbr64
push r14
xor  ecx, ecx
push r13
push r12
push rbp
push rbx
mov  r12, QWORD PTR [rdi+0x18]
mov  rbx, rdi
sub  r12, QWORD PTR [rdi+0x10]
mov  rbp, QWORD PTR [rdi+0x8]
add  rsi, r12
mov  rax, r12
setb cl
add  rsi, QWORD PTR [rdi+0x30]
mov  rdi, QWORD PTR [rdi]
setb dl
shr  rax, 0x3
cmp  rsi, rdi
lea  r14, [rsi+rax*1+0x64]
cmovb  rsi, rdi
cmp  r14, rsi
cmovb  r14, rsi
test rcx, rcx
jne  0x4074f3
movzx  esi, dl
test rsi, rsi
jne  0x4074f3
mov  r13, QWORD PTR [rbx+0x38]
test BYTE PTR [rbx+0x50], 0x1
jne  0x4074e1
mov  rdi, r14
call r13
mov  r13, rax
test r13, r13
je   0x4074f3
mov  r8, QWORD PTR [rbx+0x30]
add  r14, r13
mov  QWORD PTR [rbx+0x8], r13
mov  rdx, r12
mov  QWORD PTR [r13+0x8], rbp
mov  rsi, QWORD PTR [rbx+0x10]
mov  QWORD PTR [rbx+0x20], r14
mov  QWORD PTR [r13+0x0], r14
lea  r14, [r13+r8*1+0x10]
not  r8
and  r14, r8
mov  rdi, r14
call 0x4028b0
movzx  r9d, BYTE PTR [rbx+0x50]
test r9b, 0x2
jne  0x419d2d
mov  r10, QWORD PTR [rbx+0x30]
lea  r11, [rbp+r10*1+0x10]
not  r10
and  r10, r11
cmp  QWORD PTR [rbx+0x10], r10
je   0x419d4f
add  r12, r14
movq xmm0, r14
and  BYTE PTR [rbx+0x50], 0xfd
movq xmm1, r12
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rbx+0x10], xmm0
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
ret
mov  rcx, QWORD PTR [rbp+0x8]
and  r9b, 0x1
mov  rdx, QWORD PTR [rbx+0x40]
mov  QWORD PTR [r13+0x8], rcx
jne  0x40750b
mov  rdi, rbp
call rdx
endbr64
or   BYTE PTR [rdi+0x50], 0x1
movq xmm0, rcx
movq xmm1, r8
mov  QWORD PTR [rdi+0x48], r9
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rdi+0x38], xmm0
endbr64
mov  rdx, QWORD PTR [rdi+0x8]
test rdx, rdx
je   0x415e83
cmp  rdx, rsi
jb   0x415e7e
mov  rdx, QWORD PTR [rdx+0x8]
jmp  0x415e6e
cmp  QWORD PTR [rdx], rsi
jb   0x415e78
test rdx, rdx
setne  al
movzx  eax, al
endbr64
and  BYTE PTR [rdi+0x50], 0xfe
movq xmm0, rcx
movq xmm1, r8
punpcklqdq xmm0, xmm1
movups XMMWORD PTR [rdi+0x38], xmm0
endbr64
mov  rax, QWORD PTR [rdi+0x8]
xor  r8d, r8d
test rax, rax
je   0x415eac
mov  rdx, QWORD PTR [rax]
sub  rdx, rax
mov  rax, QWORD PTR [rax+0x8]
add  r8, rdx
jmp  0x415e98
mov  rax, r8
endbr64
push r12
push rbp
mov  rbp, rsi
push rbx
mov  rbx, rdi
mov  rdi, QWORD PTR [rdi+0x8]
test rdi, rdi
je   0x418e50
cmp  rdi, rbp
jb   0x418e5e
mov  r12, QWORD PTR [rdi+0x8]
mov  rdx, QWORD PTR [rbx+0x40]
test BYTE PTR [rbx+0x50], 0x1
jne  0x418e93
cmp  rdx, 0x418ea0
jne  0x418e8c
mov  rcx, QWORD PTR [rdi]
sub  rcx, rdi
cmp  rcx, 0x10000
jne  0x418e39
mov  rsi, QWORD PTR [rip+0x2c87f]
mov  QWORD PTR [rdi], rsi
mov  QWORD PTR [rip+0x2c875], rdi
or   BYTE PTR [rbx+0x50], 0x2
test r12, r12
je   0x418e50
mov  rdi, r12
jmp  0x418de7
call 0x4025a0
mov  rdi, r12
or   BYTE PTR [rbx+0x50], 0x2
test r12, r12
jne  0x418de7
nop  WORD PTR [rax+rax*1+0x0]
test rbp, rbp
jne  0x402bff
pop  rbx
pop  rbp
pop  r12
ret
mov  rax, QWORD PTR [rdi]
cmp  rax, rbp
jb   0x418dec
movq xmm0, rdi
movq xmm1, rbp
movq xmm3, rbp
movq xmm2, rax
punpcklqdq xmm0, xmm1
punpcklqdq xmm3, xmm2
movups XMMWORD PTR [rbx+0x8], xmm0
movups XMMWORD PTR [rbx+0x18], xmm3
jmp  0x418e59
call rdx
mov  rdi, r12
jmp  0x418e41
jmp  0x402c04
endbr64
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x32f8
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x5cb3]
mov  rdi, QWORD PTR [rax]
call 0x2460
lea  rdx, [rsp+0xf0]
xor  edi, edi
lea  rcx, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], rdx
lea  rsi, [rip+0x2eb1]
mov  edx, 0x5
mov  QWORD PTR [rsp+0x10], rcx
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
call 0x2390
mov  rbx, QWORD PTR [rip+0x5ca3]
mov  esi, 0x1
lea  rcx, [rip+0x2cd8]
mov  rdx, rax
xor  eax, eax
mov  rdi, QWORD PTR [rbx]
call 0x2510
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
call 0x2300
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
je   0x3396
call 0x23b0
add  rsp, 0xd8
pop  rbx
pop  r12
endbr64
push r12
mov  r12, rdi
push rbx
sub  rsp, 0xd8
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x294a
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
mov  rax, QWORD PTR [rip+0x6661]
mov  rdi, QWORD PTR [rax]
call 0x2460
lea  rdx, [rsp+0xf0]
xor  edi, edi
lea  rcx, [rsp+0x20]
mov  QWORD PTR [rsp+0x8], rdx
lea  rsi, [rip+0x37f3]
mov  edx, 0x5
mov  QWORD PTR [rsp+0x10], rcx
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
call 0x2390
mov  rbx, QWORD PTR [rip+0x6651]
mov  esi, 0x1
lea  rcx, [rip+0x3686]
mov  rdx, rax
xor  eax, eax
mov  rdi, QWORD PTR [rbx]
call 0x2510
mov  rdi, QWORD PTR [rbx]
mov  rcx, rsp
mov  rdx, r12
mov  esi, 0x1
call 0x2300
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
je   0x29e8
call 0x23b0
add  rsp, 0xd8
pop  rbx
pop  r12
ret
endbr64
sub  rsp, 0x8
mov  eax, 0x1
test rdi, rdi
cmove  rdi, rax
mov  edi, edi
call 0x7680
test rax, rax
je   0x22905
add  rsp, 0x8
ret
mov  rdi, QWORD PTR [rip+0x10244]
test rdi, rdi
je   0x22922
call 0x228c0
lea  rdi, [rip+0x7c9c]
call 0x228c0
lea  rdi, [rip+0x272c]
call 0x228c0
or   edi, 0xffffffff
endbr64
test rdi, rdi
je   0x22880
jmp  0x7630
xchg ax, ax
endbr64
test rdi, rdi
je   0x22950
jmp  0x7630
xchg ax, ax
ret
endbr64
push rbp
mov  rbp, rsp
push r15
push r14
push r13
push r12
push rbx
sub  rsp, 0x58
mov  DWORD PTR [rbp-0x64], edi
mov  r14, QWORD PTR [rsi]
mov  QWORD PTR [rbp-0x70], rsi
lea  rsi, [rip+0x2fa1]
mov  rdi, r14
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x38], rax
xor  eax, eax
call 0x2610
test rax, rax
je   0x2aad
lea  rax, [rip+0x1733]
mov  QWORD PTR [rbp-0x78], rax
lea  rdi, [rip+0x2f7b]
call 0x2350
mov  r14, rax
test rax, rax
je   0x2724
mov  rdi, rax
mov  rbx, rsp
call 0x23f0
mov  rcx, rsp
mov  r15, rax
lea  rax, [rax+0x18]
mov  rdx, rax
and  rax, 0xfffffffffffff000
and  rdx, 0xfffffffffffffff0
sub  rcx, rax
cmp  rsp, rcx
je   0x26e1
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
jmp  0x26ca
mov  rax, rdx
and  eax, 0xfff
sub  rsp, rax
test rax, rax
je   0x26f7
or   QWORD PTR [rsp+rax*1-0x8], 0x0
mov  rdi, rsp
mov  rdx, r15
mov  rsi, r14
call 0x24f0
mov  BYTE PTR [rsp+r15*1+0x8], 0x0
mov  rdi, rsp
48 b8 2f 2e 76 73 74 70 72 63 movabs rax, 0x6372707473762e2f
mov  QWORD PTR [rsp+r15*1], rax
call 0x2da0
mov  rsp, rbx
cmp  DWORD PTR [rbp-0x64], 0x1
jle  0x290f
mov  r12d, 0x1
jmp  0x274e
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
add  r12d, 0x1
cmp  DWORD PTR [rbp-0x64], r12d
jle  0x290f
mov  rcx, QWORD PTR [rbp-0x70]
movsxd rax, r12d
lea  rbx, [rcx+rax*8]
mov  r13, QWORD PTR [rbx]
cmp  BYTE PTR [r13+0x0], 0x2d
jne  0x2740
movzx  eax, BYTE PTR [r13+0x1]
cmp  al, 0x2d
je   0x2904
test al, al
je   0x2740
mov  r14d, 0x1
jmp  0x2834
nop
lea  rax, [r13+r14*1+0x0]
movzx  edx, BYTE PTR [rax]
cmp  dl, 0x68
je   0x2aff
cmp  dl, 0x73
je   0x2868
cmp  dl, 0x6b
je   0x289f
cmp  dl, 0x6f
je   0x28d6
cmp  dl, 0x62
jne  0x27c1
lea  rdx, [rip+0x488c]
mov  DWORD PTR [rdx], 0x1
movzx  edx, BYTE PTR [rax]
cmp  dl, 0x6e
jne  0x27d6
lea  rdx, [rip+0x4877]
mov  DWORD PTR [rdx], 0x0
movzx  edx, BYTE PTR [rax]
cmp  dl, 0x66
jne  0x27ee
lea  rax, [rip+0x482e]
mov  BYTE PTR [rax], 0x41
mov  r13, QWORD PTR [rbx]
movzx  edx, BYTE PTR [r13+r14*1+0x0]
cmp  dl, 0x69
jne  0x2806
lea  rax, [rip+0x4816]
mov  BYTE PTR [rax], 0x4d
mov  r13, QWORD PTR [rbx]
movzx  edx, BYTE PTR [r13+r14*1+0x0]
movsx  r15d, dl
lea  rdi, [rip+0x2e07]
mov  esi, r15d
call 0x2420
test rax, rax
je   0x2aeb
add  r14, 0x1
movzx  eax, BYTE PTR [r13+r14*1+0x0]
test al, al
je   0x2740
cmp  al, 0x64
jne  0x2780
lea  r15, [rip+0x4805]
mov  rdi, QWORD PTR [r15]
test rdi, rdi
je   0x2780
call 0x2360
mov  QWORD PTR [r15], 0x0
mov  r13, QWORD PTR [rbx]
jmp  0x2780
nop  DWORD PTR [rax+rax*1+0x0]
add  r12d, 0x1
cmp  DWORD PTR [rbp-0x64], r12d
je   0x2aff
mov  rcx, QWORD PTR [rbp-0x70]
movsxd rax, r12d
mov  rdx, QWORD PTR [rcx+rax*8]
lea  rax, [rip+0x47c8]
mov  QWORD PTR [rax], rdx
mov  r13, QWORD PTR [rbx]
lea  rax, [r13+r14*1+0x0]
movzx  edx, BYTE PTR [rax]
cmp  dl, 0x6b
jne  0x27a3
add  r12d, 0x1
cmp  DWORD PTR [rbp-0x64], r12d
je   0x2aff
mov  rcx, QWORD PTR [rbp-0x70]
movsxd rax, r12d
mov  rdx, QWORD PTR [rcx+rax*8]
lea  rax, [rip+0x4799]
mov  QWORD PTR [rax], rdx
mov  r13, QWORD PTR [rbx]
lea  rax, [r13+r14*1+0x0]
movzx  edx, BYTE PTR [rax]
cmp  dl, 0x6f
jne  0x27ac
add  r12d, 0x1
cmp  DWORD PTR [rbp-0x64], r12d
je   0x2aff
mov  rsi, QWORD PTR [rbp-0x70]
movsxd rax, r12d
mov  rdi, QWORD PTR [rsi+rax*8]
call 0x2da0
mov  r13, QWORD PTR [rbx]
lea  rax, [r13+r14*1+0x0]
movzx  edx, BYTE PTR [rax]
jmp  0x27ac
cmp  BYTE PTR [r13+0x2], 0x0
jne  0x2b0b
lea  rax, [rip+0x473a]
xor  esi, esi
lea  rdi, [rbp-0x60]
mov  rax, QWORD PTR [rax]
mov  QWORD PTR [rbp-0x58], rax
lea  rax, [rip+0x472e]
mov  rax, QWORD PTR [rax]
mov  QWORD PTR [rbp-0x60], rax
call 0x2530
test eax, eax
js   0x2bab
lea  r15, [rbp-0x45]
mov  esi, 0xd
mov  rdi, r15
call 0x23b0
cmp  eax, 0xb
jle  0x2b90
lea  r14, [rip+0x2cf7]
mov  rdi, r15
mov  rsi, r14
call 0x24b0
test eax, eax
jne  0x2b61
mov  rdi, r14
call 0x2450
test eax, eax
js   0x2b32
lea  r14, [rip+0xa67]
mov  edi, 0x2
mov  rsi, r14
call 0x24c0
mov  rsi, r14
mov  edi, 0xf
call 0x24c0
mov  rsi, r14
mov  edi, 0x1
call 0x24c0
mov  rsi, r14
mov  edi, 0x3
call 0x24c0
mov  rsi, r14
mov  edi, 0xd
call 0x24c0
lea  rsi, [rip+0x197f]
mov  edi, 0xe
call 0x24c0
lea  rbx, [rip+0x4666]
mov  rdi, QWORD PTR [rbx]
test rdi, rdi
je   0x29f7
call 0x2400
test eax, eax
js   0x2bc1
mov  r12, QWORD PTR [rbp-0x70]
mov  r13d, DWORD PTR [rbp-0x64]
mov  ebx, 0x1
add  r12, 0x8
sub  r13d, 0x1
jne  0x2a29
jmp  0x2a6a
mov  rax, QWORD PTR [rbp-0x78]
call rax
lea  eax, [r13-0x1]
lea  rdx, [r12+0x8]
mov  r13d, eax
mov  r12, rdx
test eax, eax
je   0x2a6a
mov  rdi, QWORD PTR [r12]
test ebx, ebx
je   0x2a10
cmp  BYTE PTR [rdi], 0x2d
jne  0x2a10
movzx  ecx, BYTE PTR [rdi+0x1]
lea  eax, [r13-0x1]
lea  rdx, [r12+0x8]
cmp  cl, 0x2d
je   0x2ad5
sub  ecx, 0x6b
cmp  cl, 0x8
ja   0x2a1f
mov  esi, 0x105
bt   rsi, rcx
jae  0x2a1f
lea  eax, [r13-0x2]
lea  rdx, [r12+0x10]
jmp  0x2a1f
lea  rdi, [rip+0x2c09]
call 0x23a0
mov  rdi, QWORD PTR [rbp-0x78]
call 0x43e0
call 0x2520
call 0x25c0
mov  rax, QWORD PTR [rbp-0x38]
sub  rax, QWORD PTR fs:0x28
jne  0x2b2d
lea  rsp, [rbp-0x28]
xor  eax, eax
pop  rbx
pop  r12
pop  r13
pop  r14
pop  r15
pop  rbp
ret
lea  rsi, [rip+0x2b59]
mov  rdi, r14
call 0x2610
test rax, rax
je   0x2bf3
lea  rax, [rip+0xb34]
mov  QWORD PTR [rbp-0x78], rax
jmp  0x2691
test eax, eax
je   0x2a6a
mov  rdi, QWORD PTR [r12+0x8]
xor  ebx, ebx
mov  r12, rdx
mov  r13d, eax
jmp  0x2a10
mov  edx, r15d
lea  rsi, [rip+0x2b2b]
mov  edi, 0x1
call 0x2550
mov  rax, QWORD PTR [rbp-0x70]
mov  rdi, QWORD PTR [rax]
call 0x2d00
mov  edi, 0x1
mov  rdx, r13
lea  rsi, [rip+0x28fe]
xor  eax, eax
call 0x2550
mov  rax, QWORD PTR [rbp-0x70]
mov  rdi, QWORD PTR [rax]
call 0x2d00
call 0x2410
mov  rax, QWORD PTR [rip+0x44bf]
mov  edx, 0x16
mov  esi, 0x1
lea  rdi, [rip+0x2b19]
mov  rcx, QWORD PTR [rax]
call 0x25e0
call 0x25c0
mov  edi, 0x2
call 0x25d0
mov  rax, QWORD PTR [rip+0x4490]
mov  edx, 0x23
mov  esi, 0x1
lea  rdi, [rip+0x28f7]
mov  rcx, QWORD PTR [rax]
call 0x25e0
call 0x25c0
mov  edi, 0x2
call 0x25d0
lea  rdi, [rip+0x2aa6]
call 0x2440
call 0x25c0
mov  edi, 0x2
call 0x25d0
lea  rdi, [rip+0x288e]
call 0x2440
mov  edi, 0x2
call 0x25d0
mov  rdi, QWORD PTR [rbx]
call 0x2590
mov  edx, 0x4e
mov  esi, 0x1
mov  rax, QWORD PTR [rip+0x441e]
lea  rdi, [rip+0x28b7]
mov  rcx, QWORD PTR [rax]
call 0x25e0
mov  edi, 0x3
call 0x25d0
lea  rdi, [rip+0x27f6]
call 0x23a0
mov  rdi, r14
endbr64
lea  rax, [rip+0x2d65]
mov  edx, DWORD PTR [rax]
test edx, edx
jne  0x4340
sub  rsp, 0x8
cmp  rdi, QWORD PTR [rip+0x2ce4]
mov  DWORD PTR [rax], 0x1
sete al
mov  BYTE PTR [rip+0x2d84], 0x49
mov  DWORD PTR [rip+0x3d7a], 0x3
lea  eax, [rax+rax*8+0x4c]
mov  BYTE PTR [rip+0x2d71], al
lea  rax, [rip+0x2cf9]
mov  DWORD PTR [rip+0x3d63], 0x0
movzx  eax, BYTE PTR [rax]
mov  BYTE PTR [rip+0x2d58], al
call 0x3520
mov  BYTE PTR [rip+0x2d3e], 0x31
add  rsp, 0x8
ret
nop  DWORD PTR [rax+rax*1+0x0]
endbr64
push rbp
mov  rbp, rsp
push r15
push r14
push r13
push r12
push rbx
sub  rsp, 0xb8
mov  QWORD PTR [rbp-0xd8], rdi
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x38], rax
xor  eax, eax
call 0x23f0
mov  rsi, rsp
mov  rdx, rax
lea  eax, [rax+0x16]
cdqe
add  rax, 0xf
mov  rdi, rax
mov  rcx, rax
and  rdi, 0xfffffffffffff000
and  rcx, 0xfffffffffffffff0
sub  rsi, rdi
cmp  rsp, rsi
je   0x31f0
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rsi
jne  0x31db
and  ecx, 0xfff
sub  rsp, rcx
test rcx, rcx
jne  0x3380
mov  rcx, rax
mov  rsi, rsp
and  rax, 0xfffffffffffff000
mov  r13, rsp
sub  rsi, rax
and  rcx, 0xfffffffffffffff0
cmp  rsp, rsi
je   0x3232
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rsi
jne  0x321d
and  ecx, 0xfff
sub  rsp, rcx
test rcx, rcx
jne  0x33a1
movsxd rax, edx
mov  rsi, QWORD PTR [rbp-0xd8]
mov  rdi, r13
mov  r15, rsp
mov  rbx, rax
mov  rdx, rax
mov  QWORD PTR [rbp-0xe0], rax
lea  r12, [rbp-0xd0]
call 0x24f0
lea  r14, [r13+rbx*1+0x0]
mov  ebx, 0x1
jmp  0x3283
nop  DWORD PTR [rax+0x0]
add  ebx, 0x1
mov  esi, 0x1
mov  rdi, r14
xor  eax, eax
mov  r8d, ebx
lea  rcx, [rip+0x22c3]
mov  rdx, 0xffffffffffffffff
call 0x2630
mov  rsi, r12
mov  rdi, r13
call 0x24e0
test eax, eax
jns  0x3280
mov  r12, QWORD PTR [rbp-0xe0]
mov  rsi, QWORD PTR [rbp-0xd8]
mov  rdi, r15
mov  rdx, r12
add  r12, r15
call 0x24f0
mov  eax, 0x312e
mov  BYTE PTR [r12+0x2], 0x0
mov  WORD PTR [r12], ax
sub  ebx, 0x1
jne  0x3304
jmp  0x3390
nop  DWORD PTR [rax+rax*1+0x0]
sub  ebx, 0x1
je   0x3390
mov  rsi, r12
mov  rdi, r14
call 0x2390
mov  esi, 0x1
mov  rdi, r12
xor  eax, eax
mov  r8d, ebx
lea  rcx, [rip+0x2246]
mov  rdx, 0xffffffffffffffff
call 0x2630
mov  rsi, r13
mov  rdi, r15
call 0x25a0
test eax, eax
jns  0x32f0
mov  rax, QWORD PTR [rip+0x3cbe]
mov  r8, r13
mov  rcx, r15
lea  rdx, [rip+0x221b]
mov  esi, 0x1
mov  rdi, QWORD PTR [rax]
xor  eax, eax
call 0x25f0
mov  eax, 0xffffffff
mov  rdx, QWORD PTR [rbp-0x38]
sub  rdx, QWORD PTR fs:0x28
jne  0x33ac
lea  rsp, [rbp-0x28]
pop  rbx
pop  r12
pop  r13
pop  r14
pop  r15
pop  rbp
ret
nop  DWORD PTR [rax+0x0]
or   QWORD PTR [rsp+rcx*1-0x8], 0x0
jmp  0x3202
nop  DWORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rbp-0xd8]
mov  rsi, r15
call 0x25a0
jmp  0x335b
or   QWORD PTR [rsp+rcx*1-0x8], 0x0
jmp  0x3244
endbr64
sub  rsp, 0x8
mov  eax, DWORD PTR [rip+0x3d26]
lea  edx, [rax+0x1]
mov  DWORD PTR [rip+0x3d1d], edx
cmp  eax, 0x2
jg   0x4392
48 63 35 0d 3d 00 00  movsxd rsi, DWORD PTR [rip+0x3d0d]
lea  rdi, [rip+0x2d06]
call 0x23d0
test rax, rax
js   0x43bc
mov  edi, 0x1
add  rsp, 0x8
jmp  0x2460
mov  rax, QWORD PTR [rip+0x2c5f]
mov  edx, 0x37
mov  esi, 0x1
lea  rdi, [rip+0x100e]
mov  rcx, QWORD PTR [rax]
call 0x25e0
mov  edi, 0x4
call 0x33c0
lea  rdi, [rip+0x11ce]
call 0x2590
mov  edi, 0x2
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffffa11]
call QWORD PTR [rip+0x4383]
endbr64
push r15
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x18
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rip+0x325e]
mov  r14, QWORD PTR [rax]
test r14, r14
je   0x4144
cmp  BYTE PTR [rdi], 0x2e
jne  0x3e0b
movzx  eax, BYTE PTR [rdi+0x1]
lea  edx, [rax-0x2e]
cmp  dl, 0x1
jbe  0x41ec
mov  rdi, r14
call 0x23f0
mov  rdi, r12
mov  rbx, rax
call 0x23f0
lea  rdi, [rbx+rax*1+0x1]
mov  r13, rax
call 0x2500
mov  rdx, rbx
mov  rsi, r14
mov  rbp, rax
mov  rdi, rax
call 0x24f0
lea  rdi, [rbp+rbx*1+0x0]
lea  rdx, [r13+0x1]
mov  rsi, r12
call 0x24f0
xor  esi, esi
mov  rdi, rbp
xor  eax, eax
call 0x2560
mov  DWORD PTR [rsp+0x4], eax
test eax, eax
js   0x4107
mov  rdi, rbp
call 0x2360
lea  rax, [rip+0x31cc]
mov  edx, DWORD PTR [rax]
test edx, edx
jne  0x3ed2
mov  DWORD PTR [rax], 0x1
lea  rax, [rip+0xfffffffffffff779]
cmp  QWORD PTR [rip+0x3152], rax
mov  BYTE PTR [rip+0x31eb], 0x49
mov  DWORD PTR [rip+0x41e1], 0x3
sete al
mov  DWORD PTR [rip+0x41d8], 0x0
lea  eax, [rax+rax*8+0x4c]
mov  BYTE PTR [rip+0x31cb], al
lea  rax, [rip+0x3153]
movzx  eax, BYTE PTR [rax]
mov  BYTE PTR [rip+0x31bc], al
call 0x3520
mov  BYTE PTR [rip+0x31a2], 0x31
mov  rdx, r12
lea  rsi, [rip+0x171f]
mov  edi, 0x1
xor  eax, eax
call 0x2550
mov  rdi, r12
mov  esi, 0x2f
call 0x2430
lea  rdx, [rax+0x1]
test rax, rax
cmovne r12, rdx
movzx  eax, BYTE PTR [r12]
test al, al
je   0x42a0
cmp  al, 0x2e
je   0x42a0
lea  rcx, [r12+0x8]
mov  rax, r12
nop  DWORD PTR [rax]
movzx  edx, BYTE PTR [rax+0x1]
add  rax, 0x1
test dl, dl
je   0x3f36
cmp  dl, 0x2e
je   0x3f36
cmp  rax, rcx
jne  0x3f20
sub  rax, r12
movsxd rbx, eax
movsxd r13, eax
lea  ebp, [rax+0x3]
mov  rdx, r13
mov  rsi, r12
mov  eax, 0x3146
mov  ecx, 0xffd
lea  rdi, [rip+0x312a]
mov  BYTE PTR [rip+0x3114], 0x31
lea  r14, [rip+0x3119]
mov  WORD PTR [rip+0x3112], ax
mov  BYTE PTR [rip+0x310d], 0x41
call 0x24d0
mov  rsi, r12
mov  rdx, r13
mov  ecx, 0xd
lea  r12, [rip+0x30d4]
lea  r13, [rip+0x1658]
mov  rdi, r12
call 0x24d0
mov  DWORD PTR [rip+0x40df], ebp
mov  DWORD PTR [rip+0x40d9], 0x0
mov  DWORD PTR [rip+0x30bb], 0x0
mov  BYTE PTR [r12+rbx*1], 0x0
lea  rbx, [rip+0x40df]
nop  DWORD PTR [rax+0x0]
movsxd rsi, ebp
mov  rdi, r14
call 0x23d0
test rax, rax
js   0x42af
mov  ecx, DWORD PTR [rip+0x308e]
mov  edi, 0x1
mov  rdx, r12
xor  eax, eax
mov  rsi, r13
sar  ecx, 0xa
call 0x2550
mov  rax, QWORD PTR [rip+0x2fca]
mov  rdi, QWORD PTR [rax]
call 0x2510
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
mov  edi, 0x14
call 0x2460
mov  rdi, rbx
mov  esi, 0x1000
call 0x2570
xor  edi, edi
mov  r15, rax
mov  ebp, eax
call 0x2460
test r15d, r15d
js   0x4203
movzx  eax, BYTE PTR [rbx]
cmp  al, 0x23
je   0x4219
test r15d, r15d
je   0x4010
cmp  al, 0x4e
je   0x41b3
cmp  r15d, 0x1
je   0x40f2
cmp  al, 0x4b
jne  0x40e0
0f be 15 38 40 00 00  movsx  edx, BYTE PTR [rip+0x4038]
0f b6 05 04 30 00 00  movzx  eax, BYTE PTR [rip+0x3004]
cmp  edx, eax
jne  0x40e0
mov  ebp, DWORD PTR [rsp+0x4]
mov  edx, 0xfa
lea  rsi, [rip+0x2ffe]
mov  edi, ebp
call 0x2490
test eax, eax
js   0x4243
je   0x427b
0f b6 15 d4 2f 00 00  movzx  edx, BYTE PTR [rip+0x2fd4]
lea  ebp, [rax+0x2]
add  DWORD PTR [rip+0x2fc7], eax
mov  BYTE PTR [rip+0x2fd0], 0x44
add  edx, 0x1
mov  DWORD PTR [rip+0x3fc7], ebp
mov  DWORD PTR [rip+0x3fc1], 0x0
and  edx, 0x37
mov  BYTE PTR [rip+0x2fa8], dl
mov  BYTE PTR [rip+0x2faf], dl
jmp  0x3fc8
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, ebp
call 0x3430
mov  ebp, DWORD PTR [rip+0x3f93]
jmp  0x3fc8
mov  edi, 0x1
call 0x3430
mov  ebp, DWORD PTR [rip+0x3f7e]
jmp  0x3fc8
lea  rsi, [rsp+0x4]
mov  rdi, rbp
call 0x3080
test eax, eax
jne  0x3e65
mov  rax, QWORD PTR [rip+0x2ed5]
mov  edx, 0x48
mov  esi, 0x1
lea  rdi, [rip+0x11ec]
mov  rcx, QWORD PTR [rax]
call 0x25e0
mov  rdi, rbp
call 0x2360
xor  esi, esi
mov  rdi, r12
xor  eax, eax
call 0x2560
mov  DWORD PTR [rsp+0x4], eax
test eax, eax
jns  0x3e6d
lea  rsi, [rsp+0x4]
mov  rdi, r12
call 0x3080
test eax, eax
jne  0x3e6d
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x42c5
mov  rax, QWORD PTR [rip+0x2e6c]
mov  edx, 0x21
mov  esi, 0x1
lea  rdi, [rip+0x112b]
mov  rcx, QWORD PTR [rax]
add  rsp, 0x18
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x25e0
mov  ebp, DWORD PTR [rsp+0x4]
mov  edi, ebp
call 0x2470
mov  rax, QWORD PTR [rsp+0x8]
sub  rax, QWORD PTR fs:0x28
jne  0x42c5
add  rsp, 0x18
lea  rdi, [rip+0x141b]
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
jmp  0x23a0
cmp  al, 0x2e
jne  0x4144
cmp  BYTE PTR [rdi+0x2], 0x2f
jne  0x3e0b
jmp  0x4144
lea  rdi, [rip+0x1395]
call 0x2590
mov  edi, 0x2
call 0x33c0
mov  rax, QWORD PTR [rip+0x2dd8]
mov  edx, 0x1d
mov  esi, 0x1
lea  rdi, [rip+0x137e]
mov  rcx, QWORD PTR [rax]
call 0x25e0
mov  edi, 0x10
call 0x33c0
call 0x2370
mov  edi, DWORD PTR [rax]
call 0x2600
lea  r8, [rip+0x2e0a]
mov  esi, 0x1
lea  rdx, [rip+0x110e]
mov  rcx, rax
mov  rax, QWORD PTR [rip+0x2d8c]
mov  rdi, QWORD PTR [rax]
xor  eax, eax
call 0x25f0
jmp  0x41b7
mov  BYTE PTR [rip+0x2dfe], 0x5a
mov  DWORD PTR [rip+0x3df4], 0x1
mov  DWORD PTR [rip+0x3dee], 0x0
call 0x3520
jmp  0x41b7
mov  ebp, 0x3
xor  r13d, r13d
xor  ebx, ebx
jmp  0x3f42
lea  rdi, [rip+0x12db]
call 0x2590
mov  edi, 0x2
call 0x33c0
endbr64
lea  rax, [rip+0x2c55]
mov  edx, DWORD PTR [rax]
test edx, edx
je   0x4400
cmp  rdi, QWORD PTR [rip+0x2be8]
mov  DWORD PTR [rax], 0x0
je   0x4408
ret
nop  DWORD PTR [rax+0x0]
sub  rsp, 0x8
mov  esi, 0x1
lea  rdi, [rip+0x11fe]
call 0x23d0
test rax, rax
js   0x4427
add  rsp, 0x8
ret
lea  rdi, [rip+0x1163]
call 0x2590
mov  edi, 0x2
endbr64
push rbp
mov  esi, 0x1
mov  ebp, edi
lea  rdi, [rip+0x21a0]
call 0x23d0
call 0x2520
call 0x25c0
mov  edi, ebp
endbr64
sub  rsp, 0x8
mov  rax, QWORD PTR [rip+0x3bf9]
mov  ecx, edi
lea  rdx, [rip+0x216d]
mov  esi, 0x1
mov  rdi, QWORD PTR [rax]
xor  eax, eax
call 0x25f0
mov  edi, 0x10
endbr64
push rbp
mov  rbp, rsp
push r15
push r14
mov  r14, rdi
push r13
push r12
push rbx
sub  rsp, 0xd8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rbp-0x38], rax
xor  eax, eax
call 0x23f0
test eax, eax
je   0x3b7e
mov  rdx, rax
cdqe
lea  rax, [r14+rax*1-0x1]
cmp  r14, rax
jbe  0x365d
jmp  0x3c2f
nop  DWORD PTR [rax+rax*1+0x0]
sub  rax, 0x1
cmp  r14, rax
ja   0x3c2f
cmp  BYTE PTR [rax], 0x2f
jne  0x3650
cmp  r14, rax
ja   0x3c2f
mov  ecx, eax
mov  BYTE PTR [rax], 0x0
sub  ecx, r14d
mov  QWORD PTR [rbp-0xf0], r14
lea  r14, [rax+0x1]
mov  DWORD PTR [rbp-0xdc], ecx
movzx  eax, BYTE PTR [r14]
test al, al
je   0x3d5d
cmp  al, 0x2e
je   0x3d5d
mov  rcx, r14
jmp  0x36a1
cmp  al, 0x2e
je   0x36ad
movzx  eax, BYTE PTR [rcx+0x1]
add  rcx, 0x1
test al, al
jne  0x369d
mov  QWORD PTR [rbp-0xe8], rcx
sub  rcx, r14
movsxd r12, ecx
lea  r13d, [rcx+0x1]
test al, al
je   0x3cbf
mov  eax, edx
mov  rdx, r14
sub  eax, ecx
mov  rcx, QWORD PTR [rbp-0xf0]
mov  DWORD PTR [rbp-0xe0], eax
test rcx, rcx
je   0x3ce7
lea  rsi, [rip+0x1ee3]
mov  edi, 0x1
xor  eax, eax
call 0x2550
lea  rax, [rip+0x3943]
mov  esi, DWORD PTR [rax]
test esi, esi
jne  0x3745
mov  DWORD PTR [rax], 0x1
mov  ecx, 0x5549
lea  rax, [rip+0x38fb]
mov  WORD PTR [rip+0x3964], cx
mov  DWORD PTR [rip+0x495a], 0x3
movzx  eax, BYTE PTR [rax]
mov  DWORD PTR [rip+0x4951], 0x0
mov  BYTE PTR [rip+0x3949], al
call 0x3520
mov  BYTE PTR [rip+0x392f], 0x31
mov  ecx, 0xfff
mov  rdx, r12
mov  rsi, r14
mov  BYTE PTR [rip+0x3929], 0x55
lea  rdi, [rip+0x3923]
lea  r15, [rip+0x391b]
call 0x24d0
mov  DWORD PTR [rip+0x490f], r13d
lea  rbx, [rip+0x4928]
mov  DWORD PTR [rip+0x4902], 0x0
nop  WORD PTR [rax+rax*1+0x0]
movsxd rsi, r13d
mov  rdi, r15
call 0x23d0
test rax, rax
js   0x3da8
mov  BYTE PTR [rip+0x38d1], 0x31
nop  DWORD PTR [rax+rax*1+0x0]
mov  edi, 0x14
call 0x2460
mov  rdi, rbx
mov  esi, 0x1000
call 0x2570
xor  edi, edi
mov  r13, rax
mov  r12d, eax
call 0x2460
test r13d, r13d
js   0x3d29
movzx  eax, BYTE PTR [rbx]
cmp  al, 0x23
je   0x3cff
test r13d, r13d
je   0x37a8
cmp  al, 0x45
je   0x3b71
cmp  r13d, 0x2
jle  0x3af4
cmp  al, 0x46
jne  0x3af4
0f be 15 9b 48 00 00  movsx  edx, BYTE PTR [rip+0x489b]
0f b6 05 67 38 00 00  movzx  eax, BYTE PTR [rip+0x3867]
cmp  edx, eax
jne  0x3af4
cmp  r13d, 0xb
jg   0x3b1e
mov  eax, DWORD PTR [rbp-0xdc]
cmp  QWORD PTR [rbp-0xe8], 0x0
mov  QWORD PTR [rbp-0xf8], rsp
lea  r13d, [rax+r13*1-0x2]
lea  r14d, [rax+0x1]
movsxd r13, r13d
je   0x3cab
mov  eax, DWORD PTR [rbp-0xe0]
add  eax, 0x1
cdqe
lea  rax, [r13+rax*1+0x10]
mov  rcx, rsp
mov  rdx, rax
and  rax, 0xfffffffffffff000
sub  rcx, rax
and  rdx, 0xfffffffffffffff0
cmp  rsp, rcx
je   0x3883
sub  rsp, 0x1000
or   QWORD PTR [rsp+0xff8], 0x0
cmp  rsp, rcx
jne  0x386e
mov  rax, rdx
and  eax, 0xfff
sub  rsp, rax
test rax, rax
jne  0x3d3f
mov  rax, QWORD PTR [rbp-0xf0]
mov  r13, rsp
test rax, rax
je   0x38c2
mov  rsi, rax
mov  rdi, rsp
call 0x2390
mov  rdi, rsp
call 0x23f0
mov  edx, 0x2f
mov  WORD PTR [rsp+rax*1], dx
48 63 85 24 ff ff ff  movsxd rax, DWORD PTR [rbp-0xdc]
movsxd rdi, r12d
lea  rdx, [r13+rax*1+0x1]
cmp  r12d, 0x3
je   0x3934
mov  QWORD PTR [rbp-0x100], rdx
mov  QWORD PTR [rbp-0xd8], rdi
call 0x2620
lea  esi, [r14+r12*1-0x3]
mov  rdi, QWORD PTR [rbp-0xd8]
mov  rdx, QWORD PTR [rbp-0x100]
mov  r8, QWORD PTR [rax]
movsxd rsi, esi
lea  rax, [rip+0x4799]
nop  WORD PTR [rax+rax*1+0x0]
movsx  rcx, BYTE PTR [rax]
mov  BYTE PTR [r13+rsi*1+0x0], 0x0
add  rax, 0x1
add  rdx, 0x1
mov  ecx, DWORD PTR [r8+rcx*4]
mov  BYTE PTR [rdx-0x1], cl
mov  rcx, rax
sub  rcx, rbx
cmp  rcx, rdi
jl   0x3910
mov  rax, QWORD PTR [rbp-0xe8]
mov  rsi, rax
test rax, rax
je   0x3c20
mov  rdi, r13
call 0x25b0
lea  rax, [rip+0x36ee]
mov  eax, DWORD PTR [rax]
test eax, eax
jne  0x3be4
mov  edx, 0x1a4
mov  esi, 0x241
mov  rdi, r13
xor  eax, eax
call 0x2560
mov  DWORD PTR [rbp-0xd8], eax
test eax, eax
js   0x3c49
0f b6 05 eb 36 00 00  movzx  eax, BYTE PTR [rip+0x36eb]
mov  esi, 0x2
mov  BYTE PTR [rip+0x36eb], 0x4b
mov  DWORD PTR [rip+0x46e1], 0x2
mov  BYTE PTR [rip+0x36dc], al
add  eax, 0x1
mov  DWORD PTR [rip+0x46d2], 0x0
and  eax, 0x37
mov  BYTE PTR [rip+0x36b9], al
mov  DWORD PTR [rip+0x36ab], 0x0
nop  DWORD PTR [rax]
mov  rdi, r15
call 0x23d0
test rax, rax
js   0x3da8
mov  ecx, DWORD PTR [rip+0x3691]
mov  edi, 0x1
mov  rdx, r13
xor  eax, eax
lea  rsi, [rip+0x1bfb]
sar  ecx, 0xa
call 0x2550
mov  rax, QWORD PTR [rip+0x35c9]
mov  rdi, QWORD PTR [rax]
call 0x2510
nop  WORD PTR [rax+rax*1+0x0]
mov  edi, 0x14
call 0x2460
mov  rdi, rbx
mov  esi, 0x1000
call 0x2570
xor  edi, edi
mov  r12, rax
mov  r14d, eax
call 0x2460
test r12d, r12d
js   0x3d29
movzx  eax, BYTE PTR [rbx]
cmp  al, 0x23
je   0x3cff
test r12d, r12d
je   0x3a10
cmp  al, 0x5a
je   0x3ba0
cmp  r12d, 0x1
je   0x3b08
cmp  al, 0x44
jne  0x3ae0
0f be 15 37 46 00 00  movsx  edx, BYTE PTR [rip+0x4637]
0f b6 05 03 36 00 00  movzx  eax, BYTE PTR [rip+0x3603]
cmp  edx, eax
jne  0x3ae0
sub  r14d, 0x2
mov  edi, DWORD PTR [rbp-0xd8]
lea  rsi, [rip+0x461c]
movsxd r12, r14d
mov  rdx, r12
call 0x23c0
cmp  rax, r12
jl   0x3d74
0f b6 05 d3 35 00 00  movzx  eax, BYTE PTR [rip+0x35d3]
mov  esi, 0x2
add  DWORD PTR [rip+0x35c3], r14d
mov  BYTE PTR [rip+0x35cc], 0x4b
mov  BYTE PTR [rip+0x35c7], al
add  eax, 0x1
mov  DWORD PTR [rip+0x45b9], 0x2
and  eax, 0x37
mov  DWORD PTR [rip+0x45b0], 0x0
mov  BYTE PTR [rip+0x359a], al
jmp  0x39c8
nop
mov  edi, r14d
call 0x3430
48 63 35 91 45 00 00  movsxd rsi, DWORD PTR [rip+0x4591]
jmp  0x39c8
mov  edi, r12d
call 0x3430
mov  r13d, DWORD PTR [rip+0x457d]
jmp  0x3788
mov  edi, 0x1
call 0x3430
48 63 35 67 45 00 00  movsxd rsi, DWORD PTR [rip+0x4567]
jmp  0x39c8
mov  edx, 0x23
mov  rax, QWORD PTR [rip+0x34ce]
mov  esi, 0x1
lea  rdi, [rip+0x1742]
mov  r13d, 0x2
mov  rcx, QWORD PTR [rax]
call 0x25e0
0f b6 05 56 45 00 00  movzx  eax, BYTE PTR [rip+0x4556]
mov  BYTE PTR [rip+0x352e], 0x4e
mov  DWORD PTR [rip+0x4524], 0x2
mov  BYTE PTR [rip+0x351f], al
mov  DWORD PTR [rip+0x4518], 0x0
jmp  0x3788
lea  rax, [rip+0x34c8]
mov  DWORD PTR [rax], 0x0
mov  rax, QWORD PTR [rbp-0x38]
sub  rax, QWORD PTR fs:0x28
jne  0x3d9e
lea  rsp, [rbp-0x28]
pop  rbx
pop  r12
pop  r13
pop  r14
pop  r15
pop  rbp
ret
mov  edi, DWORD PTR [rbp-0xd8]
mov  r13d, 0x1
call 0x2470
lea  rdi, [rip+0x1a40]
call 0x23a0
mov  BYTE PTR [rip+0x34bc], 0x59
mov  DWORD PTR [rip+0x44b2], 0x1
mov  DWORD PTR [rip+0x44ac], 0x0
mov  rsp, QWORD PTR [rbp-0xf8]
jmp  0x3788
lea  rsi, [rbp-0xd0]
mov  rdi, r13
call 0x24e0
test eax, eax
js   0x3960
mov  rdi, r13
call 0x3180
cmp  eax, 0xffffffff
jne  0x3960
lea  rdi, [rip+0x168d]
call 0x2590
jmp  0x3960
nop  DWORD PTR [rax]
lea  rax, [rip+0x33f1]
mov  rsi, QWORD PTR [rax]
jmp  0x3947
mov  QWORD PTR [rbp-0xf0], 0x0
mov  DWORD PTR [rbp-0xdc], 0xffffffff
jmp  0x3684
mov  rdi, r13
mov  r13d, 0x2
call 0x2590
mov  edx, 0x21
mov  rax, QWORD PTR [rip+0x3395]
mov  esi, 0x1
lea  rdi, [rip+0x1659]
mov  rcx, QWORD PTR [rax]
call 0x25e0
0f b6 05 23 44 00 00  movzx  eax, BYTE PTR [rip+0x4423]
mov  BYTE PTR [rip+0x33fb], 0x4e
mov  DWORD PTR [rip+0x43f1], 0x2
mov  BYTE PTR [rip+0x33ec], al
mov  DWORD PTR [rip+0x43e5], 0x0
mov  rsp, QWORD PTR [rbp-0xf8]
jmp  0x3788
lea  rax, [rip+0x3366]
mov  rdi, QWORD PTR [rax]
call 0x23f0
jmp  0x3851
mov  rcx, QWORD PTR [rbp-0xf0]
mov  rdx, r14
mov  QWORD PTR [rbp-0xe8], 0x0
mov  DWORD PTR [rbp-0xe0], 0xffffffff
test rcx, rcx
jne  0x36e3
lea  rsi, [rip+0x18f1]
mov  edi, 0x1
xor  eax, eax
call 0x2550
jmp  0x36f6
mov  rax, QWORD PTR [rip+0x32f2]
mov  edx, 0x1d
mov  esi, 0x1
lea  rdi, [rip+0x1898]
mov  rcx, QWORD PTR [rax]
call 0x25e0
mov  edi, 0x10
call 0x33c0
lea  rdi, [rip+0x186f]
call 0x2590
mov  edi, 0x2
call 0x33c0
or   QWORD PTR [rsp+rax*1-0x8], 0x0
mov  rax, QWORD PTR [rbp-0xf0]
mov  r13, rsp
test rax, rax
jne  0x38a6
jmp  0x38c2
mov  QWORD PTR [rbp-0xe8], r14
mov  r13d, 0x1
xor  r12d, r12d
xor  ecx, ecx
jmp  0x36be
mov  rax, QWORD PTR [rip+0x327d]
mov  rcx, r13
mov  esi, 0x1
lea  rdx, [rip+0x1566]
mov  rdi, QWORD PTR [rax]
xor  eax, eax
call 0x25f0
mov  edi, 0x3
call 0x33c0
call 0x2410
nop  DWORD PTR [rax+rax*1+0x0]
lea  rdi, [rip+0x17e2]
call 0x2590
mov  edi, 0x2
call 0x33c0
endbr64
push r13
push r12
mov  r12, rdi
push rbp
push rbx
sub  rsp, 0x38
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x28], rax
xor  eax, eax
call 0x4920
mov  rbp, QWORD PTR [rip+0x77b3]
lea  r13, [rax+0x1]
cmp  QWORD PTR [rip+0x77b0], r13
mov  rbx, rax
jae  0xabfe
mov  rdi, rbp
mov  rsi, r13
call 0x4c90
mov  rbp, rax
test rax, rax
je   0xac60
mov  QWORD PTR [rip+0x7789], rax
mov  QWORD PTR [rip+0x778a], r13
mov  rsi, r12
mov  rdi, rbp
mov  rdx, r13
call 0x4810
mov  BYTE PTR [rbp+rbx*1+0x0], 0x0
mov  esi, 0xa
mov  rdi, rbp
call 0x49f0
test rax, rax
je   0xac26
mov  BYTE PTR [rax], 0x0
mov  ebx, 0x1
mov  r12, rsp
mov  QWORD PTR [r12+rbx*8-0x8], rbp
mov  esi, 0x3a
mov  rdi, rbp
call 0x49b0
mov  edx, ebx
test rax, rax
je   0xac68
mov  BYTE PTR [rax], 0x0
lea  rbp, [rax+0x1]
add  rbx, 0x1
cmp  edx, 0x3
jle  0xac2e
nop  WORD PTR [rax+rax*1+0x0]
xor  eax, eax
jmp  0xace1
nop  DWORD PTR [rax+0x0]
cmp  ebx, 0x4
jne  0xac60
mov  rax, QWORD PTR [rsp]
cmp  QWORD PTR [rip+0x76cf], 0x0
mov  QWORD PTR [rip+0x76e0], rax
mov  rax, QWORD PTR [rsp+0x8]
mov  QWORD PTR [rip+0x76dc], rax
jne  0xad30
cmp  QWORD PTR [rip+0x769e], 0x0
jne  0xad00
mov  rdi, QWORD PTR [rsp+0x10]
lea  rdx, [rip+0x76a0]
lea  rsi, [rip+0x7691]
call 0x7930
mov  rdi, QWORD PTR [rsp+0x18]
lea  rdx, [rip+0x7678]
lea  rsi, [rip+0x7669]
mov  QWORD PTR [rip+0x76a2], rax
call 0x7930
mov  QWORD PTR [rip+0x769e], rax
lea  rax, [rip+0x767f]
mov  rdx, QWORD PTR [rsp+0x28]
sub  rdx, QWORD PTR fs:0x28
jne  0xad57
add  rsp, 0x38
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
mov  rdi, QWORD PTR [rip+0x7629]
mov  QWORD PTR [rip+0x7626], 0x0
call 0x47c0
mov  QWORD PTR [rip+0x760e], 0x0
jmp  0xac9c
nop  WORD PTR [rax+rax*1+0x0]
mov  rdi, QWORD PTR [rip+0x7609]
mov  QWORD PTR [rip+0x7606], 0x0
call 0x47c0
mov  QWORD PTR [rip+0x75ee], 0x0
jmp  0xac92
endbr64
test rsi, rsi
je   0xb1bf
push r15
push r14
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x28
test rdi, rdi
je   0xb1b8
mov  rax, QWORD PTR [rdi]
mov  r12, rsi
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x4920
mov  r13, rax
mov  rax, QWORD PTR [rbx+0x8]
mov  rdi, rax
mov  QWORD PTR [rsp+0x10], rax
call 0x4920
mov  rbp, QWORD PTR [rbx+0x10]
mov  QWORD PTR [rsp+0x18], rax
lea  r14, [r13+rax*1+0xa]
test rbp, rbp
je   0xb046
mov  r15, rbp
jmp  0xb03a
66 2e 0f 1f 84 00 00 00 00 00 cs nop WORD PTR [rax+rax*1+0x0]
call 0x4920
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0xb030
mov  rbx, QWORD PTR [rbx+0x18]
test rbx, rbx
je   0xb06e
mov  r15, rbx
jmp  0xb062
nop  DWORD PTR [rax+0x0]
call 0x4920
lea  r14, [r14+rax*1+0x1]
mov  rdi, QWORD PTR [r15]
add  r15, 0x8
test rdi, rdi
jne  0xb058
mov  rdi, r14
call 0x4bf0
mov  r14, rax
test rax, rax
je   0xb1b8
mov  rsi, QWORD PTR [rsp+0x8]
mov  rdx, r13
mov  rdi, rax
add  r13, r14
call 0x4b90
mov  r15, QWORD PTR [rsp+0x18]
mov  BYTE PTR [r13+0x0], 0x3a
lea  rcx, [r13+0x1]
mov  rsi, QWORD PTR [rsp+0x10]
mov  rdi, rcx
mov  rdx, r15
call 0x4b90
mov  rsi, QWORD PTR [rbp+0x0]
mov  rcx, rax
add  rcx, r15
mov  BYTE PTR [rcx], 0x3a
lea  r13, [rcx+0x1]
test rsi, rsi
je   0xb1b0
add  rbp, 0x8
jmp  0xb0df
nop  DWORD PTR [rax+rax*1+0x0]
mov  BYTE PTR [rax], 0x2c
lea  r13, [rax+0x1]
mov  rdi, r13
add  rbp, 0x8
call 0x4840
mov  rdi, r13
call 0x4920
mov  rsi, QWORD PTR [rbp-0x8]
add  rax, r13
test rsi, rsi
jne  0xb0d8
mov  rsi, QWORD PTR [rbx]
mov  BYTE PTR [rax], 0x3a
lea  rbp, [rax+0x1]
test rsi, rsi
je   0xb140
add  rbx, 0x8
jmp  0xb120
nop  DWORD PTR [rax+0x0]
mov  BYTE PTR [rbp+0x0], 0x2c
add  rbp, 0x1
mov  rdi, rbp
add  rbx, 0x8
call 0x4840
mov  rdi, rbp
call 0x4920
mov  rsi, QWORD PTR [rbx-0x8]
add  rbp, rax
test rsi, rsi
jne  0xb118
mov  eax, 0xa
mov  WORD PTR [rbp+0x0], ax
movsx  edi, BYTE PTR [r14]
test dil, dil
je   0xb190
mov  rbx, r14
jmp  0xb16d
nop  WORD PTR [rax+rax*1+0x0]
movsx  edi, BYTE PTR [rbx+0x1]
add  rbx, 0x1
test dil, dil
je   0xb190
mov  rsi, r12
call 0x4b00
cmp  eax, 0xffffffff
jne  0xb160
mov  rdi, r14
mov  DWORD PTR [rsp+0x8], eax
call 0x47c0
mov  eax, DWORD PTR [rsp+0x8]
jmp  0xb19a
nop  DWORD PTR [rax+0x0]
mov  rdi, r14
call 0x47c0
xor  eax, eax
add  rsp, 0x28
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
nop  DWORD PTR [rax+0x0]
mov  rax, r13
jmp  0xb0ff
mov  eax, 0xffffffff
jmp  0xb19a
or   eax, 0xffffffff
endbr64
cmp  QWORD PTR [rip+0x75ac], 0x0
push r14
push r13
push r12
mov  r12, rdi
push rbp
push rbx
je   0xae50
test r12, r12
je   0xadb3
mov  esi, DWORD PTR [rip+0x7590]
mov  rdi, QWORD PTR [rip+0x7581]
mov  rdx, r12
call 0x76b0
mov  r14, QWORD PTR [rip+0x7572]
cmp  r14, rax
je   0xae27
pop  rbx
xor  eax, eax
pop  rbp
pop  r12
pop  r13
pop  r14
ret
xchg ax, ax
mov  rdi, r12
call 0x4b40
test eax, eax
jne  0xae80
mov  rax, QWORD PTR [rip+0x7551]
mov  rdi, r14
lea  r13, [rax+rax*1]
mov  rsi, r13
call 0x4c90
mov  rbx, rax
test rax, rax
je   0xadb3
mov  rdi, rax
mov  QWORD PTR [rip+0x7528], rax
mov  QWORD PTR [rip+0x7529], r13
call 0x4920
mov  esi, r13d
mov  rdx, r12
sub  esi, eax
lea  rdi, [rbx+rax*1]
mov  rbp, rax
call 0x76b0
mov  r14, QWORD PTR [rip+0x7501]
add  rbp, r14
cmp  rax, rbp
jne  0xadb3
mov  esi, 0xa
mov  rdi, r14
call 0x49f0
test rax, rax
je   0xadc0
mov  BYTE PTR [rax], 0x0
pop  rbx
mov  rdi, r14
pop  rbp
pop  r12
pop  r13
pop  r14
jmp  0xaba0
nop  DWORD PTR [rax+0x0]
mov  edi, 0x2000
call 0x4bf0
mov  QWORD PTR [rip+0x74bf], rax
test rax, rax
je   0xadb3
mov  QWORD PTR [rip+0x74b3], 0x2000
jmp  0xad8d
nop  WORD PTR [rax+rax*1+0x0]
mov  esi, 0xa
mov  rdi, r14
call 0x49f0
test rax, rax
je   0xae3c
endbr64
mov  rdi, QWORD PTR [rip+0x7825]
test rdi, rdi
je   0xab90
sub  rsp, 0x8
call 0x48e0
mov  QWORD PTR [rip+0x780c], 0x0
add  rsp, 0x8
ret
nop  DWORD PTR [rax+0x0]
mov  QWORD PTR [rip+0x77f5], 0x0
endbr64
push r13
push r12
push rbp
push rbx
mov  rbx, rdi
sub  rsp, 0x8
mov  rdi, QWORD PTR [rip+0x7488]
test rdi, rdi
je   0xaf90
call 0x49c0
mov  rdi, QWORD PTR [rip+0x7473]
lea  r13, [rip+0x1db5]
lea  rbp, [rip+0x1ead]
jmp  0xaf54
nop  DWORD PTR [rax]
call 0xad70
mov  r12, rax
test rax, rax
je   0xaf7b
mov  rsi, QWORD PTR [r12]
mov  rdi, rbx
call 0x4af0
test eax, eax
je   0xaf7b
mov  rdi, QWORD PTR [rip+0x743c]
test rdi, rdi
jne  0xaf30
mov  rsi, r13
mov  rdi, rbp
call 0x4d70
mov  rdi, rax
mov  QWORD PTR [rip+0x7422], rax
call 0xad70
mov  r12, rax
test rax, rax
jne  0xaf3d
add  rsp, 0x8
mov  rax, r12
pop  rbx
pop  rbp
pop  r12
pop  r13
ret
nop  DWORD PTR [rax+0x0]
lea  rdi, [rip+0x1e41]
lea  rsi, [rip+0x1d3b]
call 0x4d70
mov  QWORD PTR [rip+0x73e6], rax
mov  rdi, rax
endbr64
mov  rdi, QWORD PTR [rip+0x74e5]
test rdi, rdi
je   0xaeb8
jmp  0xad70
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rdi, [rip+0x1f15]
lea  rsi, [rip+0x1e0f]
call 0x4d70
mov  QWORD PTR [rip+0x74ba], rax
mov  rdi, rax
add  rsp, 0x8
endbr64
mov  rdi, QWORD PTR [rip+0x7865]
test rdi, rdi
je   0xab38
jmp  0x49c0
nop  DWORD PTR [rax]
sub  rsp, 0x8
lea  rsi, [rip+0x2196]
lea  rdi, [rip+0x228e]
call 0x4d70
mov  QWORD PTR [rip+0x783a], rax
add  rsp, 0x8
ret
endbr64
push r15
push r14
push r13
push r12
push rbp
mov  ebp, edi
mov  edi, 0x6
push rbx
mov  rbx, rsi
lea  rsi, [rip+0x42fc]
sub  rsp, 0x1c8
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x1b8], rax
xor  eax, eax
mov  DWORD PTR [rsp+0x14], 0x1
mov  QWORD PTR [rsp+0x18], 0x0
call 0x3e60
lea  rsi, [rip+0x42c6]
lea  rdi, [rip+0x408f]
call 0x3930
mov  rdi, QWORD PTR [rbx]
call 0x3b40
lea  rsi, [rip+0x42bd]
mov  rdi, rax
mov  QWORD PTR [rsp+0x8], rax
call 0x3b60
test rax, rax
je   0x4704
mov  edx, 0x5
lea  rsi, [rip+0x48ed]
lea  rdi, [rip+0x4052]
mov  DWORD PTR [rip+0x9038], 0x1
mov  BYTE PTR [rip+0x9041], 0x0
call 0x3c90
mov  QWORD PTR [rip+0x9071], rax
lea  r14, [rip+0x85e2]
lea  r13, [rip+0x4322]
call 0x3e80
mov  QWORD PTR [rsp], 0x0
lea  r12, [rip+0x5857]
mov  QWORD PTR [rip+0x9128], rax
xor  r8d, r8d
mov  rcx, r14
mov  rdx, r13
mov  rsi, rbx
mov  edi, ebp
call 0x3c00
cmp  eax, 0xffffffff
je   0x47d1
sub  eax, 0x64
cmp  eax, 0xb1
ja   0x4090
movsxd rax, DWORD PTR [r12+rax*4]
add  rax, r12
notrack jmp rax
mov  edx, 0x5
lea  rsi, [rip+0x431d]
lea  rdi, [rip+0x3fc9]
call 0x3c90
lea  rcx, [rip+0x5ace]
mov  edx, 0x43a
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3f84]
xor  eax, eax
call 0x3a00
nop  WORD PTR [rax+rax*1+0x0]
xor  ebp, ebp
xor  r15d, r15d
mov  rdi, QWORD PTR [rip+0x910c]
test rdi, rdi
je   0x40a6
call 0x3af0
mov  rdi, QWORD PTR [rip+0x910b]
test rdi, rdi
je   0x40b7
call 0x3a90
mov  rdi, QWORD PTR [rip+0x90da]
test rdi, rdi
je   0x40d6
mov  rax, QWORD PTR [rip+0x90f6]
test rax, rax
je   0x4aaf
call QWORD PTR [rax+0x18]
test rbp, rbp
je   0x40f1
mov  rax, QWORD PTR [rip+0x90de]
test rax, rax
je   0x4af1
mov  rdi, rbp
call QWORD PTR [rax+0x38]
test r15, r15
je   0x4103
call 0x3ef0
mov  rdi, r15
call 0x3b70
mov  rdi, QWORD PTR [rip+0x9056]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x905a]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x8f4e]
call 0x3b20
mov  rdi, QWORD PTR [rsp]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x8f49]
call 0x3b20
mov  rdi, QWORD PTR [rip+0x905d]
test rdi, rdi
je   0x414d
call 0x3d60
mov  rdi, QWORD PTR [rip+0x8ff4]
test rdi, rdi
je   0x415e
call 0x38e0
mov  eax, DWORD PTR [rsp+0x14]
mov  rdx, QWORD PTR [rsp+0x1b8]
sub  rdx, QWORD PTR fs:0x28
jne  0x533f
add  rsp, 0x1c8
pop  rbx
pop  rbp
pop  r12
pop  r13
pop  r14
pop  r15
ret
mov  rax, QWORD PTR [rip+0x8e3e]
lea  rsi, [rip+0x8e7b]
mov  rdi, QWORD PTR [rax]
call 0x3bd0
test eax, eax
jns  0x4020
mov  edx, 0x5
lea  rsi, [rip+0x545b]
lea  rdi, [rip+0x3e70]
call 0x3c90
lea  rcx, [rip+0x5975]
mov  edx, 0x3e8
mov  r8, rax
jmp  0x4b7c
mov  r15, QWORD PTR [rip+0x8df4]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
mov  DWORD PTR [rip+0x8ea7], eax
test eax, eax
jg   0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x53e0]
lea  rdi, [rip+0x3e1d]
call 0x3c90
lea  rcx, [rip+0x5922]
mov  edx, 0x3ba
mov  r8, rax
mov  r9, rbx
lea  rsi, [rip+0x3dd7]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
xor  r15d, r15d
jmp  0x4095
mov  r15, QWORD PTR [rip+0x8d89]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
mov  DWORD PTR [rip+0x8e4c], eax
test eax, eax
jg   0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x534d]
lea  rdi, [rip+0x3db2]
call 0x3c90
lea  rcx, [rip+0x58b7]
mov  edx, 0x3b3
mov  r8, rax
mov  r9, rbx
jmp  0x4226
call 0x3870
xor  ebp, ebp
xor  r15d, r15d
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  r15, QWORD PTR [rip+0x8d1f]
mov  rdi, QWORD PTR [r15]
test rdi, rdi
je   0x42cc
call 0x3c10
mov  DWORD PTR [rip+0x8d4c], eax
test eax, eax
js   0x4d73
mov  BYTE PTR [rip+0x8d59], 0x0
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8cf1]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x4d32
mov  rdi, QWORD PTR [rip+0x8e4e]
mov  rsi, rax
call 0x3c20
test eax, eax
js   0x4d32
mov  rdi, r15
call 0x3b20
jmp  0x4020
or   DWORD PTR [rip+0x8e67], 0x80000
jmp  0x4020
mov  BYTE PTR [rip+0x8cff], 0x1
jmp  0x4020
mov  r15, QWORD PTR [rip+0x8c97]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
cdqe
mov  QWORD PTR [rip+0x8d3f], rax
test rax, rax
jne  0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x527f]
lea  rdi, [rip+0x3cbc]
call 0x3c90
lea  rcx, [rip+0x57c1]
mov  edx, 0x3ac
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  r15, QWORD PTR [rip+0x8c3d]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [r15]
call 0x3b80
cdqe
mov  QWORD PTR [rip+0x8cf5], rax
test rax, rax
jne  0x4020
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x51fd]
lea  rdi, [rip+0x3c62]
call 0x3c90
lea  rcx, [rip+0x5767]
mov  edx, 0x3a5
mov  r8, rax
mov  r9, rbx
jmp  0x4226
or   DWORD PTR [rip+0x8d9b], 0x20
jmp  0x4020
or   DWORD PTR [rip+0x8d8f], 0x10
jmp  0x4020
or   DWORD PTR [rip+0x8d80], 0x100
jmp  0x4020
or   DWORD PTR [rip+0x8d71], 0x80
jmp  0x4020
or   DWORD PTR [rip+0x8d65], 0x40
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8ba1]
lea  rdi, [rip+0x8c8a]
mov  rsi, QWORD PTR [rax]
call 0x3d30
test rax, rax
je   0x507f
mov  BYTE PTR [rip+0x8c12], 0x1
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b76]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
mov  BYTE PTR [rip+0x8bf1], 0x1
mov  BYTE PTR [rip+0x8bb2], al
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b4e]
mov  rdi, QWORD PTR [rax]
call 0x39a0
mov  BYTE PTR [rip+0x8bd0], 0x1
mov  DWORD PTR [rip+0x8b89], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b2d]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
mov  BYTE PTR [rip+0x8ba8], 0x1
mov  DWORD PTR [rip+0x8b65], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8b05]
mov  edx, 0xa
xor  esi, esi
mov  rdi, QWORD PTR [rax]
call 0x3b80
xor  edx, edx
mov  BYTE PTR [rip+0x8ba5], 0x1
test eax, eax
cmovs  eax, edx
mov  DWORD PTR [rip+0x8b2a], eax
jmp  0x4020
mov  rax, QWORD PTR [rip+0x8ad6]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x5258
mov  rdi, QWORD PTR [rip+0x8c33]
mov  rdx, rax
lea  rsi, [rip+0x3d9d]
call 0x3a40
test eax, eax
jns  0x430a
mov  r10, r15
mov  rbx, r15
mov  edx, 0x5
lea  rsi, [rip+0x3d89]
mov  QWORD PTR [rsp+0x8], r10
lea  rdi, [rip+0x3ae2]
call 0x3c90
mov  r9, rbx
mov  edx, 0x363
lea  rcx, [rip+0x55df]
mov  r8, rax
lea  rsi, [rip+0x3a9c]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
mov  rdi, QWORD PTR [rsp+0x8]
xor  r15d, r15d
call 0x3b20
jmp  0x4095
call 0x3880
mov  edx, 0x5
xor  ebp, ebp
xor  r15d, r15d
lea  rsi, [rip+0x4fe5]
lea  rdi, [rip+0x3a8a]
mov  rbx, rax
call 0x3c90
mov  r8, rbx
mov  edi, 0x1
lea  rcx, [rip+0x3cc9]
mov  rsi, rax
lea  rdx, [rip+0x3cc7]
xor  eax, eax
call 0x3920
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  BYTE PTR [rip+0x8bd2], 0x1
jmp  0x4020
mov  rdi, QWORD PTR [rsp]
call 0x3b20
mov  rax, QWORD PTR [rip+0x89dd]
mov  rdi, QWORD PTR [rax]
call 0x3a80
mov  QWORD PTR [rsp], rax
jmp  0x4020
mov  DWORD PTR [rip+0x8a0e], 0x0
jmp  0x4020
mov  DWORD PTR [rip+0x89ff], 0x1
jmp  0x4020
mov  rax, QWORD PTR [rip+0x89a7]
mov  rdi, QWORD PTR [rax]
call 0x3c60
mov  r15, rax
test rax, rax
je   0x526a
mov  rdi, QWORD PTR [rip+0x8b04]
mov  rdx, rax
lea  rsi, [rip+0x3c44]
call 0x3a40
test eax, eax
jns  0x430a
mov  r10, r15
mov  rbx, r15
mov  edx, 0x5
lea  rsi, [rip+0x3c36]
mov  QWORD PTR [rsp+0x8], r10
lea  rdi, [rip+0x39b3]
call 0x3c90
mov  r9, rbx
mov  edx, 0x354
lea  rcx, [rip+0x54b0]
mov  r8, rax
jmp  0x4561
mov  r12, QWORD PTR [rip+0x89cc]
mov  edx, 0x5
xor  ebp, ebp
xor  r15d, r15d
lea  rsi, [rip+0x435b]
lea  rdi, [rip+0x3978]
call 0x3c90
mov  rdx, QWORD PTR [rsp+0x8]
mov  rcx, r12
mov  edi, 0x1
mov  rsi, rax
xor  eax, eax
call 0x3920
mov  DWORD PTR [rsp+0x14], 0x0
jmp  0x4095
mov  rdi, QWORD PTR [rip+0x899c]
call 0x3b20
mov  rax, QWORD PTR [rip+0x88e0]
mov  rdi, QWORD PTR [rax]
call 0x3a80
mov  QWORD PTR [rip+0x8981], rax
jmp  0x4020
mov  rdi, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3b63]
call 0x3b60
test rax, rax
je   0x4748
mov  edx, 0x5
lea  rsi, [rip+0x41da]
lea  rdi, [rip+0x38ff]
mov  DWORD PTR [rip+0x88e5], 0x0
mov  BYTE PTR [rip+0x88ee], 0x0
call 0x3c90
jmp  0x3ff0
mov  r14, QWORD PTR [rsp+0x8]
lea  rsi, [rip+0x3b26]
mov  rdi, r14
call 0x3b60
test rax, rax
je   0x478f
mov  edx, 0x5
lea  rsi, [rip+0x41e3]
lea  rdi, [rip+0x38b8]
mov  DWORD PTR [rip+0x889e], 0x0
mov  BYTE PTR [rip+0x88a7], 0x1
call 0x3c90
jmp  0x3ff0
lea  rsi, [rip+0x3ae8]
mov  rdi, r14
call 0x3b60
test rax, rax
jne  0x4761
mov  edx, 0x5
lea  rsi, [rip+0x4201]
lea  rdi, [rip+0x3876]
mov  DWORD PTR [rip+0x885c], 0x1
mov  BYTE PTR [rip+0x8865], 0x1
call 0x3c90
jmp  0x3ff0
lea  r12, [rip+0x8848]
mov  rdi, r12
call 0x3820
test eax, eax
je   0x4df9
mov  rax, QWORD PTR [rip+0x87c9]
movsxd rax, DWORD PTR [rax]
lea  edx, [rax+0x1]
cmp  edx, ebp
je   0x4da5
xor  r13d, r13d
cmp  eax, ebp
jl   0x4e51
cmp  BYTE PTR [rip+0x881d], 0x0
lea  r14, [rip+0x88aa]
je   0x4b96
cmp  BYTE PTR [rip+0x883d], 0x0
je   0x4c52
mov  rsi, r12
mov  rdi, r14
call 0x3b30
test eax, eax
je   0x4e25
cmp  BYTE PTR [rip+0x87e9], 0x0
jne  0x48ab
cmp  DWORD PTR [rip+0x87d0], 0x1
je   0x4f1b
mov  rdi, QWORD PTR [rip+0x8947]
mov  rsi, r14
call 0x3a50
test eax, eax
js   0x5043
mov  rdi, r12
call 0x3e50
mov  QWORD PTR [rip+0x88e0], rax
call 0x3e80
mov  rdi, QWORD PTR [rip+0x891c]
mov  rsi, rax
mov  rbp, rax
call 0x3a20
mov  rdi, QWORD PTR [rip+0x88b2]
mov  rdx, rbp
mov  esi, 0x1
call 0x3ee0
mov  rdi, rbp
call 0x38e0
cmp  BYTE PTR [rip+0x88fe], 0x0
jne  0x4c68
lea  rbp, [rip+0x39d3]
mov  rdi, QWORD PTR [rip+0x8882]
mov  rsi, rbp
call 0x38b0
test eax, eax
je   0x4cfd
lea  r14, [rip+0x39df]
mov  rdi, QWORD PTR [rip+0x8864]
mov  rsi, r14
call 0x38b0
test eax, eax
je   0x4b23
cmp  BYTE PTR [rip+0x8731], 0x0
je   0x490a
cmp  DWORD PTR [rip+0x8718], 0x1
je   0x5027
call 0x38f0
mov  r15, rax
test rax, rax
je   0x4ec2
mov  rdi, rax
call 0x3ab0
mov  rdi, rax
mov  QWORD PTR [rip+0x8893], rax
call 0x3bb0
test eax, eax
jne  0x510f
lea  rbp, [rip+0xe9f]
xor  edx, edx
mov  edi, 0x2
mov  rsi, rbp
call 0x3f00
xor  edx, edx
mov  rsi, rbp
mov  edi, 0xf
call 0x3f00
xor  edx, edx
mov  edi, 0xa
lea  rsi, [rip+0x3083]
call 0x3f00
call 0x3be0
cmp  BYTE PTR [rip+0x86ae], 0x0
je   0x49cf
cmp  DWORD PTR [rip+0x8695], 0x1
lea  rdx, [rip+0x2c02]
lea  rcx, [rip+0x281b]
mov  rax, QWORD PTR [rip+0x8824]
cmovne rcx, rdx
setne  dl
lea  r8, [rsp+0x18]
setne  sil
movzx  edx, dl
movzx  esi, sil
mov  rdi, rax
add  edx, 0x1
call QWORD PTR [rax+0x8]
mov  QWORD PTR [rip+0x87d5], rax
mov  rbp, rax
test rax, rax
je   0x5162
mov  rdx, QWORD PTR [rip+0x8772]
mov  rdi, QWORD PTR [rip+0x87e3]
xor  esi, esi
call 0x3cf0
mov  QWORD PTR [rip+0x87cd], rax
mov  rbp, rax
test rax, rax
je   0x4feb
xor  edx, edx
lea  rsi, [rip+0x21c0]
mov  rdi, rax
call 0x3d40
mov  rsi, QWORD PTR [rsp]
xor  ecx, ecx
xor  edx, edx
mov  rdi, QWORD PTR [rip+0x87a1]
call 0x39d0
test eax, eax
js   0x50cd
cmp  BYTE PTR [rip+0x8785], 0x0
je   0x4e7d
call 0x3d50
mov  rdi, QWORD PTR [rip+0x877b]
xor  ecx, ecx
lea  rdx, [rip+0x2fea]
lea  rsi, [rax+0xc350]
call 0x3e30
mov  rbp, rax
test rax, rax
je   0x5303
lea  rsi, [rsp+0x14]
mov  rdi, r15
call 0x3c30
test eax, eax
jns  0x4095
mov  edx, 0x5
lea  rsi, [rip+0x3986]
lea  rdi, [rip+0x35a6]
call 0x3c90
lea  rcx, [rip+0x50ab]
mov  edx, 0x4c7
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3561]
xor  eax, eax
call 0x3a00
jmp  0x4095
lea  rax, [rip+0x5082]
lea  rsi, [rip+0x3547]
push rdx
mov  edx, 0x4d3
push rax
lea  r9, [rip+0x371b]
lea  r8, [rip+0x3a4e]
push 0x4d3
lea  rcx, [rip+0x505f]
push rsi
xor  edi, edi
xor  eax, eax
call 0x3a00
add  rsp, 0x20
call 0x38c0
lea  rsi, [rip+0x350c]
push rax
lea  rax, [rip+0x5038]
mov  edx, 0x4d8
push rax
lea  r9, [rip+0x36d9]
lea  r8, [rip+0x3a0c]
push 0x4d8
lea  rcx, [rip+0x501d]
push rsi
jmp  0x4adf
mov  rdi, QWORD PTR [rip+0x861e]
test r13, r13
je   0x4f2f
mov  rdx, r13
mov  rsi, r14
call 0x3a40
mov  rdi, QWORD PTR [rip+0x8603]
mov  rsi, r14
call 0x38b0
test eax, eax
jne  0x48f4
mov  edx, 0x5
lea  rsi, [rip+0x3846]
lea  rdi, [rip+0x34c4]
call 0x3c90
lea  rcx, [rip+0x4fc9]
mov  edx, 0x48a
mov  r8, rax
lea  rsi, [rip+0x3481]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
xor  r15d, r15d
jmp  0x4095
lea  r14, [rsp+0x20]
xor  eax, eax
mov  ecx, 0x8
mov  esi, 0x10
mov  rdi, r14
rep stos DWORD PTR es:[rdi], eax
mov  eax, DWORD PTR [rip+0x846a]
test eax, eax
je   0x4f4f
xor  edi, edi
test eax, eax
mov  rdx, r14
sete dil
xor  ecx, ecx
call 0x39c0
mov  QWORD PTR [rip+0x85cd], rax
test rax, rax
je   0x4050
cmp  DWORD PTR [rip+0x8439], 0x1
lea  r14, [rip+0x84d6]
jne  0x481c
cmp  BYTE PTR [rip+0x846a], 0x0
jne  0x521c
mov  rdi, QWORD PTR [rip+0x859c]
mov  rsi, r12
call 0x3970
test eax, eax
js   0x52c7
cmp  BYTE PTR [rip+0x8445], 0x0
mov  BYTE PTR [rip+0x843f], 0x1
lea  r14, [rip+0x8497]
jne  0x481c
mov  rdi, QWORD PTR [rip+0x856a]
mov  rsi, r14
call 0x3f20
test eax, eax
js   0x5344
mov  BYTE PTR [rip+0x8413], 0x1
jmp  0x481c
0f b6 35 cf 83 00 00  movzx  esi, BYTE PTR [rip+0x83cf]
xor  edx, edx
mov  rdi, r14
call 0x3d70
jmp  0x4829
lea  rdi, [rsp+0x60]
mov  rdx, r14
mov  esi, 0x150
call 0x3ca0
mov  rdx, r12
lea  rdi, [rsp+0x40]
mov  esi, 0x20
mov  rbx, rax
call 0x3d10
cmp  DWORD PTR [rip+0x8386], 0x0
mov  edx, 0x5
mov  rbp, rax
jne  0x4f00
lea  rsi, [rip+0x36e9]
lea  rdi, [rip+0x337a]
call 0x3c90
mov  r14, rax
mov  edx, 0x5
lea  rsi, [rip+0x4aea]
lea  rdi, [rip+0x335f]
call 0x3c90
push rbx
lea  rsi, [rip+0x332a]
xor  edi, edi
push rbp
mov  r8, rax
mov  r9, r14
lea  rcx, [rip+0x4e53]
mov  edx, 0x471
xor  eax, eax
call 0x3a00
pop  rsi
pop  rdi
jmp  0x48b8
mov  rdi, QWORD PTR [rsp+0x8]
call 0x3c60
mov  r14, rax
test rax, rax
je   0x48d6
mov  rdi, QWORD PTR [rip+0x842e]
mov  rdx, rax
mov  rsi, rbp
call 0x3a40
mov  rdi, r14
call 0x3b20
jmp  0x48d6
mov  rdi, r15
call 0x3b20
mov  rax, QWORD PTR [rip+0x828f]
mov  edx, 0x5
lea  rsi, [rip+0x35ac]
lea  rdi, [rip+0x32d8]
mov  rbx, QWORD PTR [rax]
call 0x3c90
lea  rcx, [rip+0x4dda]
mov  edx, 0x3c6
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  rbx, QWORD PTR [r15]
mov  edx, 0x5
lea  rsi, [rip+0x358d]
lea  rdi, [rip+0x32a3]
call 0x3c90
lea  rcx, [rip+0x4da8]
mov  edx, 0x3d9
mov  r8, rax
mov  r9, rbx
jmp  0x4226
mov  r13, QWORD PTR [rbx+rax*8]
xor  esi, esi
mov  eax, 0x241
mov  edx, 0x1b6
cmp  DWORD PTR [rip+0x8260], 0x1
cmovne esi, eax
mov  rdi, r13
call 0x3cd0
mov  ebp, eax
test eax, eax
js   0x4e84
xor  esi, esi
cmp  DWORD PTR [rip+0x8242], 0x1
mov  edi, eax
setne  sil
call 0x3810
test eax, eax
js   0x4fad
mov  edi, ebp
call 0x3c50
jmp  0x4808
mov  edx, 0x5
lea  rsi, [rip+0x352d]
lea  rdi, [rip+0x3220]
call 0x3c90
lea  rcx, [rip+0x4d25]
mov  edx, 0x3f3
mov  r8, rax
jmp  0x4b7c
mov  edx, 0x5
lea  rsi, [rip+0x491f]
lea  rdi, [rip+0x31f4]
call 0x3c90
lea  rcx, [rip+0x4cf9]
mov  edx, 0x457
mov  r8, rax
jmp  0x4b7c
mov  edx, 0x5
lea  rsi, [rip+0x3508]
lea  rdi, [rip+0x31c8]
call 0x3c90
lea  rcx, [rip+0x4ccd]
mov  edx, 0x409
mov  r8, rax
jmp  0x4b7c
xor  ebp, ebp
jmp  0x4a5e
call 0x3c70
mov  edi, DWORD PTR [rax]
call 0x3b50
mov  edx, 0x5
lea  rsi, [rip+0x34b3]
lea  rdi, [rip+0x3189]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x3fd
lea  rcx, [rip+0x4c83]
mov  r8, rax
jmp  0x4226
mov  edx, 0x5
lea  rsi, [rip+0x34f3]
lea  rdi, [rip+0x3157]
xor  ebp, ebp
call 0x3c90
lea  rcx, [rip+0x4c5a]
mov  edx, 0x494
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x3110]
xor  eax, eax
call 0x3a00
jmp  0x4095
lea  rsi, [rip+0x3497]
lea  rdi, [rip+0x311e]
call 0x3c90
mov  r14, rax
jmp  0x4cba
mov  rdi, r12
call 0x3ed0
mov  QWORD PTR [rip+0x8266], rax
jmp  0x4878
mov  rsi, rbp
call 0x3df0
mov  r13, rax
test rax, rax
je   0x4b3e
mov  rdi, QWORD PTR [rip+0x81fe]
jmp  0x4b33
mov  rsi, r12
mov  rdi, r14
call 0x3d20
test eax, eax
js   0x528b
cmp  DWORD PTR [rip+0x80a7], 0x0
jle  0x519e
mov  edx, DWORD PTR [rip+0x809b]
mov  eax, DWORD PTR [rsp+0x30]
or   eax, edx
cmp  edx, 0x200000
je   0x5144
cmp  edx, 0x170000
je   0x5144
mov  DWORD PTR [rsp+0x30], eax
mov  eax, DWORD PTR [rip+0x807f]
cmp  eax, 0x1
sbb  esi, esi
and  esi, 0x10
add  esi, 0x10
jmp  0x4bba
call 0x3c70
mov  edi, DWORD PTR [rax]
call 0x3b50
mov  edx, 0x5
lea  rsi, [rip+0x3395]
lea  rdi, [rip+0x3060]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x402
lea  rcx, [rip+0x4b5a]
mov  r8, rax
jmp  0x4226
mov  edx, 0x5
lea  rsi, [rip+0x33f5]
lea  rdi, [rip+0x302e]
call 0x3c90
lea  rcx, [rip+0x4b33]
mov  edx, 0x4b2
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2fe9]
xor  eax, eax
call 0x3a00
jmp  0x4095
mov  rdi, r12
call 0x3a70
mov  rdi, rax
call 0x37d0
mov  QWORD PTR [rip+0x8032], rax
jmp  0x490a
mov  edx, 0x5
lea  rsi, [rip+0x4731]
lea  rdi, [rip+0x2fd6]
call 0x3c90
lea  rcx, [rip+0x4adb]
mov  edx, 0x462
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2f91]
xor  eax, eax
call 0x3a00
jmp  0x4869
mov  r15, rax
mov  rax, QWORD PTR [rip+0x7f47]
mov  edx, 0x5
lea  rsi, [rip+0x324b]
lea  rdi, [rip+0x2f90]
mov  rbx, QWORD PTR [rax]
call 0x3c90
lea  rcx, [rip+0x4a92]
mov  edx, 0x388
mov  r8, rax
mov  r9, rbx
lea  rsi, [rip+0x2f47]
xor  edi, edi
xor  eax, eax
xor  ebp, ebp
call 0x3a00
jmp  0x4095
mov  rdi, QWORD PTR [rip+0x80e4]
call 0x3aa0
mov  edi, eax
call 0x3850
mov  edx, 0x5
lea  rsi, [rip+0x473c]
lea  rdi, [rip+0x2f39]
mov  rbx, rax
call 0x3c90
mov  r9, rbx
mov  edx, 0x4ba
lea  rcx, [rip+0x4a33]
mov  r8, rax
jmp  0x50b6
lea  rax, [rip+0x4a22]
lea  rsi, [rip+0x2ee7]
push rcx
mov  edx, 0x49a
push rax
lea  r9, [rip+0x46d5]
lea  r8, [rip+0x33ee]
push 0x49a
lea  rcx, [rip+0x49ff]
push rsi
jmp  0x4adf
mov  ecx, eax
and  eax, 0xcfff0000
and  ecx, 0xcfffffff
or   eax, 0x60
cmp  edx, 0x200000
cmovne eax, ecx
jmp  0x4f93
mov  edx, 0x5
lea  rsi, [rip+0x326d]
lea  rdi, [rip+0x2eb7]
call 0x3c90
lea  rcx, [rip+0x49bc]
mov  edx, 0x4ab
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2e72]
xor  eax, eax
call 0x3a00
jmp  0x4095
test r13, r13
je   0x527c
mov  esi, 0x2e
mov  rdi, r13
call 0x3ae0
test rax, rax
je   0x527c
lea  rdi, [rax+0x1]
call 0x3c10
mov  DWORD PTR [rip+0x7e44], eax
test eax, eax
jle  0x527c
cmp  eax, 0x10000
jne  0x4f6f
0f b6 05 42 7e 00 00  movzx  eax, BYTE PTR [rip+0x7e42]
cmp  al, 0x2
ja   0x5203
cmp  BYTE PTR [rip+0x7e6f], 0x0
je   0x520d
cmp  al, 0x1
je   0x538d
cmp  al, 0x2
je   0x539f
mov  DWORD PTR [rip+0x7e03], 0x130000
mov  eax, DWORD PTR [rip+0x7dfd]
or   DWORD PTR [rsp+0x30], eax
jmp  0x4f97
mov  edx, 0x5
lea  rsi, [rip+0x4458]
lea  rdi, [rip+0x2dfd]
call 0x3c90
lea  rcx, [rip+0x4902]
mov  edx, 0x440
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2db8]
xor  eax, eax
call 0x3a00
jmp  0x4bfd
mov  r10, rax
mov  rax, QWORD PTR [rip+0x7d6e]
mov  rbx, QWORD PTR [rax]
jmp  0x4532
mov  r10, rax
mov  rax, QWORD PTR [rip+0x7d5c]
mov  rbx, QWORD PTR [rax]
jmp  0x4661
mov  DWORD PTR [rip+0x7d8a], 0x10000
jmp  0x51df
mov  edx, 0x5
lea  rsi, [rip+0x43b1]
lea  rdi, [rip+0x2d8e]
call 0x3c90
lea  rcx, [rip+0x4893]
mov  edx, 0x414
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2d49]
xor  eax, eax
call 0x3a00
jmp  0x4090
mov  edx, 0x5
lea  rsi, [rip+0x440d]
lea  rdi, [rip+0x2d52]
call 0x3c90
lea  rcx, [rip+0x4857]
mov  edx, 0x443
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2d0d]
xor  eax, eax
call 0x3a00
jmp  0x4090
mov  edx, 0x5
lea  rsi, [rip+0x4539]
lea  rdi, [rip+0x2d16]
call 0x3c90
lea  rcx, [rip+0x481b]
mov  edx, 0x4c0
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2cd1]
xor  eax, eax
call 0x3a00
jmp  0x4095
call 0x3cb0
cmp  BYTE PTR [rip+0x7cdd], 0x2
jbe  0x481c
mov  edx, 0x5
lea  rsi, [rip+0x43bb]
lea  rdi, [rip+0x2cc8]
call 0x3c90
lea  rcx, [rip+0x47cd]
mov  edx, 0x44c
xor  edi, edi
mov  r8, rax
lea  rsi, [rip+0x2c83]
xor  eax, eax
call 0x3a00
jmp  0x481c
cmp  DWORD PTR [rip+0x7d30], 0x0
jne  0x5203
jmp  0x520d
cmp  DWORD PTR [rip+0x7d1e], 0x1
jne  0x5203
cmp  DWORD PTR [rip+0x7d15], 0x2
jne  0x5203
jmp  0x520d
endbr64
xor  ebp, ebp
mov  r9, rdx
pop  rsi
mov  rdx, rsp
and  rsp, 0xfffffffffffffff0
push rax
push rsp
xor  r8d, r8d
xor  ecx, ecx
lea  rdi, [rip+0xfffffffffffff5b1]
call QWORD PTR [rip+0x95c3]
hlt
endbr64
push rbp
mov  r10, rsi
mov  ebp, edi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x2150
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rcx, rsp
mov  rdx, r10
mov  QWORD PTR [rsp+0x8], rax
lea  rax, [rsp+0x20]
mov  esi, 0x1
mov  QWORD PTR [rsp+0x10], rax
mov  rax, QWORD PTR [rip+0x7e6f]
mov  DWORD PTR [rsp], 0x10
mov  rdi, QWORD PTR [rax]
mov  DWORD PTR [rsp+0x4], 0x30
call 0x1260
test ebp, ebp
jne  0x21bd
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x21c4
add  rsp, 0xd0
pop  rbp
ret
mov  edi, ebp
call 0x13d0
call 0x12f0
endbr64
xor  eax, eax
endbr64
endbr64
push rbp
xor  edi, edi
call 0x27a0
test rax, rax
je   0x7db0
mov  rbp, rax
mov  rax, QWORD PTR [rip+0x422d]
mov  rdi, rbp
mov  rsi, QWORD PTR [rax]
call 0x25f0
mov  rdi, rbp
pop  rbp
jmp  0x2510
nop
pop  rbp
endbr64
xor  eax, eax
endbr64
push rbp
mov  r10, rdi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x7e23
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rdx, rsp
mov  rsi, r10
mov  QWORD PTR [rsp+0x8], rax
xor  edi, edi
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x27a0
mov  rbp, rax
test rax, rax
je   0x7e88
mov  rax, QWORD PTR [rip+0x4153]
mov  rdi, rbp
mov  rsi, QWORD PTR [rax]
call 0x25f0
mov  rdi, rbp
call 0x2510
mov  rax, QWORD PTR [rsp+0x18]
sub  rax, QWORD PTR fs:0x28
jne  0x7ea1
add  rsp, 0xd0
pop  rbp
ret
endbr64
endbr64
push rbp
mov  r10, rdi
sub  rsp, 0xd0
mov  QWORD PTR [rsp+0x28], rsi
mov  QWORD PTR [rsp+0x30], rdx
mov  QWORD PTR [rsp+0x38], rcx
mov  QWORD PTR [rsp+0x40], r8
mov  QWORD PTR [rsp+0x48], r9
test al, al
je   0x8a93
movaps XMMWORD PTR [rsp+0x50], xmm0
movaps XMMWORD PTR [rsp+0x60], xmm1
movaps XMMWORD PTR [rsp+0x70], xmm2
movaps XMMWORD PTR [rsp+0x80], xmm3
movaps XMMWORD PTR [rsp+0x90], xmm4
movaps XMMWORD PTR [rsp+0xa0], xmm5
movaps XMMWORD PTR [rsp+0xb0], xmm6
movaps XMMWORD PTR [rsp+0xc0], xmm7
mov  rax, QWORD PTR fs:0x28
mov  QWORD PTR [rsp+0x18], rax
xor  eax, eax
lea  rax, [rsp+0xe0]
mov  rdx, rsp
mov  rsi, r10
mov  QWORD PTR [rsp+0x8], rax
xor  edi, edi
lea  rax, [rsp+0x20]
mov  DWORD PTR [rsp], 0x8
mov  DWORD PTR [rsp+0x4], 0x30
mov  QWORD PTR [rsp+0x10], rax
call 0x27a0
mov  rbp, rax
test rax, rax
je   0x8af8
mov  rax, QWORD PTR [rip+0x34e3]
mov  rdi, rbp
mov  rsi, QWORD PTR [rax]
call 0x25f0
mov  rdi, rbp
call 0x2510
lea  rcx, [rip+0xac1]
mov  edx, 0x31
lea  rsi, [rip+0x650]
lea  rdi, [rip+0x663]
call 0x2470
endbr64
sub  rsp, 0x8
mov  eax, 0x1
test rdi, rdi
cmove  rdi, rax
mov  edi, edi
call 0xc490
test rax, rax
je   0x1a635
add  rsp, 0x8
ret
mov  rdi, QWORD PTR [rip+0x15c04]
test rdi, rdi
je   0x1a652
call 0x1a5f0
lea  rdi, [rip+0x994e]
call 0x1a5f0
lea  rdi, [rip+0x6ce8]
call 0x1a5f0
or   edi, 0xffffffff
endbr64
test rdi, rdi
je   0x1a100
jmp  0xc440
xchg ax, ax
endbr64
test rdi, rdi
je   0x1a740
jmp  0xc440
xchg ax, ax
ret
